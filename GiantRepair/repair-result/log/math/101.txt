Repair : math_101
Current failed test : org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter | 2019.09.08 AD at 09:38:28 CDT
Location : org.apache.commons.math.complex.ComplexFormat.parse:[349, 350, 361, 364, 365, 374, 375, 376, 377, 321, 324, 327, 328, 337, 338, 339, 340]#0.3779644730092272
Compute Candidate : 2019.09.08 AD at 09:38:54 CDT - 2019.09.08 AD at 10:29:43 CDT , PNumber : 11347, CandNumber : 489 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int startIndex=pos.getIndex();
+ int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:29:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+ int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
-int sign=0;
+ int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im!=null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re!=null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
-int sign=0;
+long sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=0;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+startIndex=pos.getIndex();
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+startIndex=pos.getIndex();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())==0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=2;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
-int sign=0;
+float sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=3;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex-n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+sign;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+initialIndex;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+startIndex;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+c;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(source==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(pos==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+Integer n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+Integer endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+Integer initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
-int sign=0;
+Integer sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int startIndex=pos.getIndex();
+Integer startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=initialIndex;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=startIndex;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=c;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=sign;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())<0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=10;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())>0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=n+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=initialIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=c+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=sign+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=100;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
+case 401 :
+
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1693/pattern-ver1-serial/src.main.java.uk.ac.ic.wlgitbridge.snapshot.getdoc.GetDocResult.java-fromJSON.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+int n=toString().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(toString())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
+case 4 :
+
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2088/pattern-ver1-serial/core.src.com.finalstand.game.Screens.PlayScreen.java-findCreepStartingPos.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+3;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+startIndex=pos.getIndex();
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.Iterator;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
+
+case 5 :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V13/1378/pattern-ver1-serial/src.haven.OptWnd.java-changed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+pos.setIndex(initialIndex);
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+pos.setErrorIndex(startIndex);
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+ final int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ final int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ final Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ final char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ final int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:32:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=1;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=-1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=-1;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ final int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ final Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ final Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ final char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ final int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ final char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int startIndex=pos.getIndex();
+ int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=0;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter().trim())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=2;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=3;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+sign++;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+initialIndex++;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+n++;
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+initialIndex++;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
+initialIndex++;
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+endIndex++;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+initialIndex++;
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+startIndex++;
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign++;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+sign++;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+sign++;
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+n++;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+startIndex++;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+n--;
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+initialIndex--;
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+endIndex--;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+initialIndex--;
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+sign--;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+startIndex--;
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign--;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+sign--;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+sign--;
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+initialIndex--;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+startIndex++;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/5574/pattern-ver1-serial/no.ntnu.item.semesterassignment.src.no.ntnu.item.semesterassignment.taxidispatcher.TaxiDispatcher.java-getRequestQueuePosition.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
+startIndex++;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=10;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=100;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+synchronized(this){
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+synchronized(pos){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+synchronized(pos){
 pos.setIndex(initialIndex);
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+synchronized(pos){
 pos.setErrorIndex(startIndex);
+}
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+synchronized(pos){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
-return new Complex(re.doubleValue(),im.doubleValue()*sign);
+return new Complex(re.doubleValue(),sign*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
-return new Complex(re.doubleValue(),im.doubleValue()*sign);
+return new Complex(re.doubleValue(),startIndex*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo((getImaginaryCharacter()).toLowerCase())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+(int)(n);
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+-1;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+synchronized(this){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+synchronized(this){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+synchronized(this){
 pos.setIndex(initialIndex);
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+synchronized(this){
 pos.setErrorIndex(startIndex);
+}
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+synchronized(this){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+synchronized(this){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+synchronized(this){
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
+}
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+synchronized(this){
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
+}
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+synchronized(this){
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+if(pos!=null){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(pos!=null){
 pos.setIndex(initialIndex);
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+if(pos!=null){
 pos.setErrorIndex(startIndex);
+}
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+if(pos!=null){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im.equals(null)){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re.equals(null)){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(pos.getIndex()!=0){
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:36:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+if(initialIndex>0){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(initialIndex>0){
 pos.setIndex(initialIndex);
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+if(startIndex>0){
 pos.setErrorIndex(startIndex);
+}
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+if(initialIndex>0){
 pos.setIndex(initialIndex);
+}
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ final Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ final char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ final int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ final Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ final Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ final int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(30-(startIndex),endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,30-(endIndex)).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int startIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ @SuppressWarnings("UnusedAssignment") char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ @SuppressWarnings("UnusedAssignment") int startIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ @SuppressWarnings("UnusedAssignment") char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
-Number re=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ @SuppressWarnings("UnusedAssignment") int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
-int sign=0;
+ @SuppressWarnings("UnusedAssignment") int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int startIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
-int sign=0;
+ @SuppressWarnings("UnusedAssignment") int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ @SuppressWarnings("UnusedAssignment") Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+ @SuppressWarnings("UnusedAssignment") int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(source.substring(startIndex,endIndex)!=null){
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+int endIndex=startIndex+1+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+source=source;
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+pos=pos;
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
-int initialIndex=pos.getIndex();
+ final int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+ final int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
-int n=getImaginaryCharacter().length();
+ final int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+ final int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
-char c=parseNextCharacter(source,pos);
+ final char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
-Number im=parseNumber(source,getRealFormat(),pos);
+ final Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
-int endIndex=startIndex+n;
+ final int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+im=1000;
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+n=1000;
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(true){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(true){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=1*initialIndex;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=1*startIndex;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=1*c;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=1*sign;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo("https://myschool.ru.is/myschool/"+getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=0xEfffffff&(1);
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=0xEfffffff&(pos.getIndex());
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter()+" votes")!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+int a=0;
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+int a=0;
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:38:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+int a=0;
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+int a=0;
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo("There was a problem with the call to ManyWho: "+getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+String OUTSTRING="";
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+String OUTSTRING="";
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+String OUTSTRING="";
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+String OUTSTRING="";
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+if(source.isEmpty()){
+return null;
+}
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(Math.round(startIndex),endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,Math.round(endIndex)).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+return null;
+}
+if(equals(source)){
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+return null;
+}
+if(equals(pos)){
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(equals(source)){
+return null;
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(equals(pos)){
+return null;
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(equals(source)){
+return null;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(equals(source)){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(equals(pos)){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(equals(source)){
+return null;
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(equals(pos)){
+return null;
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(equals(source)){
+return null;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+int indexSelection=0;
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(Math.max(startIndex,endIndex),endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,Math.max(startIndex,endIndex)).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex*2,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex*2).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+source="";
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1830/pattern-ver1-serial/SR03.src.java.controler.ActionQuestion.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo("PATH: \n"+getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
+if(pos!=null){
 pos.setIndex(initialIndex);
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/1378/pattern-ver1-serial/src.fyp.samoleary.WildlifePrototype2.GMap.GMapActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
+if(pos!=null){
 pos.setErrorIndex(startIndex);
+}
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/1378/pattern-ver1-serial/src.fyp.samoleary.WildlifePrototype2.GMap.GMapActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(String.valueOf(getImaginaryCharacter()))!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=sign+1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=startIndex+pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
-sign=-1;
+sign=sign+-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=(1/1000);
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=(pos.getIndex()/1000);
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+int a=1;
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+int a=1;
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+int a=1;
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+int a=1;
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter()+"/logout")!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo("\nDealer has: \n"+getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+boolean b=true;
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+boolean b=true;
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+boolean b=true;
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+boolean b=true;
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=pos.getIndex()+1;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+if(pos==null){
+return null;
+}
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(pos==null){
+return null;
+}
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+if(pos==null){
+return null;
+}
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+if(source==null){
+return null;
+}
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+if(pos==null){
+return null;
+}
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im==null){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+if(re==null){
+return null;
+}
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(pos==null){
+return null;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+return null;
+}
+if(source==null){
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+return null;
+}
+if(pos==null){
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(source==null){
+return null;
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(pos==null){
+return null;
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:41:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(source==null){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(pos==null){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(source==null){
+return null;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+synchronized(this){
 pos.setIndex(initialIndex);
 return null;
+}
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+synchronized(this){
 pos.setIndex(initialIndex);
 return null;
+}
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(source==null){
+return null;
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+if(pos==null){
+return null;
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(im==null){
+return null;
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(re==null){
+return null;
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(re==null){
+return null;
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+if("&null".equals(pos)){
+return null;
+}
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if("&null".equals(source)){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+if("&null".equals(pos)){
+return null;
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if("&null".equals(pos)){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
+if("&null".equals(pos)){
+return null;
+}
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if("&null".equals(im)){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if("&null".equals(n)){
+return null;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+if("&null".equals(initialIndex)){
+return null;
+}
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if("&null".equals(endIndex)){
+return null;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if("&null".equals(initialIndex)){
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:42:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+parseAndIgnoreWhitespace(source,pos);
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+parseAndIgnoreWhitespace(source,pos);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+parseAndIgnoreWhitespace(source,pos);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+pos.setErrorIndex(startIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3555/pattern-ver1-serial/bpm.bonita-core.bonita-process-engine.src.main.java.org.bonitasoft.engine.api.impl.PlatformAPIImpl.java-createTenantFolderInBonitaHome.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
-pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
-pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+pos.setIndex(initialIndex);
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+pos.setIndex(initialIndex);
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
-pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+pos.setIndex(initialIndex);
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+sign=1;
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+sign=1;
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign=1;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+sign=1;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+parseAndIgnoreWhitespace(source,pos);
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+parseAndIgnoreWhitespace(source,pos);
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im.equals("-1")){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+if(re.equals("-1")){
+return null;
+}
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+parseAndIgnoreWhitespace(source,pos);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+pos.setIndex(initialIndex);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+pos.setIndex(initialIndex);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
-pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+pos.setIndex(initialIndex);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
+pos.setErrorIndex(startIndex);
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
-pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4301/pattern-ver1-serial/api.src.main.java.com.abiquo.api.services.cloud.VirtualMachineService.java-changeVirtualMachineState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+pos.setIndex(initialIndex);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+pos.setIndex(initialIndex);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
-pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
 pos.setIndex(initialIndex);
+if(re==null){
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(source==null){
+return null;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+try{
+parseAndIgnoreWhitespace(source,pos);
+}finally{
 parseAndIgnoreWhitespace(source,pos);
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+try{
+parseAndIgnoreWhitespace(source,pos);
+}finally{
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+try{
 pos.setIndex(endIndex);
+}finally{
+parseAndIgnoreWhitespace(source,pos);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+assert (pos!=null);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+assert (source!=null);
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+assert (pos!=null);
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+assert (pos!=null);
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+assert (pos!=null);
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+assert (im!=null);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+assert (!source.isEmpty());
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
-pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+pos.setIndex(initialIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+if(source!=null){
+int initialIndex=pos.getIndex();
+parseAndIgnoreWhitespace(source,pos);
+Number re=parseNumber(source,getRealFormat(),pos);
+if(re==null){
+pos.setIndex(initialIndex);
+return null;
+}
+int startIndex=pos.getIndex();
+char c=parseNextCharacter(source,pos);
+int sign=0;
+switch (c){
+case 0 :
+
+return new Complex(re.doubleValue(),0.0);
+case '-' :
+
+sign=-1;
+break;
+case '+' :
+
+sign=1;
+break;
+default :
+
+pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
+return null;
+}
+parseAndIgnoreWhitespace(source,pos);
+Number im=parseNumber(source,getRealFormat(),pos);
+if(im==null){
+pos.setIndex(initialIndex);
+return null;
+}
+int n=getImaginaryCharacter().length();
+startIndex=pos.getIndex();
+int endIndex=startIndex+n;
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
+return null;
+}
+pos.setIndex(endIndex);
+return new Complex(re.doubleValue(),im.doubleValue()*sign);
+}
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+if(pos!=null){
+int initialIndex=pos.getIndex();
+parseAndIgnoreWhitespace(source,pos);
+Number re=parseNumber(source,getRealFormat(),pos);
+if(re==null){
+pos.setIndex(initialIndex);
+return null;
+}
+int startIndex=pos.getIndex();
+char c=parseNextCharacter(source,pos);
+int sign=0;
+switch (c){
+case 0 :
+
+return new Complex(re.doubleValue(),0.0);
+case '-' :
+
+sign=-1;
+break;
+case '+' :
+
+sign=1;
+break;
+default :
+
+pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
+return null;
+}
+parseAndIgnoreWhitespace(source,pos);
+Number im=parseNumber(source,getRealFormat(),pos);
+if(im==null){
+pos.setIndex(initialIndex);
+return null;
+}
+int n=getImaginaryCharacter().length();
+startIndex=pos.getIndex();
+int endIndex=startIndex+n;
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+pos.setIndex(initialIndex);
+pos.setErrorIndex(startIndex);
+return null;
+}
+pos.setIndex(endIndex);
+return new Complex(re.doubleValue(),im.doubleValue()*sign);
+}
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+if(pos!=null){
+pos.setIndex(initialIndex);
+return null;
+}
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(source.contains(source)){
+return null;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+return null;
+}
+if(sign==0){
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
+if(startIndex==0){
+return null;
+}
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+assert (im!=parseNumber(source,getRealFormat(),pos));
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+assert (n!=getImaginaryCharacter().length());
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+assert (endIndex!=startIndex+n);
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+assert (initialIndex!=pos.getIndex());
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+assert (re!=parseNumber(source,getRealFormat(),pos));
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+assert (sign!=0);
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+assert (startIndex!=pos.getIndex());
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
+assert (c!=parseNextCharacter(source,pos));
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+pos.setErrorIndex(startIndex);
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/198/pattern-ver1-serial/src.com.bekvon.bukkit.residence.listeners.ResidencePlayerListener.java-onPlayerMove.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=-1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+sign++;
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=-1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+sign++;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=-1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign++;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+startIndex++;
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=-1;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=-1;
+startIndex++;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=-1;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+startIndex++;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+assert (pos!=null);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:46:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+assert (pos!=null);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
+assert (pos!=null);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+assert (source!=null);
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+assert (pos!=null);
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(im.equals(null)){
+return null;
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im.equals(null)){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(re.equals(null)){
+return null;
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(re.equals(null)){
+return null;
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(im.equals("655")){
+System.out.println();
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(re.equals("655")){
+System.out.println();
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(re.equals("655")){
+System.out.println();
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im.equals("655")){
+System.out.println();
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+pos.setErrorIndex(startIndex);
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
-pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im==null||"查看红包".equals(im)){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re==null||"查看红包".equals(re)){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+startIndex=pos.getIndex();
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+startIndex=pos.getIndex();
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(source.isEmpty()){
+source=null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+sign=-1;
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:47:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+startIndex=pos.getIndex();
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+startIndex=pos.getIndex();
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+sign=-1;
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign=-1;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+sign=-1;
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im==null||im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re==null||re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+assert (initialIndex>=0):"Receive a negative tratment";
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+assert (initialIndex>=0):"Receive a negative tratment";
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+assert (n>=0):"Receive a negative tratment";
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+assert (initialIndex>=0):"Receive a negative tratment";
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign=1;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+sign=1;
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+return null;
+}
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:48:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+assert (source!=null):"Appointments day is not allowed to be null!";
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+assert (im!=null):"Appointments day is not allowed to be null!";
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+assert (initialIndex!=0):"Receive a size tratment";
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
+assert (initialIndex!=0):"Receive a size tratment";
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+assert (n!=0):"Receive a size tratment";
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+assert (initialIndex!=0):"Receive a size tratment";
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
+if(source.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(source.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(source.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+if(pos==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(pos==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(pos==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:49:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
+if(pos==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
+if(sign<0){
+sign=0;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex=0;
+}
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(sign!=1){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(sign!=1){
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(pos!=null){
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/64/pattern-ver1-serial/app.src.main.java.com.example.scame.lighttube.presentation.fragments.ChannelVideosFragment.java-onSaveInstanceState.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+if(initialIndex<=0){
+initialIndex=1;
+}
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(initialIndex<=0){
+initialIndex=1;
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(initialIndex<=0){
+initialIndex=1;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(initialIndex<=0){
+initialIndex=1;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(startIndex<=0){
+startIndex=1;
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(endIndex>startIndex){
+endIndex=startIndex;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
+if(startIndex>endIndex){
+startIndex=endIndex;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+boolean haveBreadCrumbs=false;
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im==null&&haveBreadCrumbs){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+boolean haveBreadCrumbs=false;
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re==null&&haveBreadCrumbs){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(pos!=null){
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:50:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(sign!=1){
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
-sign=1;
+sign=1*2;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=pos.getIndex()*2;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
-sign=-1;
+sign=-1*2;
 break;
 case '+' :
 
-sign=1;
+sign=1*2;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
-sign=-1;
+sign=-1*2;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
+startIndex=pos.getIndex()*2;
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(pos!=null){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/1762/pattern-ver1-serial/app.src.main.java.kosbrother.com.doctorguide.SearchableActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(pos!=null){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/1762/pattern-ver1-serial/app.src.main.java.kosbrother.com.doctorguide.SearchableActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(pos!=null){
 pos.setIndex(endIndex);
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/3313/pattern-ver1-serial/app.src.main.java.com.yyydjk.gank.fragments.VideoFragment.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex-1,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex-1).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
-return new Complex(re.doubleValue(),0.0);
+return new Complex(re.doubleValue()-1,0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex-1,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
-return new Complex(re.doubleValue(),0.0);
+return new Complex(re.doubleValue(),0.0-1);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex-1,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:51:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(n!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:52:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(endIndex!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(initialIndex!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(startIndex!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(c!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(sign!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
+sign=-1;
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+sign=-1;
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im==null&&!im.equals("")){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re==null&&!re.equals("")){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+synchronized(this){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(sign!=-1){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
+if(startIndex!=pos.getIndex()){
 parseAndIgnoreWhitespace(source,pos);
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex-1,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
-return new Complex(re.doubleValue(),im.doubleValue()*sign);
+return new Complex(re.doubleValue(),im.doubleValue()*sign-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex-1).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
-return new Complex(re.doubleValue(),im.doubleValue()*sign);
+return new Complex(re.doubleValue(),im.doubleValue()*sign-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im==null){
+throw new IllegalStateException("User isn't registered! "+source);
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im==null){
+throw new IllegalStateException("User isn't registered! "+pos);
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:53:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+if(re==null){
+throw new IllegalStateException("User isn't registered! "+source);
+}
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+if(re==null){
+throw new IllegalStateException("User isn't registered! "+pos);
+}
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0||"查看红包".equals(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter()))){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0||source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())==3){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).isEmpty()){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex)!=null&&source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
-pos.setIndex(initialIndex);
-return null;
-}
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(im==null){
+pos.setIndex(initialIndex);
+return null;
+}
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
-pos.setIndex(initialIndex);
-return null;
-}
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
+if(re==null){
+pos.setIndex(initialIndex);
+return null;
+}
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
-pos.setIndex(initialIndex);
-return null;
-}
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(re==null){
+pos.setIndex(initialIndex);
+return null;
+}
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())<0||source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(true){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0==false){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0||source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())==Long.MIN_VALUE){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).matches("/+[\\w\\.\\d/]+.*")){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5089/pattern-ver1-serial/exportLibraries.cimadapter.src.main.java.com.emc.storageos.cimadapter.processors.CimIndicationSet.java-processProperty.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0&&false){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(re==null||im==null){
+return null;
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
+if(im==null||re==null){
+return null;
+}
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0||source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())==0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0||source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())>9){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
-pos.setIndex(initialIndex);
+System.out.println("Aucun siège disponible dans les conditions établies.");
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3088/pattern-ver1-serial/src.model.DataAccess.java-book.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
-pos.setIndex(initialIndex);
+System.out.println("Aucun siège disponible dans les conditions établies.");
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3088/pattern-ver1-serial/src.model.DataAccess.java-book.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0&&source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())<4000000){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(source.startsWith("/")){
+source=source.substring(1);
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(sign<0){
+sign=0;
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+startIndex=pos.getIndex();
+if(startIndex<0){
 startIndex=pos.getIndex();
+}
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex=pos.getIndex();
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+startIndex=pos.getIndex();
+if(startIndex<0){
 startIndex=pos.getIndex();
+}
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(initialIndex<0){
+initialIndex=pos.getIndex();
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex=pos.getIndex();
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(n<0){
+n=getImaginaryCharacter().length();
+}
+startIndex=pos.getIndex();
+if(startIndex<0){
 startIndex=pos.getIndex();
+}
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+startIndex=pos.getIndex();
+if(startIndex<0){
 startIndex=pos.getIndex();
+}
 int endIndex=startIndex+n;
+if(endIndex<0){
+endIndex=startIndex+n;
+}
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(Double.isNaN(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter()))){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).contains(".")){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0==true){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0&&source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=9999){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(0>0&&source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex)==null||source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+boolean haveBreadCrumbs=false;
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
+if(im==null&&haveBreadCrumbs){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+haveBreadCrumbs=true;
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+boolean haveBreadCrumbs=false;
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
+if(re==null&&haveBreadCrumbs){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
+haveBreadCrumbs=true;
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
+if(source==null||pos==null){
+throw new NullPointerException();
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
+}
+if(pos==null||source==null){
+throw new NullPointerException();
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(initialIndex<0){
+initialIndex--;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex--;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Solution---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+if(source.endsWith("/")==false){
+source=source+"/";
+}
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
+boolean haveBreadCrumbs=false;
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
+if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0&&haveBreadCrumbs){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(im==null||source==null||pos==null){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(pos==null||source==null||im==null){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
+if(re==null||source==null||im==null){
+return null;
+}
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(initialIndex<3){
+initialIndex=3;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(n<3){
+n=3;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(startIndex<3){
+startIndex=3;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(n<3){
+n=3;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
+if(sign<3){
+sign=3;
+}
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(n<3){
+n=3;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(initialIndex<3){
+initialIndex=3;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(startIndex<3){
+startIndex=3;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
+if(initialIndex<0){
+initialIndex=0;
+}
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(n<0){
+n=0;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex=0;
+}
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
+if(n<0){
+n=0;
+}
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
+long startTime=System.currentTimeMillis();
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
-parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 15, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 15, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
 if(re==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
-parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
 if(im==null){
 pos.setIndex(initialIndex);
 return null;
 }
 int n=getImaginaryCharacter().length();
-startIndex=pos.getIndex();
 int endIndex=startIndex+n;
 if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 15, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[313,389]
------------Candidate---------------
 public Complex parse(String source,ParsePosition pos){
 int initialIndex=pos.getIndex();
 parseAndIgnoreWhitespace(source,pos);
 Number re=parseNumber(source,getRealFormat(),pos);
-if(re==null){
-pos.setIndex(initialIndex);
-return null;
-}
 int startIndex=pos.getIndex();
 char c=parseNextCharacter(source,pos);
 int sign=0;
 switch (c){
 case 0 :
 
 return new Complex(re.doubleValue(),0.0);
 case '-' :
 
 sign=-1;
 break;
 case '+' :
 
 sign=1;
 break;
 default :
 
 pos.setIndex(initialIndex);
 pos.setErrorIndex(startIndex);
 return null;
 }
 parseAndIgnoreWhitespace(source,pos);
 Number im=parseNumber(source,getRealFormat(),pos);
-if(im==null){
-pos.setIndex(initialIndex);
-return null;
-}
 int n=getImaginaryCharacter().length();
 startIndex=pos.getIndex();
 int endIndex=startIndex+n;
-if(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0){
-pos.setIndex(initialIndex);
-pos.setErrorIndex(startIndex);
-return null;
-}
 pos.setIndex(endIndex);
 return new Complex(re.doubleValue(),im.doubleValue()*sign);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 3, INS : 0, DEL : 29
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 10:57:49 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.ComplexFormat:[58, 59]#0.35355339059327373
Compute Candidate : 2019.09.08 AD at 10:58:02 CDT - 2019.09.08 AD at 11:01:22 CDT , PNumber : 11192, CandNumber : 15 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
+import java.util.Locale;
+
 public ComplexFormat(){
-this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat(Locale.ENGLISH));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3320/pattern-ver1-serial/src.main.java.com.sk89q.craftbook.circuits.ic.ICMechanicFactory.java-hasSafePermissions.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
+import java.nio.charset.StandardCharsets;
+
+import java.util.Locale;
+
 public ComplexFormat(){
-this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat(Locale.UK));
 }

PATTERN : /home/jiajun/GithubData/2016/V15/4612/pattern-ver1-serial/plugins.org.csstudio.saverestore.git.src.org.csstudio.saverestore.git.GitManager.java-findSnapshotsByTag.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:01:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:01:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
-this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat(null));
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:01:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
-this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat(Locale.forLanguageTag("en")));
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1103/pattern-ver1-serial/src.net.sf.memoranda.util.ContactList.java-ContactList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+int DEFAULT_IMAGINARY_CHARACTER=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
-this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat(Locale.getDefault()));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/2664/pattern-ver1-serial/BF4Intel.src.main.java.com.ninetwozero.bf4intel.resources.maps.levels.LevelStringMap.java-get.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+boolean DEFAULT_IMAGINARY_CHARACTER=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:03:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[53,59]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public ComplexFormat(){
 this(DEFAULT_IMAGINARY_CHARACTER,getDefaultNumberFormat());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:04:04 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat:[237]#0.35355339059327373
Compute Candidate : 2019.09.08 AD at 11:04:16 CDT - 2019.09.08 AD at 11:07:21 CDT , PNumber : 11278, CandNumber : 8 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
-return getDefaultNumberFormat(Locale.getDefault());
+return getDefaultNumberFormat(Locale.getDefault(null));
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
-return getDefaultNumberFormat(Locale.getDefault());
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
-return getDefaultNumberFormat(Locale.getDefault());
+return (NumberFormat)getDefaultNumberFormat(Locale.getDefault());
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
+int a=0;
 return getDefaultNumberFormat(Locale.getDefault());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
+String OUTSTRING="";
 return getDefaultNumberFormat(Locale.getDefault());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
-return getDefaultNumberFormat(Locale.getDefault());
+return (NumberFormat)(getDefaultNumberFormat(Locale.getDefault()));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
+int a=1;
 return getDefaultNumberFormat(Locale.getDefault());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[230,238]
------------Candidate---------------
 private static NumberFormat getDefaultNumberFormat(){
+boolean b=true;
 return getDefaultNumberFormat(Locale.getDefault());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:07:45 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.parseAndIgnoreWhitespace:[399, 400, 401]#0.2773500981126146
Compute Candidate : 2019.09.08 AD at 11:07:58 CDT - 2019.09.08 AD at 11:11:49 CDT , PNumber : 11166, CandNumber : 88 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:11:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(pos.getIndex()-2);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:11:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.isEmpty()){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+synchronized(pos){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+synchronized(this){
 parseNextCharacter(source,pos);
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:12:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+synchronized(this){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:12:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(equals(source)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:12:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(equals(pos)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(equals(pos)){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:12:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(source==null){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(pos==null){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source==null){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos==null){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(pos!=null){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(pos.getIndex()-1>0){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if("index".equals(source)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if("index".equals(pos)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.equals("TIME")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos.equals("TIME")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if("&null".equals(source)){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if("&null".equals(pos)){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(source.equals("DATETIME")){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(pos.equals("DATETIME")){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+source=source;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+pos=pos;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(source.contains("deviantart.com")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+int a=0;
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos.equals(source)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.equals(pos)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+String OUTSTRING="";
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.equals(InputStream.class)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos.equals(InputStream.class)){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.startsWith("-")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3084/pattern-ver1-serial/src.cdio.shared.FieldVerifier.java-isValidRbId.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.startsWith("extern ")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.startsWith("https")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+int a=1;
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.equalsIgnoreCase("/")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(pos.getIndex()/2-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/384/pattern-ver1-serial/src.com.gmail.zhou1992228.building.BuildingEntity.java-getMidPos.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+boolean b=true;
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.equalsIgnoreCase("")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.matches("[0-9]*")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5036/pattern-ver1-serial/src.engine.PrinterServerTask1After.java-checkIfInputMatchStored.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(pos.getIndex()-1-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4594/pattern-ver1-serial/EzSignin.app.src.main.java.signin.ez.ezsignin.MainActivity.java-populateFieldsWithRecord.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(pos.getIndex()-1*-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(pos.getIndex()-1*1000);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
-parseNextCharacter(source,pos);
+try{
 pos.setIndex(pos.getIndex()-1);
+}finally{
+parseNextCharacter(source,pos);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+assert (source!=null);
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+assert (pos!=null);
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+assert (!source.isEmpty());
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source!=null){
+parseNextCharacter(source,pos);
+pos.setIndex(pos.getIndex()-1);
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos!=null){
+parseNextCharacter(source,pos);
+pos.setIndex(pos.getIndex()-1);
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+assert (source!=null);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+assert (pos!=null);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(Math.abs(pos.getIndex()-1));
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+pos.setIndex(pos.getIndex()-1&0xff);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4742/pattern-ver1-serial/src.uk.ac.herts.SmartLab.XBee.Response.XBeeRx16Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(source.isEmpty()){
+source=null;
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(source.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:16:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(pos.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+assert (source!=null):"Appointments day is not allowed to be null!";
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+if(pos==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
-parseNextCharacter(source,pos);
+if(pos!=null){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source==null){
+return ;
+}
+if(pos==null){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos==null){
+return ;
+}
+if(source==null){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos!=null){
 parseNextCharacter(source,pos);
+}
+if(pos!=null){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4107/pattern-ver1-serial/src.baseline.hvac.system7.HVACSystem7.java-checkSupplySideSystem.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.equals("CALL_RECEIVED_AT")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(source.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos.equals("CALL_RECEIVED_AT")){
+return ;
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(pos.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(source.equals("INFO")){
+return ;
+}
+if(source.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(pos.equals("INFO")){
+return ;
+}
+if(pos.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+try{
 parseNextCharacter(source,pos);
+}finally{
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(source.startsWith("/")){
+source=source.substring(1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos!=null){
 parseNextCharacter(source,pos);
-pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:17:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:18:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+if(source.endsWith("/")==false){
+source=source+"/";
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+for(int i=0;i<24;i++){
 parseNextCharacter(source,pos);
+}
 pos.setIndex(pos.getIndex()-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
 parseNextCharacter(source,pos);
+for(int i=0;i<24;i++){
 pos.setIndex(pos.getIndex()-1);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:18:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[391,401]
------------Candidate---------------
 private void parseAndIgnoreWhitespace(String source,ParsePosition pos){
+long startTime=System.currentTimeMillis();
 parseNextCharacter(source,pos);
 pos.setIndex(pos.getIndex()-1);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:18:15 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.parseNextCharacter:[411, 412, 413, 415, 418, 419, 420, 422, 423, 427]#0.2773500981126146
Compute Candidate : 2019.09.08 AD at 11:18:28 CDT - 2019.09.08 AD at 11:36:52 CDT , PNumber : 11293, CandNumber : 339 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
+ int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
+ int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:36:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
-char ret=0;
+ char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+ret=1;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+return ' ';
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+return ' ';
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&c<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(c<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(ret<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&ret<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(ret<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
-return ret;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
+long n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<=n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<=n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<=n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index>n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index>n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index>n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+ret=0;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
+float n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=source.charAt(index--);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:37:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
-return ret;
+return 2;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5386/pattern-ver1-serial/game.furguardians.org.pandcorps.furguardians.Level.java-getMinFlat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+return 0;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
+Integer index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
+Integer n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+return 0;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+ret=ret;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+ret=2;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=source.charAt(ret++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=source.charAt(n++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
-return ret;
+return 4;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/1673/pattern-ver1-serial/src.stratos.game.actors.Power.java-costFor.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+return c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+pos.setIndex(index);
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+ret=10;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
+ int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
-char c;
+ char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
+ int index=pos.getIndex();
 int n=source.length();
-char ret=0;
+ char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
+ int n=source.length();
 char ret=0;
 if(index<n){
-char c;
+ char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
-char ret=0;
+ int n=source.length();
+ char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
-char ret=0;
+ char ret=0;
 if(index<n){
-char c;
+ char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+index++;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+index++;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+index++;
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+ret++;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+n++;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+n++;
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+c++;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+index++;
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+n++;
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+index++;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+ret++;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+ret++;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+ret++;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+n++;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+n++;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+index--;
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+index--;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+index--;
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+n--;
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+n--;
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+ret--;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+c--;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<=n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<=n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<=n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<=n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<=n);
 pos.setIndex(index);
-if(index<n){
+if(index<=n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+index--;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+index--;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+ret--;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+ret--;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+ret--;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+n--;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+n--;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+synchronized(this){
 c=source.charAt(index++);
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+synchronized(pos){
 pos.setIndex(index);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<1){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<1);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<1){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<1){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<1);
 pos.setIndex(index);
-if(index<n){
+if(index<1){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+index++;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+n++;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(n<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&n<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4567/pattern-ver1-serial/18-Map.LunchList.src.apt.tutorial.RestaurantHelper.java-onUpgrade.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(ret<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&ret<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4567/pattern-ver1-serial/18-Map.LunchList.src.apt.tutorial.RestaurantHelper.java-onUpgrade.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+c=ret;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+synchronized(this){
 pos.setIndex(index);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
-return ret;
+return (char)(ret);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
+while(true){
+
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+while(true){
+
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+synchronized(this){
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+synchronized(this){
 if(index<n){
 ret=c;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+index++;
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+index++;
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+index++;
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(pos!=null){
 pos.setIndex(index);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+synchronized(this){
 ret=c;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+if(c!=0){
 ret=c;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(index>0){
 pos.setIndex(index);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
-int n=source.length();
+ @SuppressWarnings("UnusedAssignment") int index=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int n=source.length();
 char ret=0;
 if(index<n){
-char c;
+ @SuppressWarnings("UnusedAssignment") char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int index=pos.getIndex();
 int n=source.length();
-char ret=0;
+ @SuppressWarnings("UnusedAssignment") char ret=0;
 if(index<n){
-char c;
+ @SuppressWarnings("UnusedAssignment") char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
-char ret=0;
+ @SuppressWarnings("UnusedAssignment") int n=source.length();
+ @SuppressWarnings("UnusedAssignment") char ret=0;
 if(index<n){
-char c;
+ @SuppressWarnings("UnusedAssignment") char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+source=source;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+index=index;
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+index=1000;
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(true){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(true){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+char c;
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
-char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:45:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+int a=0;
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+int a=0;
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+int a=0;
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+String OUTSTRING="";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+String OUTSTRING="";
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+String OUTSTRING="";
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if(source.isEmpty()){
+return ' ';
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(source.isEmpty()){
+return ' ';
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if(source.isEmpty()){
+return ' ';
+}
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+int Character=5;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(Double.isNaN(index)){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(Double.isNaN(index)){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(equals(pos)){
+return ' ';
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(equals(index)){
+return ' ';
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(equals(index)){
+return ' ';
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+if(equals(index)){
+return ' ';
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(equals(source)){
+return ' ';
+}
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(equals(n)){
+return ' ';
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+int indexSelection=0;
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+int indexSelection=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+int indexSelection=0;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while((Character.isWhitespace(c))&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+int a=1;
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+int a=1;
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+int a=1;
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+boolean Character=true;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
-private char parseNextCharacter(String source,ParsePosition pos){
-int index=pos.getIndex();
+private char parseNextCharacter(String source,ParsePosition parentPuzzleBoard){
+int index=parentPuzzleBoard.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
+parentPuzzleBoard.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3965/pattern-ver1-serial/src.model.algorithm.AStar.java-generateDescendants.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
-private char parseNextCharacter(String source,ParsePosition pos){
+private char parseNextCharacter(String parentPuzzleBoard,ParsePosition pos){
 int index=pos.getIndex();
-int n=source.length();
+int n=parentPuzzleBoard.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=parentPuzzleBoard.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3965/pattern-ver1-serial/src.model.algorithm.AStar.java-generateDescendants.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(!Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7575/pattern-ver1-serial/app.src.main.java.de.renekolb.loopinglouieextreme.PlayerProfiles.PlayerStatistics.java-updateTotalGamesPlayed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+boolean b=true;
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+boolean b=true;
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+boolean b=true;
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=source.charAt(Math.abs(index++));
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
+pos.setIndex(Math.abs(index));
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(Math.abs(c))&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(pos==null){
+return ' ';
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(source==null){
+return ' ';
+}
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if(source==null){
+return ' ';
+}
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(pos==null){
+return ' ';
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(source==null){
+return ' ';
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(source==null){
+return ' ';
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(pos==null){
+return ' ';
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(index==pos.getIndex()){
+return ret;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=1;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if("index".equals(source)){
+return 0;
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if("index".equals(index)){
+return 0;
+}
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if("index".equals(index)){
+return 0;
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if("index".equals(index)){
+return 0;
+}
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if("index".equals(pos)){
+return 0;
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if("index".equals(source)){
+return 0;
+}
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if("index".equals(source)){
+return 0;
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if("index".equals(pos)){
+return 0;
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if("index".equals(n)){
+return 0;
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+if("index".equals(n)){
+return 0;
+}
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+pos.setIndex(index);
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+pos.setIndex(index);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:48:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
+pos.setIndex(index);
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+pos.setIndex(index);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+pos.setIndex(index);
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+} while(Character.isWhitespace(c)&&index<n);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
+pos.setIndex(index);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+pos.setIndex(index);
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+pos.setIndex(index);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+pos.setIndex(index);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=0;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+pos.setIndex(index);
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+pos.setIndex(index);
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
 }
+ret=c;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+ret=c;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+ret=c;
 pos.setIndex(index);
 if(index<n){
-ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(index<0){
+return ' ';
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(index<0){
+return ' ';
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if(index<0){
+return ' ';
+}
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(index<0){
+return ' ';
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=ret;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n||index==Long.MIN_VALUE){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n||index==Long.MIN_VALUE){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+pos.setIndex(index);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+pos.setIndex(index);
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=2;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+pos.setIndex(index);
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+try{
 pos.setIndex(index);
+}finally{
+ret=c;
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (source!=null);
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (pos!=null);
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+assert (source!=null);
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+assert (source!=null);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+assert (pos!=null);
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+assert (!source.isEmpty());
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+assert (!source.isEmpty());
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+assert (!source.isEmpty());
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(source.contains(source)){
+return ' ';
+}
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(pos!=null){
+int index=pos.getIndex();
+int n=source.length();
+char ret=0;
+if(index<n){
+char c;
+do {
+c=source.charAt(index++);
+} while(Character.isWhitespace(c)&&index<n);
+pos.setIndex(index);
+if(index<n){
+ret=c;
+}
+}
+return ret;
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(source!=null){
+int index=pos.getIndex();
+int n=source.length();
+char ret=0;
+if(index<n){
+char c;
+do {
+c=source.charAt(index++);
+} while(Character.isWhitespace(c)&&index<n);
+pos.setIndex(index);
+if(index<n){
+ret=c;
+}
+}
+return ret;
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(index<n){
+if(source!=null){
+char c;
+do {
+c=source.charAt(index++);
+} while(Character.isWhitespace(c)&&index<n);
+pos.setIndex(index);
 if(index<n){
+ret=c;
+}
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(index<n){
+if(pos!=null){
+char c;
+do {
+c=source.charAt(index++);
+} while(Character.isWhitespace(c)&&index<n);
+pos.setIndex(index);
 if(index<n){
+ret=c;
+}
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(c==0){
+return ' ';
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+if(c==0){
+return ' ';
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
+if(ret==0){
+return ' ';
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+if(ret==0){
+return ' ';
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
 }
+if(ret==0){
+return ' ';
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<-1){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<-1);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<-1){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<-1){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
+} while(Character.isWhitespace(c)&&index<-1);
 pos.setIndex(index);
-if(index<n){
+if(index<-1){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+assert (index!=pos.getIndex());
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+assert (n!=source.length());
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+assert (ret!=0);
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index==-2){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index==-2){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+assert (source!=null);
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+assert (pos!=null);
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+assert (source!=null);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+assert (source!=null);
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+assert (pos!=null);
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
-c=source.charAt(index++);
+c=10;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:53:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n||"查看红包".equals(index)){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n||"查看红包".equals(index)){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n||index==3){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n||index==3){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(source.isEmpty()){
+source=null;
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(source.isEmpty()){
+source=null;
+}
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+if(source.isEmpty()){
+source=null;
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<0||index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<0||index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
-ret=c;
+ret=c<0?0:c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n||index==0){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n||index==0){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n||index>9){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n||index>9){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n&&index<4000000){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n&&index<4000000){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n&&index!=9999){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n&&index!=9999){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(n>0&&index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(n>0&&index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+assert (index>=0):"Receive a negative tratment";
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (index>=0):"Receive a negative tratment";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+assert (index>=0):"Receive a negative tratment";
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (n>=0):"Receive a negative tratment";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+assert (n>=0):"Receive a negative tratment";
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+ret=c;
 } while(Character.isWhitespace(c)&&index<n);
+ret=c;
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+ret=c;
 pos.setIndex(index);
 if(index<n){
+ret=c;
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (source!=null):"Appointments day is not allowed to be null!";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+assert (source!=null):"Appointments day is not allowed to be null!";
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+assert (source!=null):"Appointments day is not allowed to be null!";
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+assert (index!=0):"Receive a size tratment";
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:55:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (index!=0):"Receive a size tratment";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+assert (index!=0):"Receive a size tratment";
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+assert (n!=0):"Receive a size tratment";
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+assert (n!=0):"Receive a size tratment";
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+if(source.isEmpty()){
+source=null;
+}
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(source.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index<n||index=='"'){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n||index=='"'){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(pos==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(source==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(index>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+if(index>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+if(index>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(index<=0){
+index=1;
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(c<0){
+c=0;
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+if(c<0){
+c=0;
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
+if(ret<0){
+ret=0;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+if(ret<0){
+ret=0;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
 }
+if(ret<0){
+ret=0;
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(index<=0){
+index=1;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(n<=0){
+n=1;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(n>index){
+n=index;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+if(index>n){
+index=n;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(ret!=c){
 pos.setIndex(index);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(index==100){
+index=0;
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+c=source.charAt(index++);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+c=source.charAt(index++);
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+c=source.charAt(index++);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+c=source.charAt(index++);
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
 }
+} while(Character.isWhitespace(c)&&index<n);
+pos.setIndex(index);
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(index<n){
+ret=c;
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+if(index<n){
+ret=c;
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
-do {
 c=source.charAt(index++);
+do {
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+c=source.charAt(index++);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+c=source.charAt(index++);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+try{
 pos.setIndex(index);
+}finally{
+c=source.charAt(index++);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+if(index<n){
+ret=c;
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
+if(source.startsWith("/")){
+source=source.substring(1);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+if(source.startsWith("/")){
+source=source.substring(1);
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+c=source.charAt(index++);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+c=source.charAt(index++);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 11:59:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+c=source.charAt(index++);
 do {
+c=source.charAt(index++);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+c=source.charAt(index++);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+c=source.charAt(index++);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
+c=source.charAt(index++);
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+c=source.charAt(index++);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+c=source.charAt(index++);
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+c=source.charAt(index++);
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+boolean haveBreadCrumbs=false;
 char ret=0;
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 char c;
 do {
 c=source.charAt(index++);
+haveBreadCrumbs=true;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+boolean haveBreadCrumbs=false;
 char ret=0;
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+haveBreadCrumbs=true;
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+boolean haveBreadCrumbs=false;
 char ret=0;
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+haveBreadCrumbs=true;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+boolean haveBreadCrumbs=false;
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+haveBreadCrumbs=true;
 pos.setIndex(index);
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+boolean haveBreadCrumbs=false;
 pos.setIndex(index);
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 ret=c;
+haveBreadCrumbs=true;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+boolean haveBreadCrumbs=false;
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
+haveBreadCrumbs=true;
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+boolean haveBreadCrumbs=false;
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
-if(index<n){
+if(index<n&&haveBreadCrumbs){
 ret=c;
+haveBreadCrumbs=true;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(c!=source.charAt(index++)){
 pos.setIndex(index);
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
-if(index<n){
+if(index==-2){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+if(index<n){
 if(index<n){
+ret=0;
+}else {
 ret=c;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
+if(index==3){
+System.out.println("debug");
+}
 c=source.charAt(index++);
+if(index==3){
+System.out.println("debug");
+}
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if(index==3){
+System.out.println("debug");
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+if(index==3){
+System.out.println("debug");
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(index==3){
+System.out.println("debug");
+}
+if(index==3){
+System.out.println("debug");
+}
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+if(index==3){
+System.out.println("debug");
+}
 ret=c;
+if(index==3){
+System.out.println("debug");
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+if(n==3){
+System.out.println("debug");
+}
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+if(n==3){
+System.out.println("debug");
+}
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+if(n==3){
+System.out.println("debug");
+}
+if(n==3){
+System.out.println("debug");
+}
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+if(n==3){
+System.out.println("debug");
+}
 ret=c;
+if(n==3){
+System.out.println("debug");
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(index<0){
+index--;
+}
 int n=source.length();
 char ret=0;
+if(ret<0){
+ret--;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+if(n<0){
+n--;
+}
 char ret=0;
+if(ret<0){
+ret--;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
+if(source.endsWith("/")==false){
+source=source+"/";
+}
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(index<3){
+index=3;
+}
 int n=source.length();
+if(n<3){
+n=3;
+}
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(index<3){
+index=3;
+}
 int n=source.length();
 char ret=0;
+if(ret<3){
+ret=3;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+if(n<3){
+n=3;
+}
 char ret=0;
+if(ret<3){
+ret=3;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(index<0){
+index=0;
+}
 int n=source.length();
+if(n<0){
+n=0;
+}
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(index<0){
+index=0;
+}
 int n=source.length();
 char ret=0;
+if(ret<0){
+ret=0;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
+if(n<0){
+n=0;
+}
 char ret=0;
+if(ret<0){
+ret=0;
+}
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+long startTime=System.currentTimeMillis();
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
+long startTime=System.currentTimeMillis();
 ret=c;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+long startTime=System.currentTimeMillis();
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(index<n){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
 int n=source.length();
 char ret=0;
 if(index<n){
+synchronized(this){
 char c;
 do {
 c=source.charAt(index++);
 } while(Character.isWhitespace(c)&&index<n);
 pos.setIndex(index);
 if(index<n){
 ret=c;
+}
 }
 }
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 24, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
+if(pos!=null){
 int index=pos.getIndex();
+}
 int n=source.length();
 char ret=0;
-if(index<n){
-char c;
-do {
-c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
-if(index<n){
-ret=c;
-}
-}
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 3, INS : 0, DEL : 27
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:01:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[403,428]
------------Candidate---------------
 private char parseNextCharacter(String source,ParsePosition pos){
 int index=pos.getIndex();
+if(source!=null){
 int n=source.length();
-char ret=0;
-if(index<n){
-char c;
-do {
-c=source.charAt(index++);
-} while(Character.isWhitespace(c)&&index<n);
-pos.setIndex(index);
-if(index<n){
-ret=c;
-}
 }
+char ret=0;
 return ret;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 3, INS : 0, DEL : 27
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:02:02 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.parseNumber:[471, 472, 473, 476, 487]#0.2773500981126146
Compute Candidate : 2019.09.08 AD at 12:02:15 CDT - 2019.09.08 AD at 12:29:38 CDT , PNumber : 11358, CandNumber : 296 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+ int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+ Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+ int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+long startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+long endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==0){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex<=endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+float startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+float endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(endIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex>=endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex!=endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+Integer startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+Integer endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+return 0;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex>endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
+number=parseNumber(source,special[startIndex],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
+number=parseNumber(source,special[endIndex],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return startIndex;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return endIndex;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
-if(number!=null){
+if(source!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
-if(number!=null){
+if(format!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:30:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
-if(number!=null){
+if(pos!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+return number;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
-for(int i=0;i<special.length;++i){
+for(int i=0;i<special.length;++startIndex){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
-for(int i=0;i<special.length;++i){
+for(int i=0;i<special.length;++endIndex){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+ final int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+ final int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+ final int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+ final double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+ int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+ double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+ Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+ double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+ int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+ double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=format.getInstance().parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+startIndex++;
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+endIndex++;
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+startIndex++;
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+startIndex++;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+endIndex++;
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+endIndex++;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+startIndex--;
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+endIndex--;
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+Number startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+Number endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/425/pattern-ver1-serial/app.src.main.java.com.pemws14.armyoffriends.GameMechanics.java-getPlayerLevelProgress.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+startIndex--;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+startIndex--;
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+endIndex--;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+endIndex--;
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+long startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+long endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7447/pattern-ver1-serial/dkpro-c4corpus-hadoop.src.main.java.de.tudarmstadt.ukp.dkpro.c4corpus.hadoop.statistics.LangLicenseStatistics.java-reduce.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
-private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+private Number parseNumber(String source,NumberFormat valueAnimator,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=valueAnimator.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
-private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+private Number parseNumber(String source,NumberFormat edge,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=edge.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
-private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+private Number parseNumber(String source,NumberFormat methodOpeningBrace,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=methodOpeningBrace.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+float startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+float endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7403/pattern-ver1-serial/src.structures.CountryCompetition.java-searchUsableComp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
-private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+private Number parseNumber(String source,NumberFormat mpR,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=mpR.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return (Number)(number);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(endIndex==startIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex<0){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
+return null;
 }
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
-private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+private Number parseNumber(String source,NumberFormat methodAST,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=methodAST.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+while(true){
+
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
-private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+private Number parseNumber(String source,NumberFormat managerFactory,ParsePosition pos){
 int startIndex=pos.getIndex();
-Number number=format.parse(source,pos);
+Number number=managerFactory.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+synchronized(this){
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+ final int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+ final int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+ final double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
-int startIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
-int endIndex=pos.getIndex();
+ @SuppressWarnings("UnusedAssignment") int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+ @SuppressWarnings("UnusedAssignment") double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:32:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+source=source;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+pos=pos;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex+startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex+endIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+startIndex=1000;
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+number=1000;
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(true){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(pos!=null){
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+int a=0;
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+int a=0;
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+String OUTSTRING="";
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+String OUTSTRING="";
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(source.isEmpty()){
+return null;
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(source.isEmpty()){
+return null;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(source.isEmpty()){
+return null;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+int Double=5;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+int NaN=5;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+int POSITIVE_INFINITY=5;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+int NEGATIVE_INFINITY=5;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+int i=5;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(Double.isNaN(startIndex)){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+Number POSITIVE_INFINITY=8;
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+Number NEGATIVE_INFINITY=8;
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(equals(pos)){
+return null;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(equals(startIndex)){
+return null;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(equals(source)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(equals(source)){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(equals(format)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(equals(pos)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(equals(pos)){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(equals(source)){
+return null;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(equals(pos)){
+return null;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(equals(source)){
+return null;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+int indexSelection=0;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+int indexSelection=0;
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+int a=1;
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+int a=1;
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+String NaN="%#.&f";
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+String POSITIVE_INFINITY="%#.&f";
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+String NEGATIVE_INFINITY="%#.&f";
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+boolean NEGATIVE_INFINITY=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+boolean POSITIVE_INFINITY=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+boolean Double=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+boolean NaN=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+boolean i=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+boolean b=true;
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+boolean b=true;
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(source.isEmpty()){
+return startIndex;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(source.isEmpty()){
+return number;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(source.isEmpty()){
+return endIndex;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(source.isEmpty()){
+return number;
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(source==null){
+continue;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(pos==null){
+continue;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(source==null){
+return null;
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(pos==null){
+return null;
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(source==null){
+return null;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(pos==null){
+return null;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(source==null){
+return null;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(format==null){
+return null;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(pos==null){
+return null;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(number==null){
+return null;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(special==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(number==null){
+return null;
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(number==null){
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(format==null){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(pos==null){
+return null;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex==pos.getIndex()){
+return startIndex;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(startIndex==pos.getIndex()){
+return endIndex;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(number==format.parse(source,pos)){
+return startIndex;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(startIndex==pos.getIndex()){
+return number;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(number==null){
+return startIndex;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(number==format.parse(source,pos)){
+return endIndex;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex==pos.getIndex()){
+return number;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(pos==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if("index".equals(source)){
+return 0;
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:36:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if("index".equals(source)){
+return 0;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if("index".equals(startIndex)){
+return 0;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if("index".equals(source)){
+return 0;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if("index".equals(pos)){
+return 0;
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if("index".equals(pos)){
+return 0;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if("index".equals(format)){
+return 0;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if("index".equals(pos)){
+return 0;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if("index".equals(number)){
+return 0;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if("index".equals(endIndex)){
+return 0;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if("&null".equals(source)){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if("&null".equals(startIndex)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if("&null".equals(source)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if("&null".equals(pos)){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+if("&null".equals(source)){
+return null;
+}
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if("&null".equals(format)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if("&null".equals(pos)){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+if("&null".equals(pos)){
+return null;
+}
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if("&null".equals(number)){
+return null;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if("&null".equals(endIndex)){
+return null;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(number.equals("-1")){
+return null;
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(special.equals("-1")){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(number.equals("-1")){
+return null;
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(number.equals("-1")){
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex||startIndex==Long.MIN_VALUE){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(source==null){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(pos==null){
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+assert (source!=null);
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+assert (source!=null);
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+assert (source!=null);
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+assert (pos!=null);
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+assert (format!=null);
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+assert (pos!=null);
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+assert (pos!=null);
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+assert (number!=null);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+assert (!source.isEmpty());
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (!source.isEmpty());
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+assert (!source.isEmpty());
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import java.awt.event.WindowEvent;
+
+import java.net.URL;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(number==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V37/1495/pattern-ver1-serial/src.com.suntc.tictactoe.ClientGui.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(pos!=null){
+int startIndex=pos.getIndex();
+Number number=format.parse(source,pos);
+int endIndex=pos.getIndex();
+if(startIndex==endIndex){
+double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+for(int i=0;i<special.length;++i){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
+}
+return number;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(source!=null){
+double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+for(int i=0;i<special.length;++i){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(source!=null){
+int startIndex=pos.getIndex();
+Number number=format.parse(source,pos);
+int endIndex=pos.getIndex();
+if(startIndex==endIndex){
+double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+for(int i=0;i<special.length;++i){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
+}
+return number;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(format!=null){
+int startIndex=pos.getIndex();
+Number number=format.parse(source,pos);
+int endIndex=pos.getIndex();
+if(startIndex==endIndex){
+double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+for(int i=0;i<special.length;++i){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
+}
+return number;
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(pos!=null){
+double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+for(int i=0;i<special.length;++i){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(source!=null){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(pos!=null){
+number=parseNumber(source,special[i],pos);
+if(number!=null){
+break;
+}
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(number==null){
+return null;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3772/pattern-ver1-serial/android-sdk.src.main.java.com.optimizely.ab.android.sdk.DataFileClient.java-execute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (startIndex!=pos.getIndex());
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+assert (number!=format.parse(source,pos));
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+assert (endIndex!=pos.getIndex());
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+assert (source!=null);
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+assert (pos!=null);
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+assert (source!=null);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+assert (pos!=null);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (source!=null);
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (format!=null);
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (pos!=null);
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(special.equals(null)){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(special.equals("655")){
+System.out.println();
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex||"查看红包".equals(startIndex)){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex||startIndex==3){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source.isEmpty()){
+source=null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(source.isEmpty()){
+source=null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+if(source.isEmpty()){
+source=null;
+}
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex<0||startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
+number=startIndex;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
+number=number;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
+number=endIndex;
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex||startIndex==0){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex||startIndex>9){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex&&startIndex<4000000){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex&&startIndex!=9999){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(endIndex>0&&startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (startIndex>=0):"Receive a negative tratment";
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+assert (endIndex>=0):"Receive a negative tratment";
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(source.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+assert (source!=null):"Appointments day is not allowed to be null!";
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+assert (source!=null):"Appointments day is not allowed to be null!";
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+assert (source!=null):"Appointments day is not allowed to be null!";
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+assert (format!=null):"Appointments day is not allowed to be null!";
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+assert (pos!=null):"Appointments day is not allowed to be null!";
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+assert (number!=null):"Appointments day is not allowed to be null!";
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+assert (startIndex!=0):"Receive a size tratment";
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+assert (endIndex!=0):"Receive a size tratment";
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(startIndex<=0){
+startIndex=1;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex>startIndex){
+endIndex=startIndex;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(startIndex>endIndex){
+startIndex=endIndex;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+Number t=number;
+number=null;
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
-return number;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+source);
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+format);
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+pos);
+}
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+source);
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+pos);
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+source);
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+source);
+}
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(number==null){
+throw new IllegalStateException("User isn't registered! "+pos);
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+number=parseNumber(source,special[i],pos);
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
+number=parseNumber(source,special[i],pos);
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(number==null||number==null){
+return startIndex;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(source.startsWith("\r\n")){
+source=source.substring(2);
+}
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(source.startsWith("/")){
+source=source.substring(1);
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
+if(source.startsWith("/")){
+source=source.substring(1);
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex=pos.getIndex();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex<0){
+endIndex=pos.getIndex();
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+boolean haveBreadCrumbs=false;
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex&&haveBreadCrumbs){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
+haveBreadCrumbs=true;
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+boolean haveBreadCrumbs=false;
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
+if(startIndex==endIndex&&haveBreadCrumbs){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+haveBreadCrumbs=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+boolean haveBreadCrumbs=false;
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
-if(number!=null){
+if(number!=null&&haveBreadCrumbs){
 break;
 }
 }
+haveBreadCrumbs=true;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+boolean haveBreadCrumbs=false;
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
-if(number!=null){
+if(number!=null&&haveBreadCrumbs){
 break;
 }
+haveBreadCrumbs=true;
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(source==null||format==null){
+throw new NullPointerException();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source==null||pos==null){
+throw new NullPointerException();
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:42:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(format==null||source==null){
+throw new NullPointerException();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(pos==null||format==null){
+throw new NullPointerException();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(format==null||pos==null){
+throw new NullPointerException();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(pos==null||source==null){
+throw new NullPointerException();
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source==null||special==null){
+throw new NullPointerException();
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+boolean succeeded=false;
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+succeeded=true;
 }
+if(!succeeded){
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
+boolean succeeded=false;
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
+succeeded=true;
 }
 }
+if(!succeeded){
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(startIndex<0){
+return 0;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(startIndex>=endIndex){
+return endIndex-1;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
+if(startIndex==3){
+System.out.println("debug");
+}
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
+if(startIndex==3){
+System.out.println("debug");
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(startIndex==3){
+System.out.println("debug");
+}
+if(startIndex==3){
+System.out.println("debug");
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+if(startIndex==3){
+System.out.println("debug");
+}
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(startIndex==3){
+System.out.println("debug");
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex--;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex<0){
+endIndex--;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
+if(source.endsWith("/")==false){
+source=source+"/";
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(pos==null||special==null||source==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(special==null||pos==null||source==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source==null||special==null||pos==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(special==null||source==null||pos==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(source==null||pos==null||special==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+if(pos==null||source==null||special==null){
+return null;
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex==0&&startIndex==0&&number.equals("")){
+return null;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/1175/pattern-ver1-serial/src.com.almalence.opencam.PluginManager.java-addTimestamp.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
+if(endIndex==0&&startIndex==0&&number.equals("")){
+return null;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/1175/pattern-ver1-serial/src.com.almalence.opencam.PluginManager.java-addTimestamp.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(startIndex<3){
+startIndex=3;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex<3){
+endIndex=3;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
+if(startIndex<0){
+startIndex=0;
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+if(endIndex<0){
+endIndex=0;
+}
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+long startTime=System.currentTimeMillis();
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+long startTime=System.currentTimeMillis();
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+special[28]=(byte)0x88;
+special[29]=0x58;
+special[30]=0x01;
+special[31]=0x00;
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
+for(int i=0;i<4;i++){
+special[i]=Math.min(1,Math.max(0,special[i]));
+}
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2980/pattern-ver1-serial/megamek.src.megamek.client.ui.swing.MiniMap.java-paintBVSection.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 20, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
 if(startIndex==endIndex){
+synchronized(this){
 double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
 for(int i=0;i<special.length;++i){
 number=parseNumber(source,special[i],pos);
 if(number!=null){
 break;
+}
 }
 }
 }
 return number;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 23, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
 int startIndex=pos.getIndex();
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
-for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
-if(number!=null){
-break;
-}
-}
-}
 return number;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 0, DEL : 26
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[460,488]
------------Candidate---------------
 private Number parseNumber(String source,NumberFormat format,ParsePosition pos){
+if(pos!=null){
 int startIndex=pos.getIndex();
+}
 Number number=format.parse(source,pos);
 int endIndex=pos.getIndex();
-if(startIndex==endIndex){
-double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
-for(int i=0;i<special.length;++i){
-number=parseNumber(source,special[i],pos);
-if(number!=null){
-break;
-}
-}
-}
 return number;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 3, INS : 0, DEL : 26
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:44:36 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter:[258]#0.20412414523193154
Compute Candidate : 2019.09.08 AD at 12:44:50 CDT - 2019.09.08 AD at 12:47:48 CDT , PNumber : 11192, CandNumber : 20 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return this.imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/1924/pattern-ver1-serial/src.main.java.org.spongepowered.api.util.command.ImmutableCommandMapping.java-getCallable.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:47:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return this.getImaginaryCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
+this.getImaginaryCharacter();
 return imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return imaginaryCharacter.trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return new String(imaginaryCharacter);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return imaginaryCharacter.toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return (String)(imaginaryCharacter);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
+int a=0;
 return imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
+String OUTSTRING="";
 return imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
+int a=1;
 return imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
+String imaginaryCharacter="%#.&f";
 return imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
+boolean b=true;
 return imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return imaginaryCharacter.replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return String.format("%s",imaginaryCharacter);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return imaginaryCharacter==null?"":imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return imaginaryCharacter!=null?imaginaryCharacter:new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[253,259]
------------Candidate---------------
 public String getImaginaryCharacter(){
-return imaginaryCharacter;
+return imaginaryCharacter==null?new String():imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:48:48 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.getRealFormat:[292]#0.18569533817705186
Compute Candidate : 2019.09.08 AD at 12:49:00 CDT - 2019.09.08 AD at 12:51:41 CDT , PNumber : 11280, CandNumber : 9 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
-return realFormat;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
-return realFormat;
+return this.realFormat;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/1924/pattern-ver1-serial/src.main.java.org.spongepowered.api.util.command.ImmutableCommandMapping.java-getCallable.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
-return realFormat;
+return this.getRealFormat();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
+this.getRealFormat();
 return realFormat;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
-return realFormat;
+return (NumberFormat)(realFormat);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
+int a=0;
 return realFormat;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:51:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
+String OUTSTRING="";
 return realFormat;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:52:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
+int a=1;
 return realFormat;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[287,293]
------------Candidate---------------
 public NumberFormat getRealFormat(){
+boolean b=true;
 return realFormat;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:52:06 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.ComplexFormat:[67, 68]#0.1690308509457033
Compute Candidate : 2019.09.08 AD at 12:52:20 CDT - 2019.09.08 AD at 12:56:02 CDT , PNumber : 11193, CandNumber : 13 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
-this(DEFAULT_IMAGINARY_CHARACTER,format);
+this(DEFAULT_IMAGINARY_CHARACTER,format,format);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7601/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.discovery.smis.DataCollectionJobUtil.java-getAccessProfile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+format=format;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+int DEFAULT_IMAGINARY_CHARACTER=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+boolean DEFAULT_IMAGINARY_CHARACTER=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+assert (format!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[61,68]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public ComplexFormat(NumberFormat format){
 this(DEFAULT_IMAGINARY_CHARACTER,format);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 12:58:39 CDT
--------------- END -----------------
Location : org.apache.commons.math.complex.ComplexFormat.ComplexFormat:[97, 98]#0.1690308509457033
Compute Candidate : 2019.09.08 AD at 12:58:53 CDT - 2019.09.08 AD at 13:02:23 CDT , PNumber : 11187, CandNumber : 20 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
-this(imaginaryCharacter,format,(NumberFormat)format.clone());
+this(imaginaryCharacter,format,(NumberFormat)format.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5639/pattern-ver1-serial/src.main.java.com.aurel.track.exchange.msProject.importer.MsProjectImporterBL.java-getProjectSpecificItemIDs.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
-this(imaginaryCharacter,format,(NumberFormat)format.clone());
+this(imaginaryCharacter,format,(NumberFormat)format.getInstance().clone());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+imaginaryCharacter=imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+format=format;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+throw new RuntimeException(imaginaryCharacter);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/2341/pattern-ver1-serial/OSA.addon.linux.fermat-osa-addon-linux-database-system-bitdubai.src.main.java.com.bitdubai.fermat_osa_addon.layer.linux.database_system.developer.bitdubai.version_1.desktop.database.bridge.DesktopDatabaseBridge.java-rawQuery.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+this.imaginaryCharacter=imaginaryCharacter;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+assert (!imaginaryCharacter.isEmpty());
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+assert (imaginaryCharacter!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+assert (format!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+if(imaginaryCharacter.isEmpty()){
+imaginaryCharacter=null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+if(imaginaryCharacter.startsWith("/")){
+imaginaryCharacter=imaginaryCharacter.substring(1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_101_buggy/src/java/org/apache/commons/math/complex/ComplexFormat.java[90,98]
------------Candidate---------------
 public ComplexFormat(String imaginaryCharacter,NumberFormat format){
 this(imaginaryCharacter,format,(NumberFormat)format.clone());
+if(imaginaryCharacter.endsWith("/")==false){
+imaginaryCharacter=imaginaryCharacter+"/";
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter, org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter]
---------START : 2019.09.08 AD at 09:38:28 CDT
---------TIME : 2019.09.08 AD at 13:05:22 CDT
--------------- END -----------------
Current failed test : org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter | 2019.09.08 AD at 13:05:22 CDT
Already fixed : org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter
Finish : math-101 > patch : 1 | Start : Sun Sep 08 09:38:28 CDT 2019 | End : 2019.09.08 AD at 13:05:22 CDT
