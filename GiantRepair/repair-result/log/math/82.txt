Repair : math_82
Current failed test : org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288 | 2019.09.07 AD at 10:04:21 CDT
Location : org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1:[169, 168]#0.5773502691896258
Compute Candidate : 2019.09.07 AD at 10:04:57 CDT - 2019.09.07 AD at 10:11:53 CDT , PNumber : 11420, CandNumber : 97 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+return ;
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7084/pattern-ver1-serial/src.main.java.com.pratilipi.api.impl.pratilipi.PratilipiContentImageApi.java-postPratilipiContent.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()<=0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()>=0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()!=0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()>0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
+doIteration(tableau);
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+doIteration(tableau);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+solvePhase1(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
+solvePhase1(tableau);
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(equals(tableau)){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(equals(tableau)){
+return ;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if(equals(tableau)){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+}
+if(equals(tableau)){
+return ;
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+synchronized(this){
 if(tableau.getNumArtificialVariables()==0){
 return ;
+}
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
+synchronized(this){
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if(tableau==null){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+if(tableau==null){
+return ;
+}
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau==null){
+return ;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau==null){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+}
+if(tableau==null){
+return ;
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+synchronized(this){
 return ;
+}
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if("index".equals(tableau)){
+return ;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:12:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if("index".equals(tableau)){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau.equals("TIME")){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau.equals("TIME")){
+return ;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if("&null".equals(tableau)){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+if("&null".equals(tableau)){
+return ;
+}
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if(tableau.equals("DATETIME")){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+if(tableau.equals("DATETIME")){
+return ;
+}
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+doIteration(tableau);
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
+doIteration(tableau);
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+doIteration(tableau);
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
-while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+while(!isPhase1Solved(tableau)){
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+tableau=tableau;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau!=null){
 if(tableau.getNumArtificialVariables()==0){
 return ;
+}
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
-doIteration(tableau);
 }
+doIteration(tableau);
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+doIteration(tableau);
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
-doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+int a=0;
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+int a=0;
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+String OUTSTRING="";
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+String OUTSTRING="";
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+int MathUtils=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:13:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau.equals("sounds")){
+continue;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+int a=1;
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+int a=1;
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+boolean MathUtils=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+boolean b=true;
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+boolean b=true;
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau==null){
+continue;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
+doIteration(tableau);
 return ;
 }
 while(!isPhase1Solved(tableau)){
-doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
-doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
+doIteration(tableau);
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau==null){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0-1){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(true){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0==false){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()==Long.MIN_VALUE){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0&&false){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau.getNumArtificialVariables()==12){
+return ;
+}else {
 if(tableau.getNumArtificialVariables()==0){
 return ;
+}
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+assert (tableau!=null);
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+assert (tableau!=null);
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(Double.isNaN(tableau.getNumArtificialVariables())){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0==true){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau!=null){
+if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+while(!isPhase1Solved(tableau)){
+doIteration(tableau);
+}
+if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
+throw new NoFeasibleSolutionException();
+}
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau!=null){
+doIteration(tableau);
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+assert (tableau!=null);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
+assert (tableau!=null);
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||"查看红包".equals(tableau.getNumArtificialVariables())){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()==3){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau==null){
+throw new OptimizationException("player is not initialised, game might not be started");
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+}
+if(tableau==null){
+throw new OptimizationException("player is not initialised, game might not be started");
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau!=null&&tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()<0||tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau==null){
+throw new OptimizationException("connection offline");
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7367/pattern-ver1-serial/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ServerJms.java-open.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+}
+if(tableau.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+if(tableau.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()>9){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0&&tableau.getNumArtificialVariables()<4000000){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0&&tableau.getNumArtificialVariables()!=9999){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(0>0&&tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau==null||tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()=='"'){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:16:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+if(tableau.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
+if(tableau.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
+if(tableau.equals("CALL_RECEIVED_AT")){
+return ;
+}
 doIteration(tableau);
+if(tableau.equals("NAME")){
+return ;
+}
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:16:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
+if(tableau.equals("INFO")){
+return ;
+}
+if(tableau.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:16:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
+if(tableau.equals("INFO")){
+return ;
+}
+if(tableau.equals("UNIT")){
+return ;
+}
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:16:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,180]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws OptimizationException{
+long startTime=System.currentTimeMillis();
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!isPhase1Solved(tableau)){
 doIteration(tableau);
 }
 if(!MathUtils.equals(tableau.getEntry(0,tableau.getRhsOffset()),0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:16:14 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexTableau.discardArtificialVariables:[308, 307]#0.5773502691896258
Compute Candidate : 2019.09.07 AD at 10:16:30 CDT - 2019.09.07 AD at 10:41:50 CDT , PNumber : 11414, CandNumber : 146 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:41:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables<=0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables>=0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:41:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables!=0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables>0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(this.numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+this.discardArtificialVariables();
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+this.discardArtificialVariables();
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import java.util.Iterator;
+
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==-1){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+height++;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+width++;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+height--;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+width--;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+synchronized(this){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+synchronized(this){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(equals(height)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(equals(width)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
+}
+if(equals(matrix)){
+return ;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(equals(matrix)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(equals(width)){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+synchronized(this){
 if(numArtificialVariables==0){
 return ;
+}
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix==null){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(width==height){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height==width){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:42:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix==new double[height][width]){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height==getHeight()-1){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(width==getWidth()-numArtificialVariables-1){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+synchronized(this){
 return ;
+}
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+if(0!=0){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if("index".equals(width)){
+return ;
+}
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if("index".equals(height)){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if("index".equals(matrix)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("TIME")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if("&null".equals(width)){
+return ;
+}
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if("&null".equals(height)){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if("&null".equals(matrix)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("DATETIME")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+numArtificialVariables=width;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+this.numArtificialVariables=width;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+width=width;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+height=height;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+height=1000;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+width=1000;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(true){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(width<0){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(width<0){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height<0){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(height<0){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+if(this.tableau==null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("-1")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+int a=0;
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+int a=0;
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals(width)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals(height)){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+String OUTSTRING="";
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+String OUTSTRING="";
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+int numArtificialVariables=5;
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(Double.isNaN(numArtificialVariables)){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
+if(this.numArtificialVariables==0){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+int indexSelection=0;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("setPackMode")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
+}
+if(matrix.equals("setPackMode")){
+return ;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+int a=1;
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+int a=1;
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
+boolean numArtificialVariables=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
+boolean i=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+boolean b=true;
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+boolean b=true;
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0-1){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0||numArtificialVariables==Long.MIN_VALUE){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+if(numArtificialVariables==12){
+return ;
+}else {
 if(numArtificialVariables==0){
 return ;
+}
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+assert (matrix!=null);
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+assert (height!=getHeight()-1);
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+assert (matrix!=new double[height][width]);
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+assert (width!=getWidth()-numArtificialVariables-1);
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
+this.numArtificialVariables++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0||"查看红包".equals(numArtificialVariables)){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0||numArtificialVariables==3){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables<0||numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
+this.numArtificialVariables=0;
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
+this.numArtificialVariables=0;
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
+this.numArtificialVariables=0;
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
+this.numArtificialVariables=0;
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
+this.numArtificialVariables=0;
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:45:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0||numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0||numArtificialVariables>9){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+try{
 this.tableau=new Array2DRowRealMatrix(matrix);
+}finally{
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0&&numArtificialVariables<4000000){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0&&numArtificialVariables!=9999){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(0>0&&numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+assert (width>=0):"Receive a negative tratment";
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+assert (height>=0):"Receive a negative tratment";
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+assert (matrix!=null):"Appointments day is not allowed to be null!";
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+assert (width!=0):"Receive a size tratment";
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+assert (height!=0):"Receive a size tratment";
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
-if(numArtificialVariables==0){
+if(numArtificialVariables==0||numArtificialVariables=='"'){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(width>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(width>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(height>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
+this.tableau=new Array2DRowRealMatrix(matrix);
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+this.numArtificialVariables=0;
+if(this.numArtificialVariables<0){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height<0){
+return ;
+}
+if(height>=width){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if(width<0){
+return ;
+}
 int height=getHeight()-1;
+if(width>=height){
+return ;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
+this.tableau=new Array2DRowRealMatrix(matrix);
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(width<=0){
+width=1;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height<=0){
+height=1;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(height<=0){
+height=1;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(width<=0){
+width=1;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(width>height){
+width=height;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height>width){
+height=width;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
+try{
 this.numArtificialVariables=0;
+}finally{
+this.tableau=new Array2DRowRealMatrix(matrix);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(matrix.equals("NAME")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
+this.tableau=new Array2DRowRealMatrix(matrix);
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix.equals("INFO")){
+return ;
+}
+if(matrix.equals("UNIT")){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+if(this.numArtificialVariables!=0){
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+if(this.tableau==null){
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+if(this.tableau!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix==null){
+throw new IllegalStateException("User isn't registered! "+width);
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(matrix==null){
+throw new IllegalStateException("User isn't registered! "+height);
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
+if(this.tableau!=new Array2DRowRealMatrix(matrix)){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+boolean succeeded=false;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
+succeeded=true;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+boolean succeeded=false;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return ;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
+succeeded=true;
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if(width==3){
+System.out.println("debug");
+}
+if(width==3){
+System.out.println("debug");
+}
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+if(height==3){
+System.out.println("debug");
+}
+if(height==3){
+System.out.println("debug");
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:47:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if(width<0){
+width--;
+}
 int height=getHeight()-1;
+if(height<0){
+height--;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
+matrix[i][j]=getEntry(i+1,j+1);
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
+matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
+matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
+matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
+matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if(width<3){
+width=3;
+}
 int height=getHeight()-1;
+if(height<3){
+height=3;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
+if(width<0){
+width=0;
+}
 int height=getHeight()-1;
+if(height<0){
+height=0;
+}
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
+long startTime=System.currentTimeMillis();
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
+for(int l=0;l<24;l++){
+matrix[10][l]=0;
+}
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
+if(this.tableau!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 3, INS : 0, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 11, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 11, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
-matrix[i][j]=getEntry(i+1,j+1);
+matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[303,321]
------------Candidate---------------
 protected void discardArtificialVariables(){
 if(numArtificialVariables==0){
 return ;
 }
 int width=getWidth()-numArtificialVariables-1;
 int height=getHeight()-1;
 double[][] matrix=new double[height][width];
 for(int i=0;i<height;i++){
 for(int j=0;j<width-1;j++){
 matrix[i][j]=getEntry(i+1,j+1);
 }
 matrix[i][width-1]=getEntry(i+1,getRhsOffset());
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 15, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:48:39 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexSolver.isOptimal:[152, 155, 147, 150, 151]#0.3333333333333333
Compute Candidate : 2019.09.07 AD at 10:48:55 CDT - 2019.09.07 AD at 10:57:24 CDT , PNumber : 11394, CandNumber : 137 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+continue;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
-return true;
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import java.util.Collections;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
-return false;
+return true;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>1){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>=0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+return false;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<=0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<=tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import java.util.Collection;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),myUid;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),DEFAULT_TIMEOUT2;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)>0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i>tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),MAX_SERVICE_NODES;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),MAX_ZK_WAIT_RETRY_TIMES;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+break;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+return true;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i--){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()!=0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-2;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),localLevel;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-i;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getHeight()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/4077/pattern-ver1-serial/src.com.edisonwang.stackedview.view.StackedView.java-prepareScrollingToBottom.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++,new ArrayList<KeyBinding>()){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>3){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()<0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1401/pattern-ver1-serial/XMLC.src.Learner.PLTFH.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),_afterComposeMethodCache;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import java.util.List;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),mActions;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),mRelationId;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
-return false;
+return true;
 }
 }
-return true;
+return false;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/469/pattern-ver1-serial/src.ac.uk.susx.tag.filter.RegexFilter.java-matchAnnotation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
-return false;
+return true;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
-return true;
+return false;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/469/pattern-ver1-serial/src.ac.uk.susx.tag.filter.RegexFilter.java-matchAnnotation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+i++;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 10:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+i--;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+isOptimal(tableau);
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
+isOptimal(tableau);
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),continentName,countryCode;i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
-return false;
+return (boolean)(false);
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
-return true;
+return (boolean)(true);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
+}
+while(true){
+
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:02:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions(),userEmail;i<tableau.getWidth()-1;i++,i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+synchronized(this){
 if(tableau.getNumArtificialVariables()>0){
 return false;
+}
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+synchronized(this){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
+}
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+i++;
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+i++;
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++,Charset.forName("UTF-8")){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+synchronized(this){
 return false;
+}
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+synchronized(this){
 return false;
+}
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(30-(0),i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,30-(i)),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+tableau=tableau;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+if(tableau!=null){
 if(tableau.getNumArtificialVariables()>0){
 return false;
+}
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(i==4){
+continue;
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0/2){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+int a=0;
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+int a=0;
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+int a=0;
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+int a=0;
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+String OUTSTRING="";
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+String OUTSTRING="";
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+String OUTSTRING="";
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+String OUTSTRING="";
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;){
+i++;
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(Math.round(0),i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,Math.round(i)),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;Math.abs(i++)){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+if(equals(tableau)){
+return false;
+}
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(equals(tableau)){
+return false;
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+return false;
+}
+if(equals(tableau)){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+int indexSelection=0;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(Math.max(0,i),i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,Math.max(0,i)),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(tableau.equals("sounds")){
+continue;
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+int a=1;
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+int a=1;
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+int a=1;
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+int a=1;
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+boolean MathUtils=true;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()/2-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/384/pattern-ver1-serial/src.com.gmail.zhou1992228.building.BuildingEntity.java-getMidPos.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+boolean b=true;
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+boolean b=true;
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+boolean b=true;
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+boolean b=true;
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(tableau==null){
+continue;
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+return false;
+}
+if(tableau==null){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
+return false;
+}
+if(tableau==null){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(true){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0==false){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
-for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth();i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6999/pattern-ver1-serial/src.mop.MopData.java-str2Mop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0||tableau.getNumArtificialVariables()==Long.MIN_VALUE){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0&&false){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i)*2,0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2630/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+assert (tableau!=null);
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+assert (tableau!=null);
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(Double.isNaN(tableau.getNumArtificialVariables())){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0==true){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(tableau!=null){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+return false;
+}
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+if(tableau!=null){
+if(tableau.getNumArtificialVariables()>0){
+return false;
+}
+for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+return false;
+}
+}
+return true;
+}
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+assert (tableau!=null);
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
+assert (tableau!=null);
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0||"查看红包".equals(tableau.getNumArtificialVariables())){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0||tableau.getNumArtificialVariables()==3){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau!=null&&tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()<0||tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:05:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0||tableau.getNumArtificialVariables()==0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0||tableau.getNumArtificialVariables()>9){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0&&tableau.getNumArtificialVariables()<4000000){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0&&tableau.getNumArtificialVariables()!=9999){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(0>0&&tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau==null||tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
-if(tableau.getNumArtificialVariables()>0){
+if(tableau.getNumArtificialVariables()>0||tableau.getNumArtificialVariables()=='"'){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
+if(tableau==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
+}
+if(tableau==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(tableau==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
+}
+if(tableau.getClass().getSimpleName().startsWith("SystemException")){
+return true;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
+}
 }
+if(tableau.getClass().getSimpleName().startsWith("SystemException")){
+return true;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||"查看红包".equals(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon))){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)==3){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+if(i==3){
+System.out.println("debug");
+}
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
+}
+if(i==3){
+System.out.println("debug");
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(true){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0==false){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)==Long.MIN_VALUE){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0&&false){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)==0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)>9){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0&&MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<4000000){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(Double.isNaN(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon))){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0==true){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0&&MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)!=9999){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(0>0&&MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
-if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
+if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0||MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)=='"'){
 return false;
 }
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[141,156]
------------Candidate---------------
 public boolean isOptimal(SimplexTableau tableau){
 if(tableau.getNumArtificialVariables()>0){
 return false;
 }
 for(int i=tableau.getNumObjectiveFunctions();i<tableau.getWidth()-1;i++){
+long startTime=System.currentTimeMillis();
 if(MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon)<0){
 return false;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:07:31 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize:[191, 193, 189, 190, 186, 188]#0.3333333333333333
Compute Candidate : 2019.09.07 AD at 11:07:45 CDT - 2019.09.07 AD at 11:14:20 CDT , PNumber : 11430, CandNumber : 108 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+continue;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
- final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+ SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+return null;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+break;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
-tableau.discardArtificialVariables();
+tableau.toString();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+doIteration(tableau);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+solvePhase1(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+tableau.discardArtificialVariables();
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
-return tableau.getSolution();
+return this.doOptimize();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
-return tableau.getSolution();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+this.doOptimize();
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
+this.doOptimize();
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
-return tableau.getSolution();
+return (RealPointValuePair)tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:14:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+synchronized(tableau){
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:15:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+synchronized(this){
 doIteration(tableau);
+}
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:15:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+synchronized(this){
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+synchronized(this){
 solvePhase1(tableau);
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:15:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
-return tableau.getSolution();
+return (RealPointValuePair)(tableau.getSolution());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:15:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+while(true){
+
+}
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(tableau!=null){
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+doIteration(tableau);
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+tableau.discardArtificialVariables();
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+solvePhase1(tableau);
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+tableau.discardArtificialVariables();
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+solvePhase1(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:17:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+doIteration(tableau);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
-doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+int a=0;
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:19:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
+int a=0;
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:19:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+String OUTSTRING="";
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
+String OUTSTRING="";
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
-while(!isOptimal(tableau)){
 doIteration(tableau);
+while(!isOptimal(tableau)){
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+try{
 solvePhase1(tableau);
+}finally{
+doIteration(tableau);
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+try{
 tableau.discardArtificialVariables();
+}finally{
+doIteration(tableau);
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+try{
 solvePhase1(tableau);
+}finally{
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
+try{
 tableau.discardArtificialVariables();
+}finally{
+solvePhase1(tableau);
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:21:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+doIteration(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
-doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:23:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+if(equals(tableau)){
+return null;
+}
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:23:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+if(equals(tableau)){
+return null;
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:23:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(equals(tableau)){
+return null;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(equals(tableau)){
+return null;
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(equals(tableau)){
+return null;
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+int indexSelection=0;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+int indexSelection=0;
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+if(tableau.equals("sounds")){
+continue;
+}
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+int a=1;
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
+int a=1;
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+boolean b=true;
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
+boolean b=true;
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+if(tableau==null){
+continue;
+}
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+if(tableau==null){
+return null;
+}
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau==null){
+return null;
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(tableau==null){
+return null;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(tableau==null){
+return null;
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+if(tableau==null){
+return null;
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+if("&null".equals(tableau)){
+return null;
+}
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if("&null".equals(tableau)){
+return null;
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau.equals("-1")){
+return null;
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+assert (tableau!=null);
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+assert (tableau!=null);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:24:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+if(tableau!=null){
+doIteration(tableau);
+}
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+assert (tableau!=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon));
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+assert (tableau!=null);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+if(tableau.equals(null)){
+return null;
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(tableau.equals(null)){
+return null;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau.equals(null)){
+return null;
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(tableau.equals(null)){
+return null;
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+if(tableau.equals("655")){
+System.out.println();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(tableau.equals("655")){
+System.out.println();
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(tableau.equals("655")){
+System.out.println();
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau.equals("655")){
+System.out.println();
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+if((Thread.currentThread().interrupted())){
+return null;
+}
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if((Thread.currentThread().interrupted())){
+return null;
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(tableau==null){
+throw new OptimizationException("player is not initialised, game might not be started");
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(tableau==null){
+throw new OptimizationException("player is not initialised, game might not be started");
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+if(tableau==null){
+throw new OptimizationException("Root not directory or IO error occurred");
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(tableau==null){
+throw new OptimizationException("Root not directory or IO error occurred");
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+if(tableau==null){
+throw new OptimizationException("Root not directory or IO error occurred");
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau==null){
+throw new OptimizationException("Root not directory or IO error occurred");
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau!=null){
 solvePhase1(tableau);
-tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
+if(tableau!=null){
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+}
+if(tableau==null){
+throw new OptimizationException("connection offline");
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7367/pattern-ver1-serial/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ServerJms.java-open.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau==null){
+throw new OptimizationException("connection offline");
+}
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7367/pattern-ver1-serial/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ServerJms.java-open.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
-return tableau.getSolution();
+return tableau==null?null:tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
+if(tableau!=null){
 return tableau.getSolution();
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
-return tableau.getSolution();
+return tableau!=null?tableau.getSolution():null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+if(tableau!=null){
 solvePhase1(tableau);
+}
+if(tableau!=null){
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4107/pattern-ver1-serial/src.baseline.hvac.system7.HVACSystem7.java-checkSupplySideSystem.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+doIteration(tableau);
 doIteration(tableau);
+tableau.discardArtificialVariables();
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+doIteration(tableau);
+solvePhase1(tableau);
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+doIteration(tableau);
 doIteration(tableau);
+solvePhase1(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+doIteration(tableau);
+tableau.discardArtificialVariables();
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+solvePhase1(tableau);
+tableau.discardArtificialVariables();
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+tableau.discardArtificialVariables();
+solvePhase1(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+boolean succeeded=false;
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
+succeeded=true;
+}
+if(!succeeded){
+return null;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+boolean atLeastOneNonProhibited=false;
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+if(atLeastOneNonProhibited){
+throw new OptimizationException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
+atLeastOneNonProhibited=true;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+for(int i=0;i<24;i++){
 doIteration(tableau);
+}
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
+for(int i=0;i<24;i++){
 tableau.discardArtificialVariables();
+}
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
+for(int i=0;i<24;i++){
 solvePhase1(tableau);
+}
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
+long startTime=System.currentTimeMillis();
 doIteration(tableau);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
+long startTime=System.currentTimeMillis();
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
 solvePhase1(tableau);
 tableau.discardArtificialVariables();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:27:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[182,194]
------------Candidate---------------
 @Override public RealPointValuePair doOptimize() throws OptimizationException{
  final SimplexTableau tableau=new SimplexTableau(f,constraints,goalType,restrictToNonNegative,epsilon);
-solvePhase1(tableau);
-tableau.discardArtificialVariables();
 while(!isOptimal(tableau)){
 doIteration(tableau);
 }
 return tableau.getSolution();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 15, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 11:27:06 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexTableau.createTableau:[170, 126, 127, 129, 130, 133, 136, 137, 138, 140, 141, 144, 150, 151, 152, 153, 154, 157, 160, 166, 169, 176, 183]#0.3333333333333333
Compute Candidate : 2019.09.07 AD at 11:27:23 CDT - 2019.09.07 AD at 13:00:40 CDT , PNumber : 11452, CandNumber : 959 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+continue;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+continue;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+continue;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+continue;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:00:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:00:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+ int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+ int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+ int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+ RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
-int slackVar=0;
+ int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
-int artificialVar=0;
+ int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)&&(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()==0)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==0){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+return null;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+return null;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+return null;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;matrix[zIndex][zIndex]<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;matrix[zIndex][width-1]<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;matrix[0][0]<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;matrix[0][getArtificialVariableOffset()+artificialVar]<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;matrix[zIndex][getSlackVariableOffset()-1]<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
-return matrix;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=0;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<=constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Collection;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,myUid;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i>constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,MAX_SERVICE_NODES;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+break;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+break;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+break;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+break;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][height-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][zIndex-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+break;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1233/pattern-ver1-serial/crm.src.main.java.com.ogg.crm.ui.activity.CustomerPublicListActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()<=2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()<=1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=3;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()-slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables-numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables-numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables-getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()-1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar--]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<constraints.size();i--){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][getSlackVariableOffset()+slackVar--]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar--]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+width]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+height]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+zIndex]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+row]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+slackVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:03:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()>=2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()>=1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+int row=getNumObjectiveFunctions()+1;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/688/pattern-ver1-serial/src.it.demo.src.main.java.com.example.demo.Target.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=constraints.size()+1;
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/688/pattern-ver1-serial/src.it.demo.src.main.java.com.example.demo.Target.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+1+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/688/pattern-ver1-serial/src.it.demo.src.main.java.com.example.demo.Target.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[1][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[1],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[1][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[1],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[1][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][1]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()!=1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()!=2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()!=Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()!=Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()!=Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+Integer width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+Integer zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
-int slackVar=0;
+Integer slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
-int artificialVar=0;
+Integer artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+Integer height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+Integer row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+3+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+3+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+3+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+3;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[i][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/625/pattern-ver1-serial/src.controllers.multiPlayer.sampleMCTS.SingleTreeNode.java-rollOut.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[slackVar][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/625/pattern-ver1-serial/src.controllers.multiPlayer.sampleMCTS.SingleTreeNode.java-rollOut.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-2]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-2]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,localLevel;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()==null){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/1940/pattern-ver1-serial/src.Puissance4.java-undo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==null)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/1940/pattern-ver1-serial/src.Puissance4.java-undo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==null)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/1940/pattern-ver1-serial/src.Puissance4.java-undo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+LinearConstraint constraint=constraints.remove(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2156/pattern-ver1-serial/src.server.Server.java-addScheduledFailure.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:05:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=width;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=height;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:06:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=zIndex;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:06:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=slackVar;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:06:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=artificialVar;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=i;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][row-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/3851/pattern-ver1-serial/src.main.java.com.sandagerdi.Operation.java-substraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][height-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/3851/pattern-ver1-serial/src.main.java.com.sandagerdi.Operation.java-substraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)!=(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[0][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[0][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[0],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[0][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[0],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[0][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][0]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=10;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[2][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][2]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[2][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[2],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:07:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[2][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[2],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[2][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()>2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()>1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==4){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()==4)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-width]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-height]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-zIndex]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=(maximize)?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=(maximize)?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=(maximize)?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<constraints.size();i++,new ArrayList<KeyBinding>()){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=100;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:08:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=row;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/2460/pattern-ver1-serial/modules.extension.xsd.xsd-wfs.src.main.java.org.geotools.wfs.PropertyValueCollection.java-PropertyValueCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==5){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()==5)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+double[][] matrix=new double[(height)][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+double[][] matrix=new double[(width)][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=0.0;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[artificialVar][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[zIndex][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[width][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[height][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=4;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=maximize?1:-2;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-2):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:09:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-2*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+i++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+artificialVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+zIndex++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+row++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+width++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+height++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,_afterComposeMethodCache;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+i++;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,mActions;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+return matrix;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+return matrix;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return matrix;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+return matrix;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()==1)?0:0;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1552/pattern-ver1-serial/src.main.java.net.sourceforge.fenixedu.domain.Tutorship.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()-artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/3195/pattern-ver1-serial/src.org.compevol.ssgd.HKYSkylineIntegrator.java-transversionH.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<constraints.size();i++,new ArrayList<>()){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1043/pattern-ver1-serial/src.main.java.application.controllers.MainController.java-switchScene.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,mRelationId;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:10:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5087/pattern-ver1-serial/src.main.java.ch.vorburger.raspberry.turtle.Turtle.java-haltInSeconds.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=5;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
-return matrix;
+return createTableau(false);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/4268/pattern-ver1-serial/library.src.main.java.com.mbientlab.metawear.impl.DefaultMetaWearBoard.java-fromSensor.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ final double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ final int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ final double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ final int height=constraints.size()+getNumObjectiveFunctions();
+ final double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ final LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+ final int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:11:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=-1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+ int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+ int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+ RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+ int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
-int slackVar=0;
+ int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
-int artificialVar=0;
+ int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ List<LinearConstraint> constraints=getNormalizedConstraints();
+ int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=0;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=maximize?this.f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):this.f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=this.constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?this.f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:12:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*this.f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=2;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=3;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Iterator;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()==-1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Iterator;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==-1){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+slackVar++;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+slackVar++;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+slackVar++;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+artificialVar++;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+slackVar++;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+artificialVar++;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
+slackVar++;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+artificialVar++;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+width++;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
-if(!restrictToNonNegative){
+if(!!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(!!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+slackVar++;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+artificialVar++;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+artificialVar++;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+width++;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+zIndex++;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+row++;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+row++;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:13:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+row++;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+i++;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+artificialVar++;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+slackVar++;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+1]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/688/pattern-ver1-serial/src.it.demo.src.main.java.com.example.demo.Target.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+3]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
-if(!restrictToNonNegative){
+if(true){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(true){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+i++;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
-return matrix;
+return matrix.clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4683/pattern-ver1-serial/backend.src.main.java.com.benine.backend.camera.ipcameracontrol.IPCamera.java-getPresets.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+width--;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+zIndex--;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+slackVar--;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+slackVar--;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+artificialVar--;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+slackVar--;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+row--;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+row--;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+row--;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+i--;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+slackVar--;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:14:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+i--;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+width++;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/5574/pattern-ver1-serial/no.ntnu.item.semesterassignment.src.no.ntnu.item.semesterassignment.taxidispatcher.TaxiDispatcher.java-getRequestQueuePosition.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+zIndex++;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/5574/pattern-ver1-serial/no.ntnu.item.semesterassignment.src.no.ntnu.item.semesterassignment.taxidispatcher.TaxiDispatcher.java-getRequestQueuePosition.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=10;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+constraints.clear();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex++][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex++],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex++][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+matrix[zIndex++][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[row++],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row++][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row++][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row++][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<this.constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/941/pattern-ver1-serial/src.main.java.org.spongepowered.api.util.event.callback.CallbackList.java-containsAll.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+return null;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+return null;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:15:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+return null;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+return null;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+return null;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=100;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=width;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/2460/pattern-ver1-serial/modules.extension.xsd.xsd-wfs.src.main.java.org.geotools.wfs.PropertyValueCollection.java-PropertyValueCollection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+synchronized(this){
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+}
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+synchronized(this){
 matrix[row][width-1]=constraint.getValue();
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+createTableau(maximize);
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+createTableau(maximize);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+constraints.clear();
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply((int)(-1)):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+LinearConstraint constraint=constraints.get((int)(i));
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+constraints.clear();
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+constraints.clear();
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+constraints.clear();
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=maximize?1:1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4284/pattern-ver1-serial/object-filter.src.main.java.org.infinispan.objectfilter.impl.util.Interval.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=0.0;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():matrix[zIndex][getSlackVariableOffset()-1]*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():matrix[zIndex][zIndex]*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:16:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():matrix[zIndex][width-1]*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():matrix[0][0]*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=4;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+(int)(slackVar++)]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=constraints.size()+(int)(getNumObjectiveFunctions());
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+(int)(getNumObjectiveFunctions())+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+(int)(numSlackVariables)+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+(int)(1);
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+return null;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+slackVar++;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+artificialVar++;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+width++;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+-1]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+-1+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+-1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+-1+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=constraints.size()+-1;
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+-1+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:17:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+synchronized(this){
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+}
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+synchronized(this){
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+synchronized(this){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+}
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+synchronized(this){
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0,continentName,countryCode;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
-return matrix;
+return (double[][])(matrix);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][getSlackVariableOffset()+slackVar]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()==1)?0:-1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/262/pattern-ver1-serial/src.main.java.com.github.ddth.djs.bo.log.TaskLogBo.java-getDurationPickup.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+return null;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+return null;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+while(true){
+
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+while(true){
+
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+while(true){
+
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+while(true){
+
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+while(true){
+
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+while(true){
+
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:20:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+width]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:20:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+height]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+zIndex]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+artificialVar]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+i]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:20:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=maximize?1:0;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1552/pattern-ver1-serial/src.main.java.net.sourceforge.fenixedu.domain.Tutorship.java-compare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-2]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-2]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5377/pattern-ver1-serial/src.main.Map.java-setTempPos.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()>0)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()>0){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+constraints.clear();
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+constraints.clear();
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
+constraints.clear();
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+constraints.clear();
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+constraints.clear();
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+constraints.clear();
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+constraints.clear();
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+i--;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+synchronized(this){
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+synchronized(this){
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+synchronized(this){
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+synchronized(this){
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+synchronized(this){
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+synchronized(this){
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+slackVar++;
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:21:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
+slackVar++;
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+slackVar++;
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+slackVar++;
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+slackVar++;
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+slackVar++;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=5;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<constraints.size();i++,Charset.forName("UTF-8")){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+if(constraint.getValue()!=0){
 matrix[row][width-1]=constraint.getValue();
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(getInvertedCoeffiecientSum(objectiveCoefficients)!=0){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(getInvertedCoeffiecientSum(constraint.getCoefficients())!=0){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(constraint==null){
+continue;
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/ui.src.main.java.thredds.ui.monitor.MultipleAxisChart.java-finish.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+if(constraint==null){
+continue;
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/ui.src.main.java.thredds.ui.monitor.MultipleAxisChart.java-finish.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(constraint==null){
+continue;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/ui.src.main.java.thredds.ui.monitor.MultipleAxisChart.java-finish.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(constraint==null){
+continue;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/ui.src.main.java.thredds.ui.monitor.MultipleAxisChart.java-finish.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
+if(constraint==null){
+continue;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/ui.src.main.java.thredds.ui.monitor.MultipleAxisChart.java-finish.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+ final RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ final LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+ final int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ final LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+ final LinearConstraint constraint=constraints.get(i);
+ final int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
+ final int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ final LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ final double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ final LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex-1][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex-1],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex-1][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+matrix[zIndex-1][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex-1]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[row-1],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row-1][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row-1][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+ @SuppressWarnings("UnusedAssignment") int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+ @SuppressWarnings("UnusedAssignment") int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+ @SuppressWarnings("UnusedAssignment") RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
-int slackVar=0;
+ @SuppressWarnings("UnusedAssignment") int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
-int artificialVar=0;
+ @SuppressWarnings("UnusedAssignment") int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
+ @SuppressWarnings("UnusedAssignment") List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ @SuppressWarnings("UnusedAssignment") double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+ @SuppressWarnings("UnusedAssignment") LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(constraint!=null){
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(constraint!=null){
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:23:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+1+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+1+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=constraints.size()+1+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+matrix=matrix;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+width=width;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+constraints=constraints;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+matrix[row][width-1]=width;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()+width==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()+width==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()+height==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=(getNumObjectiveFunctions()+height==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
+ final int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
-double[][] matrix=new double[height][width];
+ final double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+constraints.remove(null);
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+if(i==4){
+continue;
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(i==4){
+continue;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if(constraints.isEmpty()){
+return null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+constraints.remove(0);
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(true){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2==false){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<(constraints.size()-1);i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/3138/pattern-ver1-serial/MoMe.src.com.example.mome.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*width;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*height;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*zIndex;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*slackVar;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*artificialVar;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*i;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+constraints.add(constraint);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5858/pattern-ver1-serial/Compile.app.src.main.java.compile_inc.compile.ContactDatabaseHandler.java-dbGetAllContacts.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+if(matrix[zIndex][width-1]==-1*f.getConstantTerm()){
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+}
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+if(matrix[zIndex][zIndex]==-1){
 matrix[zIndex][zIndex]=maximize?1:-1;
+}
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+Arrays.sort(matrix);
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/405/pattern-ver1-serial/twitter-topic-strand-core.src.main.java.twittertopicstrand.util.FileOperations.java-getFiles.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+ final List<LinearConstraint> constraints=getNormalizedConstraints();
+ final int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
-int row=getNumObjectiveFunctions()+i;
+ final int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][0]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][0]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=0xEfffffff&(1);
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][2]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][2]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+int a=0;
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+int a=0;
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+int a=0;
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+int a=0;
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+int a=0;
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+int a=0;
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+int a=0;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
+int a=0;
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions()*2);
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2630/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
-int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+int zIndex=((getNumObjectiveFunctions()==1))?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(row==0.0){
+continue;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4118/pattern-ver1-serial/src.behavior.irl.TabularIRL.java-getBehaviorLogProbabilityHelper.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+String OUTSTRING="";
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
+String OUTSTRING="";
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+String OUTSTRING="";
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+String OUTSTRING="";
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+String OUTSTRING="";
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+String OUTSTRING="";
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+String OUTSTRING="";
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+String OUTSTRING="";
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+if(constraints.isEmpty()){
+return null;
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<constraints.size();){
+i++;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/2063/pattern-ver1-serial/src.minecraft.co.uk.flansmods.common.BlockPlaneWorkbench.java-getBlockTextureFromSideAndMetadata.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/2063/pattern-ver1-serial/src.minecraft.co.uk.flansmods.common.BlockPlaneWorkbench.java-getBlockTextureFromSideAndMetadata.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:27:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=row+1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2169/pattern-ver1-serial/src.net.waqassiddiqi.app.crew.ui.ListCrewForm.java-getData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=row+1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2169/pattern-ver1-serial/src.net.waqassiddiqi.app.crew.ui.ListCrewForm.java-getData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(Double.isNaN(getNumObjectiveFunctions())){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+(getNumObjectiveFunctions()+1)+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=constraints.size()+(getNumObjectiveFunctions()+1);
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2==true){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row-1][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/5494/pattern-ver1-serial/src.war.core.War.java-addLauncher.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(Math.abs(-1)):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
-for(int i=0;i<constraints.size();i++){
+for(int i=0;i<constraints.size();Math.abs(i++)){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
-LinearConstraint constraint=constraints.get(i);
+LinearConstraint constraint=constraints.get(Math.abs(i));
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(equals(constraints)){
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(equals(matrix)){
+return null;
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(equals(matrix)){
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(equals(matrix)){
+return null;
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(equals(zIndex)){
+return null;
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(equals(objectiveCoefficients)){
+return null;
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
+if(equals(constraint)){
+return null;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(equals(constraint)){
+return null;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(constraints.isEmpty()){
+return matrix;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+int indexSelection=0;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+int indexSelection=0;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+int indexSelection=0;
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+int indexSelection=0;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+int indexSelection=0;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+int indexSelection=0;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+int indexSelection=0;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+int indexSelection=0;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=maximize?0:1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/922/pattern-ver1-serial/PluginCore.src.main.java.com.plugin.core.manager.PluginCallbackImpl.java-onRemove.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(constraint.equals("sounds")){
+continue;
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(constraint.equals("sounds")){
+continue;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(matrix.equals("sounds")){
+continue;
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(matrix.equals("sounds")){
+continue;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+int a=1;
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+int a=1;
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+int a=1;
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+int a=1;
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+int a=1;
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+int a=1;
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+int a=1;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
+int a=1;
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(constraints!=null){
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7646/pattern-ver1-serial/src.java.com.smi.travel.datalayer.dao.impl.TourOperationImpl.java-updateTourOperation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+boolean GEQ=true;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+boolean EQ=true;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+boolean LEQ=true;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+boolean b=true;
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+boolean b=true;
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:30:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+boolean b=true;
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+boolean b=true;
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+boolean b=true;
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+boolean b=true;
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+boolean b=true;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
+boolean b=true;
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=constraint.getValue()+1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+if(constraints==null){
+continue;
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(matrix==null){
+continue;
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(matrix==null){
+continue;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(matrix==null){
+continue;
+}
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint==null)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint==null){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint==null)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
-if(constraint.getRelationship()==Relationship.GEQ){
+if(constraint==null){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+if(constraints==null){
+return null;
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if(constraints==null){
+return null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(matrix==null){
+return null;
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(matrix==null){
+return null;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(matrix==null){
+return null;
+}
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(objectiveCoefficients==null){
+return null;
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(matrix==null){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(constraint==null){
+return null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(constraints==null){
+return null;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
+if(f==null){
+return null;
+}
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(objectiveCoefficients==null){
+return null;
+}
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(constraint==null){
+return null;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+if(matrix==null){
+return null;
+}
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship().equals(Relationship.LEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(matrix==null){
+return null;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(matrix==null){
+return null;
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=0;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(Relationship.LEQ.equals(constraint.getRelationship())){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7020/pattern-ver1-serial/simulator.src.main.java.com.hazelcast.simulator.protocol.connector.AbstractServerConnector.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(constraint==null){
+return null;
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(constraint==null){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(constraint==null){
+return null;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:32:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
+if(constraint==null){
+return null;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+if(constraint==null){
+return null;
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if("&null".equals(constraints)){
+return null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if("&null".equals(constraints)){
+return null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if("&null".equals(width)){
+return null;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if("&null".equals(width)){
+return null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if("&null".equals(maximize)){
+return null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+if("&null".equals(height)){
+return null;
+}
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if("&null".equals(matrix)){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if("&null".equals(matrix)){
+return null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+if("&null".equals(zIndex)){
+return null;
+}
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+if("&null".equals(matrix)){
+return null;
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=2;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=3;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][1]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(true){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()==Relationship.LEQ==false){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+if(slackVar<0){
+return null;
+}
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(slackVar<0){
+return null;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(slackVar<0){
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||!(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if(constraints.equals("-1")){
+return null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(constraint.equals("-1")){
+return null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(matrix.equals("-1")){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(objectiveCoefficients.equals("-1")){
+return null;
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2||getNumObjectiveFunctions()==Long.MIN_VALUE){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][0]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=0xEfffffff&(maximize?1:-1);
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=10;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][2]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
-int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+int slackVar=0;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
-int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+int artificialVar=0;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
-int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+int artificialVar=0;
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=100;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
-List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+List<LinearConstraint> constraints=getNormalizedConstraints();
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/4434/pattern-ver1-serial/gui.src.main.java.org.jboss.as.console.client.shared.subsys.messaging.forms.ConnectorForm.java-asWidget.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex++][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex++],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex++][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+matrix[zIndex++][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex++]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[row++],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row++][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row++][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row++][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=this.numDecisionVariables+this.numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/2137/pattern-ver1-serial/DesignPattern.src.builder.SaltWater.java-getWeight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
-int height=constraints.size()+getNumObjectiveFunctions();
+int height=this.constraints.size()+this.getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/2137/pattern-ver1-serial/DesignPattern.src.builder.SaltWater.java-getWeight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(constraints==null){
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(matrix==null){
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(matrix==null){
+return null;
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+assert (constraints!=null);
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+assert (constraints!=null);
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+assert (matrix!=null);
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+assert (matrix!=null);
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+assert (matrix!=null);
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+assert (matrix!=null);
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+assert (!constraints.isEmpty());
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+assert (!constraints.isEmpty());
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=0.0;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(constraints.equals(InputStream.class)){
+return matrix;
+}
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+if(constraints.equals(InputStream.class)){
+return matrix;
+}
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=zIndex+1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2169/pattern-ver1-serial/src.net.waqassiddiqi.app.crew.ui.ListCrewForm.java-getData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=4;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(constraints.contains(constraints)){
+return null;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(constraints.contains(constraints)){
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()==Relationship.LEQ==true){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+if(constraints!=null){
+LinearConstraint constraint=constraints.get(i);
+int row=getNumObjectiveFunctions()+i;
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+if(!restrictToNonNegative){
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+matrix[row][width-1]=constraint.getValue();
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+}
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+if(matrix!=null){
+LinearConstraint constraint=constraints.get(i);
+int row=getNumObjectiveFunctions()+i;
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+if(!restrictToNonNegative){
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+matrix[row][width-1]=constraint.getValue();
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+}
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(constraint!=null){
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=-1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+if(matrix[row][getSlackVariableOffset()+slackVar++]==0){
+return null;
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
+if(matrix[row][getSlackVariableOffset()+slackVar++]==0){
+return null;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+if(matrix[zIndex][getSlackVariableOffset()-1]==0){
+return null;
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+if(matrix[row][getSlackVariableOffset()-1]==0){
+return null;
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(matrix[row][width-1]==0){
+return null;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(matrix[row][getSlackVariableOffset()-1]==0){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+}
+if(matrix[zIndex][getSlackVariableOffset()-1]==0){
+return null;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++-1]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+assert (constraints!=getNormalizedConstraints());
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+assert (width!=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1);
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+assert (height!=constraints.size()+getNumObjectiveFunctions());
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+assert (matrix!=new double[height][width]);
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
+assert (slackVar!=0);
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+assert (artificialVar!=0);
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+assert (constraint!=constraints.get(i));
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+assert (matrix!=null);
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+assert (objectiveCoefficients!=null);
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+assert (matrix!=null);
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+assert (matrix!=null);
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+assert (matrix!=null);
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][getSlackVariableOffset()-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+matrix[zIndex][width-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][width-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][getSlackVariableOffset()-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/3037/pattern-ver1-serial/app.src.main.java.com.githang.clipimageview.ClipImageActivity.java-getRealRect.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+matrix[row][getSlackVariableOffset()+slackVar++]++;
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+matrix[0][0]++;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+matrix[0][0]++;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+artificialVar]=-1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[0][getArtificialVariableOffset()+artificialVar]++;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+assert (constraints!=null);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+assert (matrix!=null);
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+assert (matrix!=null);
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+assert (matrix!=null);
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+assert (matrix!=null);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+assert (matrix!=null);
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+constraints.addAll(this.constraints);
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1671/pattern-ver1-serial/src.org.jgll.regex.RegexOpt.java-withConditions.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+constraints.addAll(this.constraints);
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1671/pattern-ver1-serial/src.org.jgll.regex.RegexOpt.java-withConditions.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+if(constraint.equals("655")){
+System.out.println();
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(constraint.equals("655")){
+System.out.println();
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(constraint.equals("655")){
+System.out.println();
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(constraint.equals("655")){
+System.out.println();
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
+if(constraint.equals("655")){
+System.out.println();
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=5;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2||"查看红包".equals(getNumObjectiveFunctions())){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()==Relationship.LEQ||"查看红包".equals(constraint.getRelationship())){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2||getNumObjectiveFunctions()==3){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint!=null&&constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(constraints.isEmpty()){
+constraints=null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if(constraints.isEmpty()){
+constraints=null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()<0||getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+1+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+constraints.remove(constraints.get(0));
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/5778/pattern-ver1-serial/src.LinkedList.java-main.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=(f==null||maximize)?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1254/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java-getBugLinks.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2||getNumObjectiveFunctions()==0){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2||getNumObjectiveFunctions()>9){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=this.numDecisionVariables+numSlackVariables+this.numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/2137/pattern-ver1-serial/DesignPattern.src.builder.SaltWater.java-getWeight.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4284/pattern-ver1-serial/object-filter.src.main.java.org.infinispan.objectfilter.impl.util.Interval.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2&&getNumObjectiveFunctions()<4000000){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()==Relationship.LEQ||constraint.getRelationship()==null){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2&&getNumObjectiveFunctions()!=9999){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(2>0&&getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+assert (width>=0):"Receive a negative tratment";
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+assert (width>=0):"Receive a negative tratment";
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/262/pattern-ver1-serial/src.main.java.com.github.ddth.djs.bo.log.TaskLogBo.java-getDurationPickup.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():0;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1552/pattern-ver1-serial/src.main.java.net.sourceforge.fenixedu.domain.Tutorship.java-compare.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint==null||constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(constraints.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(constraints.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+assert (constraints!=null):"Appointments day is not allowed to be null!";
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+assert (constraints!=null):"Appointments day is not allowed to be null!";
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+assert (matrix!=null):"Appointments day is not allowed to be null!";
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+assert (matrix!=null):"Appointments day is not allowed to be null!";
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
+assert (matrix!=null):"Appointments day is not allowed to be null!";
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+assert (matrix!=null):"Appointments day is not allowed to be null!";
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+assert (matrix!=null):"Appointments day is not allowed to be null!";
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+assert (width!=0):"Receive a size tratment";
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+assert (width!=0):"Receive a size tratment";
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+assert (height!=0):"Receive a size tratment";
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+if(constraints.isEmpty()){
+constraints=null;
+}
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Collections;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+Collections.sort(constraints,Collections.reverseOrder());
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(constraints.isEmpty()){
+constraints=new ArrayList<>();
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3439/pattern-ver1-serial/app.src.main.java.com.thompalmer.mocktwitterdemo.presentation.feed.FeedAdapter.java-addTweet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Optional;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=(f.getCoefficients()==f.getCoefficients().mapMultiply(-1)||maximize)?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/7820/pattern-ver1-serial/Core.src.org.sleuthkit.autopsy.timeline.datamodel.SingleEvent.java-SingleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Optional;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=(-1*f.getConstantTerm()==f.getConstantTerm()||maximize)?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/7820/pattern-ver1-serial/Core.src.org.sleuthkit.autopsy.timeline.datamodel.SingleEvent.java-SingleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
-RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+RealVector objectiveCoefficients=((f!=null)&&maximize)?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V3/1471/pattern-ver1-serial/src.main.java.de.cismet.cids.custom.sudplan.local.linz.wizard.UploadWizardPanelProject.java-getDescription.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
+if(getNumObjectiveFunctions()==2||getNumObjectiveFunctions()=='"'){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+synchronized(this){
 matrix[0][0]=-1;
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(constraint==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(constraint==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(slackVar>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(row>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+if(slackVar<=0){
+slackVar=1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+if(matrix[row][getSlackVariableOffset()+slackVar++]<0){
+matrix[row][getSlackVariableOffset()+slackVar++]=0;
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
+if(matrix[row][getSlackVariableOffset()+slackVar++]<0){
+matrix[row][getSlackVariableOffset()+slackVar++]=0;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+if(matrix[zIndex][getSlackVariableOffset()-1]<0){
+matrix[zIndex][getSlackVariableOffset()-1]=0;
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(matrix[row][width-1]<0){
+matrix[row][width-1]=0;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+if(matrix[row][getSlackVariableOffset()-1]<0){
+matrix[row][getSlackVariableOffset()-1]=0;
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(matrix[row][getSlackVariableOffset()-1]<0){
+matrix[row][getSlackVariableOffset()-1]=0;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+}
+if(matrix[zIndex][getSlackVariableOffset()-1]<0){
+matrix[zIndex][getSlackVariableOffset()-1]=0;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(row<=0){
+row=1;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
-if(constraint.getRelationship()==Relationship.GEQ){
+if((constraint.getRelationship())==(Relationship.GEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||((constraint.getRelationship())==(Relationship.GEQ))){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/1860/pattern-ver1-serial/structr.structr-core.src.main.java.org.structr.core.entity.AbstractNode.java-collectRelatedNodes.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if((constraint.getRelationship())==(Relationship.LEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(((constraint.getRelationship())==(Relationship.EQ))||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+if(slackVar==100){
+slackVar=0;
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=constraint.getValue()*2;
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients())*2;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:42:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
-matrix[0][0]=-1;
+matrix[0][0]=-1*2;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients)*2;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:43:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][getSlackVariableOffset()+slackVar++]=-1*2;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[0][getArtificialVariableOffset()+artificialVar]=1*2;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1*2;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+copyArray(constraint.getCoefficients().getData(),matrix[row-1],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
+matrix[row-1][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row-1][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row-1][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+matrix[row-1][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex-1][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex-1],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex-1][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex-1][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex-1][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+matrix[zIndex-1][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+matrix[zIndex][zIndex]++;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship()==Relationship.LEQ&&!constraint.getRelationship().equals("")){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
-matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[0][0]=-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+if(getNumObjectiveFunctions()==2){
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+numArtificialVariables+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
-matrix[zIndex][zIndex]=maximize?1:-1;
+matrix[zIndex][zIndex]=maximize?1:-1*2;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=this.numDecisionVariables+numSlackVariables+numArtificialVariables+this.getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/2137/pattern-ver1-serial/DesignPattern.src.builder.SaltWater.java-getWeight.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
-int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+int width=numDecisionVariables+numSlackVariables+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5173/pattern-ver1-serial/cameraAppDemo.app.src.main.java.demo.camera.com.cameraapplication.encoder.TextureMovieEncoder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?0:1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/922/pattern-ver1-serial/PluginCore.src.main.java.com.plugin.core.manager.PluginCallbackImpl.java-onRemove.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+double[][] t=matrix;
+matrix=null;
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
-return matrix;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
-copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(constraint==null){
+throw new IllegalStateException("User isn't registered! "+constraints);
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(matrix==null){
+throw new IllegalStateException("User isn't registered! "+width);
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+if(objectiveCoefficients==null){
+throw new IllegalStateException("User isn't registered! "+maximize);
+}
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(matrix==null){
+throw new IllegalStateException("User isn't registered! "+height);
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=-1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+synchronized(this){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+synchronized(this){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=0;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=2;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=3;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/2664/pattern-ver1-serial/src.main.java.micdoodle8.mods.galacticraft.planets.asteroids.entities.EntityGrapple.java-EntityGrapple.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/2664/pattern-ver1-serial/src.main.java.micdoodle8.mods.galacticraft.planets.asteroids.entities.EntityGrapple.java-EntityGrapple.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if(constraint.getRelationship().equals(Relationship.LEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
-if(constraint.getRelationship()==Relationship.GEQ){
+if(constraint.getRelationship().equals(Relationship.GEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/1351/pattern-ver1-serial/src.main.java.com.cburch.draw.shapes.DrawAttr.java-getFillAttributes.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=10;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(((constraint.getRelationship()==Relationship.EQ))||((constraint.getRelationship()==Relationship.GEQ))){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=100;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/1924/pattern-ver1-serial/src.gui.map.MapDrawerPanel.java-restoreSession.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=width;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/2460/pattern-ver1-serial/modules.extension.xsd.xsd-wfs.src.main.java.org.geotools.wfs.PropertyValueCollection.java-PropertyValueCollection.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=0.0;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+try{
 matrix[row][width-1]=constraint.getValue();
+}finally{
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 1, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=zIndex+1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2169/pattern-ver1-serial/src.net.waqassiddiqi.app.crew.ui.ListCrewForm.java-getData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
+if(slackVar<0){
+slackVar=0;
+}
 int artificialVar=0;
+if(artificialVar<0){
+artificialVar=0;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=4;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+height--;
+if(height==0){
+width=0;
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+height--;
+if(height==0){
+width=0;
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+height--;
+if(height==0){
+width=0;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+height--;
+if(height==0){
+width=0;
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+height--;
+if(height==0){
+width=0;
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+height--;
+if(height==0){
+width=0;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+height--;
+if(height==0){
+width=0;
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.Arrays;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+height--;
+if(height==0){
+width=0;
+}
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/889/pattern-ver1-serial/src.week8.SeamCarver.java-removeHorizontalSeam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm()+1;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3760/pattern-ver1-serial/src.AlienEntryApplication.java-main.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=5;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)||"查看红包".equals((constraint.getRelationship()==Relationship.EQ))){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+synchronized(this){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(!(constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+matrix[row][width-1]=constraint.getValue();
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:48:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][width-1]=constraint.getValue();
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][width-1]=constraint.getValue();
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
-}
 matrix[row][width-1]=constraint.getValue();
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][width-1]=constraint.getValue();
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][width-1]=constraint.getValue();
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(true){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)==false){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
+matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/293/pattern-ver1-serial/src.snpsvm.app.CommandLineApp.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(!restrictToNonNegative&&haveBreadCrumbs){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+haveBreadCrumbs=true;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(!restrictToNonNegative&&haveBreadCrumbs){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+haveBreadCrumbs=true;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(!restrictToNonNegative&&haveBreadCrumbs){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+haveBreadCrumbs=true;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:49:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(!restrictToNonNegative&&haveBreadCrumbs){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+haveBreadCrumbs=true;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
+if(!restrictToNonNegative&&haveBreadCrumbs){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+haveBreadCrumbs=true;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/947/pattern-ver1-serial/advinst-server.src.main.java.jetbrains.buildServer.advinst.server.AdvinstRunTypePropertiesProcessor.java-process.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+try{
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}finally{
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+try{
 matrix[row][width-1]=constraint.getValue();
+}finally{
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+try{
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}finally{
+matrix[row][width-1]=constraint.getValue();
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
-matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)==true){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(matrix==null||constraint==null){
+throw new NullPointerException();
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(constraint==null||matrix==null){
+throw new NullPointerException();
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(!(constraint.getRelationship()==Relationship.EQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/7408/pattern-ver1-serial/src.main.java.com.joshuasnider.workspace.InternetIO.XKCDDebugger.java-printMissing.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+matrix[slackVar-1][artificialVar-1]=1;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/2794/pattern-ver1-serial/BFS.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+matrix[artificialVar-1][slackVar-1]=1;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/2794/pattern-ver1-serial/BFS.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+boolean succeeded=false;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
+succeeded=true;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean succeeded=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(!succeeded){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+succeeded=true;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean succeeded=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+succeeded=true;
+}
+if(!succeeded){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean succeeded=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(!succeeded){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+succeeded=true;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+boolean succeeded=false;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+succeeded=true;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean succeeded=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(!succeeded){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+succeeded=true;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean succeeded=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
+if(!succeeded){
+return null;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+succeeded=true;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+boolean succeeded=false;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+succeeded=true;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+boolean succeeded=false;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+succeeded=true;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+boolean succeeded=false;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+if(!succeeded){
+return null;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+succeeded=true;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
-matrix[0][0]=-1;
-}
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if(getNumObjectiveFunctions()==2){
+matrix[0][0]=-1;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
-matrix[0][0]=-1;
-}
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(getNumObjectiveFunctions()==2){
+matrix[0][0]=-1;
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
-if(getNumObjectiveFunctions()==2){
-matrix[0][0]=-1;
-}
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(getNumObjectiveFunctions()==2){
+matrix[0][0]=-1;
+}
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(matrix[0][getArtificialVariableOffset()+artificialVar]!=1){
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(width==3){
+System.out.println("debug");
+}
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+if(width==3){
+System.out.println("debug");
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+if(width==3){
+System.out.println("debug");
+}
 matrix[0][0]=-1;
+if(width==3){
+System.out.println("debug");
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+if(height==3){
+System.out.println("debug");
+}
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+if(height==3){
+System.out.println("debug");
+}
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+if(height==3){
+System.out.println("debug");
+}
 matrix[0][0]=-1;
+if(height==3){
+System.out.println("debug");
+}
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(matrix[row][getSlackVariableOffset()+slackVar++]!=1){
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+if(matrix[row][getSlackVariableOffset()+slackVar++]!=1){
 matrix[row][width-1]=constraint.getValue();
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(matrix[row][width-1]!=constraint.getValue()){
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+}
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+if(constraint!=null){
 matrix[row][width-1]=constraint.getValue();
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/64/pattern-ver1-serial/app.src.main.java.com.example.scame.lighttube.presentation.fragments.ChannelVideosFragment.java-onSaveInstanceState.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
+if((constraint.getRelationship())==(Relationship.LEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(((constraint.getRelationship()==Relationship.EQ))||((constraint.getRelationship()==Relationship.GEQ))){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
-if(constraint.getRelationship()==Relationship.GEQ){
+if((constraint.getRelationship())==(Relationship.GEQ)){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if(((constraint.getRelationship()==Relationship.EQ))||((constraint.getRelationship()==Relationship.GEQ))){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm()*2;
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=1*2;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(matrix[i]==null){
+throw new IllegalArgumentException("Failed to get an icon for "+constraints.getClass().getName());
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/995/pattern-ver1-serial/libtech.RenderLightmap.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+if(constraints==null||matrix==null||constraint==null){
+return null;
+}
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
-}
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+if(!restrictToNonNegative){
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+}
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(width<3){
+width=3;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+if(zIndex<3){
+zIndex=3;
+}
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(width<3){
+width=3;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
+if(slackVar<3){
+slackVar=3;
+}
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
+if(width<3){
+width=3;
+}
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
+if(artificialVar<3){
+artificialVar=3;
+}
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+if(height<3){
+height=3;
+}
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
+if(zIndex<3){
+zIndex=3;
+}
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
-if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
+long startTime=System.currentTimeMillis();
 matrix[0][0]=-1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
+long startTime=System.currentTimeMillis();
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+long startTime=System.currentTimeMillis();
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
+long startTime=System.currentTimeMillis();
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+long startTime=System.currentTimeMillis();
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
+long startTime=System.currentTimeMillis();
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+long startTime=System.currentTimeMillis();
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
+long startTime=System.currentTimeMillis();
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+for(int l=0;l<24;l++){
+matrix[10][l]=0;
+}
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
+for(int l=0;l<24;l++){
+matrix[10][l]=0;
+}
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
+if(constraints.size()==0){
+return null;
+}
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
+if((constraints.size()<=1)||(slackVar==0)){
+return null;
+}
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4230/pattern-ver1-serial/src.main.java.net.sf.mzmine.modules.peaklistmethods.dataanalysis.heatmaps.HeatMapTask.java-groupingDataset.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+synchronized(this){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 0, INS : 1, DEL : 14
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 0, INS : 1, DEL : 14
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+haveBreadCrumbs=true;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)&&haveBreadCrumbs){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 9, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
+haveBreadCrumbs=true;
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)&&haveBreadCrumbs){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 9, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)&&haveBreadCrumbs){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+haveBreadCrumbs=true;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 9, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
+haveBreadCrumbs=true;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)&&haveBreadCrumbs){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 9, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+boolean haveBreadCrumbs=false;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+haveBreadCrumbs=true;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)&&haveBreadCrumbs){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 9, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
-copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 8, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:54:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
-matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
+matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/198/pattern-ver1-serial/src.com.bekvon.bukkit.residence.listeners.ResidencePlayerListener.java-onPlayerMove.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 0, INS : 1, DEL : 14
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 8, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
+matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=Math.round(matrix[row][width-1]*100.0)/100.0;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=Math.round(matrix[row][getSlackVariableOffset()+slackVar++]*100.0)/100.0;
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=Math.round(matrix[row][getSlackVariableOffset()+slackVar++]*100.0)/100.0;
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[0][getArtificialVariableOffset()+artificialVar]=Math.round(matrix[0][getArtificialVariableOffset()+artificialVar]*100.0)/100.0;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=Math.round(matrix[row][getSlackVariableOffset()+slackVar++]*100.0)/100.0;
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[row][getArtificialVariableOffset()+artificialVar++]=Math.round(matrix[row][getArtificialVariableOffset()+artificialVar++]*100.0)/100.0;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=Math.round(matrix[row][getSlackVariableOffset()+slackVar++]*100.0)/100.0;
+matrix[row][getSlackVariableOffset()+slackVar++]=Math.round(matrix[row][getSlackVariableOffset()+slackVar++]*100.0)/100.0;
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
+matrix[row][getSlackVariableOffset()-1]=Math.round(matrix[row][getSlackVariableOffset()-1]*100.0)/100.0;
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
+matrix[row][getSlackVariableOffset()+slackVar++]=Math.round(matrix[row][getSlackVariableOffset()+slackVar++]*100.0)/100.0;
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+matrix[row][width-1]=Math.round(matrix[row][width-1]*100.0)/100.0;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
+matrix[0][getArtificialVariableOffset()+artificialVar]=Math.round(matrix[0][getArtificialVariableOffset()+artificialVar]*100.0)/100.0;
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 0, INS : 1, DEL : 24
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
-if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
-}
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 0, INS : 1, DEL : 24
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 0, INS : 1, DEL : 24
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 0, INS : 1, DEL : 24
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
-}
-matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
+matrix[row][width-1]=constraint.getValue();
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+}
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
+matrix[0][getArtificialVariableOffset()+artificialVar]=1;
+matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+}
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+}
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
+if(constraint.getRelationship()==Relationship.LEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=1;
+}else {
+if(constraint.getRelationship()==Relationship.GEQ){
+matrix[row][getSlackVariableOffset()+slackVar++]=-1;
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
+}
+}
 }
 }
 if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
 matrix[0][getArtificialVariableOffset()+artificialVar]=1;
 matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
-}
 matrix[row][width-1]=constraint.getValue();
 if(constraint.getRelationship()==Relationship.LEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=1;
 }else {
 if(constraint.getRelationship()==Relationship.GEQ){
 matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
 }
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
 }
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/3244/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 56, UPD : 8, INS : 0, DEL : 48
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
-if(!restrictToNonNegative){
-matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
-}
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
-}else {
-if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
-}
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
-}
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 68, UPD : 8, INS : 0, DEL : 60
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[118,184]
------------Candidate---------------
 protected double[][] createTableau(boolean maximize){
 List<LinearConstraint> constraints=getNormalizedConstraints();
 int width=numDecisionVariables+numSlackVariables+numArtificialVariables+getNumObjectiveFunctions()+1;
 int height=constraints.size()+getNumObjectiveFunctions();
 double[][] matrix=new double[height][width];
 if(getNumObjectiveFunctions()==2){
 matrix[0][0]=-1;
 }
 int zIndex=(getNumObjectiveFunctions()==1)?0:1;
 matrix[zIndex][zIndex]=maximize?1:-1;
 RealVector objectiveCoefficients=maximize?f.getCoefficients().mapMultiply(-1):f.getCoefficients();
 copyArray(objectiveCoefficients.getData(),matrix[zIndex],getNumObjectiveFunctions());
 matrix[zIndex][width-1]=maximize?f.getConstantTerm():-1*f.getConstantTerm();
 if(!restrictToNonNegative){
 matrix[zIndex][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(objectiveCoefficients);
 }
 int slackVar=0;
 int artificialVar=0;
 for(int i=0;i<constraints.size();i++){
 LinearConstraint constraint=constraints.get(i);
 int row=getNumObjectiveFunctions()+i;
 copyArray(constraint.getCoefficients().getData(),matrix[row],1);
 if(!restrictToNonNegative){
 matrix[row][getSlackVariableOffset()-1]=getInvertedCoeffiecientSum(constraint.getCoefficients());
 }
 matrix[row][width-1]=constraint.getValue();
-if(constraint.getRelationship()==Relationship.LEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=1;
-}else {
-if(constraint.getRelationship()==Relationship.GEQ){
-matrix[row][getSlackVariableOffset()+slackVar++]=-1;
-}
-}
-if((constraint.getRelationship()==Relationship.EQ)||(constraint.getRelationship()==Relationship.GEQ)){
-matrix[0][getArtificialVariableOffset()+artificialVar]=1;
-matrix[row][getArtificialVariableOffset()+artificialVar++]=1;
-}
 }
 return matrix;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 70, UPD : 8, INS : 0, DEL : 62
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 13:56:21 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow:[297, 296, 291, 292, 293, 294, 295, 300]#0.30151134457776363
Compute Candidate : 2019.09.07 AD at 13:56:38 CDT - 2019.09.07 AD at 14:16:11 CDT , PNumber : 11451, CandNumber : 327 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+continue;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+continue;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+continue;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
-int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+ int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
-Integer row=null;
+ Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=1;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+return 0;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+return 0;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+return 0;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row!=null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+return null;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4522/pattern-ver1-serial/core.src.main.java.io.undertow.server.protocol.framed.AbstractFramedChannel.java-receive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+return null;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4522/pattern-ver1-serial/core.src.main.java.io.undertow.server.protocol.framed.AbstractFramedChannel.java-receive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+return null;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4522/pattern-ver1-serial/core.src.main.java.io.undertow.server.protocol.framed.AbstractFramedChannel.java-receive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;row<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;col<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<=getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:16:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Collection;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,myUid;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,DEFAULT_TIMEOUT2;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
-int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+Integer start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3073/pattern-ver1-serial/src.mlsp.cs.cmu.edu.tmm.TMMAlphaPosterior.java-alphaSum.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i>getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=0;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,MAX_SERVICE_NODES;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,MAX_ZK_WAIT_RETRY_TIMES;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+break;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+break;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+break;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();i--){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+return null;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,localLevel;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=row;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=col;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=start;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=2;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
-int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+int start=(ignoreObjectiveRows)?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();i++,new ArrayList<KeyBinding>()){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
-int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+int start=ignoreObjectiveRows?getNumObjectiveFunctions():1;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4284/pattern-ver1-serial/object-filter.src.main.java.org.infinispan.objectfilter.impl.util.Interval.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:17:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=null;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return col;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
-return null;
+return start;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
-return null;
+return row;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
-return null;
+return col;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
-return null;
+return i;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return start;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:18:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();start++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();row++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();col++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)!=(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/4543/pattern-ver1-serial/launcher.src.main.java.com.benny.openlauncher.widget.GridAppDrawer.java-readyForDrag.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,_afterComposeMethodCache;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+i++;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.List;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,mActions;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+return col;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+return row;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+return col;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();i++,new ArrayList<>()){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1043/pattern-ver1-serial/src.main.java.application.controllers.MainController.java-switchScene.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,mRelationId;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=10;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return getBasicRow(0);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=-1;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return new Integer(row);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6348/pattern-ver1-serial/src.bufmgr.LIRS.java-getReplacementCandidate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
-Integer row=null;
-int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+ Integer row=null;
+ int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+start++;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+col++;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+row++;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+row++;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+col++;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+col++;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
+col++;
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+start++;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+i++;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+start++;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+start++;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+row++;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+i++;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+start--;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+col--;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+row--;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:22:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+row--;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:22:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+col--;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+col--;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:22:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+start--;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+i--;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+start--;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+start--;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+row--;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+i--;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5579/pattern-ver1-serial/src.utils.Controls.java-getCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+return 0;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+return 0;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+getBasicRow(col);
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+getBasicRow(col);
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+getBasicRow(col);
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+getBasicRow(row);
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+getBasicRow(start);
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+return 0;
 }
+return 0;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3053/pattern-ver1-serial/src.UI.ReservationUI.java-reserveTableOption.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,continentName,countryCode;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+break;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+break;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+break;
 }
+break;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return (Integer)(row);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:25:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
-int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+int start=ignoreObjectiveRows?getNumObjectiveFunctions():-1;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/262/pattern-ver1-serial/src.main.java.com.github.ddth.djs.bo.log.TaskLogBo.java-getDurationPickup.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:25:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
+while(true){
+
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+while(true){
+
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:29:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+while(true){
+
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start,userEmail;i<getHeight();i++,i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+i--;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+synchronized(this){
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+synchronized(this){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+i++;
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+i++;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+i++;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+i++;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();i++,Charset.forName("UTF-8")){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+synchronized(this){
 return null;
+}
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+synchronized(this){
 row=i;
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(i!=0){
 row=i;
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(30-(i),col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,30-(col)),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(30-(i),col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,30-(col)),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+i=col;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+col=col;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
+col=col;
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+col=col;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(i==4){
+continue;
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(i==4){
+continue;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return row&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+row=1000;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+start=1000;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=i*row;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=i*col;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=i*start;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=i*i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(row==null){
 row=i;
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=0xEfffffff&(i);
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+int a=0;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+int a=0;
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+int a=0;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+int a=0;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+int a=0;
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col)*2,0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2630/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col)*2,1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2630/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+String OUTSTRING="";
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+String OUTSTRING="";
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+String OUTSTRING="";
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+String OUTSTRING="";
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:37:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+String OUTSTRING="";
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+i++;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();){
+i++;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+i++;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+int MathUtils=5;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+int epsilon=5;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+int MathUtils=5;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+int epsilon=5;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(Math.round(i),col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,Math.round(col)),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(Math.round(i),col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,Math.round(col)),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();Math.abs(i++)){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+Integer epsilon=8;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+Integer epsilon=8;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(equals(col)){
+return 0;
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(equals(col)){
+return 0;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(equals(col)){
+return 0;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+int indexSelection=0;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+int indexSelection=0;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
+int indexSelection=0;
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+int indexSelection=0;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(Math.max(i,col),col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,Math.max(i,col)),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(Math.max(i,col),col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,Math.max(i,col)),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i*2,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col*2),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i*2,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col*2),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=row+i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=(i/1000);
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+int a=1;
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+int a=1;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+int a=1;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+int a=1;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+int a=1;
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+boolean MathUtils=true;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+boolean MathUtils=true;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+boolean epsilon=true;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+boolean epsilon=true;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+boolean b=true;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+boolean b=true;
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+boolean b=true;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+boolean b=true;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+boolean b=true;
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(row==null){
+continue;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(row==null){
+return null;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row==null){
+return null;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row==null){
+return 0;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(row==null){
+return 0;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(row==null){
+return 0;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if("index".equals(col)){
+return 0;
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if("index".equals(col)){
+return 0;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+if("index".equals(col)){
+return 0;
+}
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+if("index".equals(ignoreObjectiveRows)){
+return 0;
+}
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if("index".equals(row)){
+return 0;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if("index".equals(row)){
+return 0;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if("index".equals(start)){
+return 0;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+return null;
+}
+if("&null".equals(col)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+if("&null".equals(col)){
+return null;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if("&null".equals(col)){
+return null;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if("&null".equals(ignoreObjectiveRows)){
+return null;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if("&null".equals(row)){
+return null;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+if("&null".equals(row)){
+return null;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if("&null".equals(start)){
+return null;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(row==null){
+return null;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4514/pattern-ver1-serial/src.main.java.com.muzima.service.HTMLFormObservationCreator.java-createObservation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(row==null){
+return null;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4514/pattern-ver1-serial/src.main.java.com.muzima.service.HTMLFormObservationCreator.java-createObservation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+row=i;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+row=i;
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+row=i;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+row=i;
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
 }else {
+row=i;
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+row=i;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+row=i;
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+row=i;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+row=i;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(col<0){
+return 0;
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(col<0){
+return 0;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(col<0){
+return 0;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row.equals("-1")){
+return 0;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+assert (row!=null);
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+assert (row!=null);
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(row.equals(InputStream.class)){
+return col;
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(row.equals(InputStream.class)){
+return col;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row.equals(InputStream.class)){
+return col;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+if(row==0){
+return 0;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+if(row==0){
+return 0;
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(row==0){
+return 0;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=-1;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+row++;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=-1;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+row++;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=-1;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
+row++;
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
+row=-1;
+row++;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+assert (row!=null);
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(row.equals("655")){
+System.out.println();
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(row.equals("655")){
+System.out.println();
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
-for(int i=start;i<getHeight();i++){
+for(int i=start;i<getHeight();Math.max(i++,0)){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+assert (col>=0):"Receive a negative tratment";
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+assert (col>=0):"Receive a negative tratment";
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+assert (col>=0):"Receive a negative tratment";
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+assert (row>=0):"Receive a negative tratment";
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+assert (row>=0):"Receive a negative tratment";
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+assert (start>=0):"Receive a negative tratment";
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+row=i;
 }
+row=i;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+row=i;
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+row=i;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+assert (row!=null):"Appointments day is not allowed to be null!";
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+assert (row!=null):"Appointments day is not allowed to be null!";
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+assert (col!=0):"Receive a size tratment";
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+assert (col!=0):"Receive a size tratment";
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+assert (col!=0):"Receive a size tratment";
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+assert (row!=0):"Receive a size tratment";
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+assert (row!=0):"Receive a size tratment";
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+assert (start!=0):"Receive a size tratment";
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(col>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(col>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(col>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+if(row<0){
+row=0;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+if(row<0){
+row=0;
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(row<0){
+row=0;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(row<=0){
+row=1;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(start<=0){
+start=1;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(row<=0){
+row=1;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i-1,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i-1,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col-1),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i-1,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i-1,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col-1),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col-1),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col-1),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(ignoreObjectiveRows&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if((MathUtils.equals(getEntry(i,col),1.0,epsilon))&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+Integer t=row;
+row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
-return row;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!(MathUtils.equals(getEntry(i,col),0.0,epsilon))){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5197/pattern-ver1-serial/src.main.java.com.example.pc.olx.User.UserManager.java-isLogin.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(true){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&ignoreObjectiveRows){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)==false){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&false){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)==true){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
-row=i;
-}else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+row=i;
+}else {
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(col<0){
+return 0;
+}
+if(col>=row){
+return row-1;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+if(col<0){
+return 0;
+}
 Integer row=null;
+if(col>=row){
+return row-1;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(row<0){
+return 0;
+}
+if(row>=col){
+return col-1;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row<0){
+return 0;
+}
+if(row>=col){
+return col-1;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+if(col<0){
+return 0;
+}
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(col>=start){
+return start-1;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(start<0){
+return 0;
+}
+if(start>=col){
+return col-1;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(col==3){
+System.out.println("debug");
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
+if(col==3){
+System.out.println("debug");
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(col==3){
+System.out.println("debug");
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
+if(col==3){
+System.out.println("debug");
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(col==3){
+System.out.println("debug");
+}
 row=i;
+if(col==3){
+System.out.println("debug");
+}
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+if(col==3){
+System.out.println("debug");
+}
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
+if(col==3){
+System.out.println("debug");
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(row==3){
+System.out.println("debug");
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
+if(row==3){
+System.out.println("debug");
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+if(start==3){
+System.out.println("debug");
+}
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
+if(start==3){
+System.out.println("debug");
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row<0){
+row--;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(start<0){
+start--;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)||"查看红包".equals(MathUtils.equals(getEntry(i,col),1.0,epsilon))){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(!MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(true){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)==false){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+boolean haveBreadCrumbs=false;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&haveBreadCrumbs){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/573/pattern-ver1-serial/src.CollisionDetection.java-detection.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)==true){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(!MathUtils.equals(getEntry(i,col),1.0,epsilon)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/7408/pattern-ver1-serial/src.main.java.com.joshuasnider.workspace.InternetIO.XKCDDebugger.java-printMissing.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row<3){
+row=3;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(start<3){
+start=3;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
+if(row<0){
+row=0;
+}
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+if(start<0){
+start=0;
+}
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
+long startTime=System.currentTimeMillis();
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+long startTime=System.currentTimeMillis();
 row=i;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+long startTime=System.currentTimeMillis();
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
+long startTime=System.currentTimeMillis();
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 return row;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+boolean haveBreadCrumbs=false;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&haveBreadCrumbs){
 return null;
 }
+haveBreadCrumbs=true;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 8, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+boolean haveBreadCrumbs=false;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&haveBreadCrumbs){
 return null;
 }
 }
+haveBreadCrumbs=true;
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 8, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+boolean haveBreadCrumbs=false;
 for(int i=start;i<getHeight();i++){
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
+haveBreadCrumbs=true;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&haveBreadCrumbs){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 8, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
+boolean haveBreadCrumbs=false;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)&&haveBreadCrumbs){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
 }
+haveBreadCrumbs=true;
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 11, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
-if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)){
 row=i;
 }else {
-if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)&&(row==null)){
 return null;
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[285,301]
------------Candidate---------------
 private Integer getBasicRow(int col,boolean ignoreObjectiveRows){
 Integer row=null;
 int start=ignoreObjectiveRows?getNumObjectiveFunctions():0;
 for(int i=start;i<getHeight();i++){
+if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
+row=i;
+}else {
+if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
+return null;
+}
 if(MathUtils.equals(getEntry(i,col),1.0,epsilon)&&(row==null)){
 row=i;
 }else {
 if(!MathUtils.equals(getEntry(i,col),0.0,epsilon)){
 return null;
+}
 }
 }
 }
 return row;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:47:56 CDT
--------------- END -----------------
Location : org.apache.commons.math.linear.ArrayRealVector.mapMultiply:[338, 339, 340, 342]#0.30151134457776363
Compute Candidate : 2019.09.07 AD at 14:48:14 CDT - 2019.09.07 AD at 14:57:39 CDT , PNumber : 11414, CandNumber : 132 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+continue;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:57:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
-double[] out=new double[data.length];
+ double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return new ArrayRealVector(out,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2675/pattern-ver1-serial/core.org.eclipse.cdt.core.parser.org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTConditionalExpression.java-convertToMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+return null;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:57:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;d<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:57:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;out[i]<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return new ArrayRealVector(out,out);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/1763/pattern-ver1-serial/MyApplication.app.src.main.java.com.gcode.notes.controllers.BaseController.java-setNewContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<=data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.Collection;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,myUid;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i>data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,MAX_SERVICE_NODES;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+break;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;i--){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[1]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[1]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,localLevel;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;i++,new ArrayList<KeyBinding>()){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
-double[] out=new double[data.length];
+double[] out=new double[(data.length)];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 14:58:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;d++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;out[i]++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:02:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,_afterComposeMethodCache;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.List;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,mActions;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,mRelationId;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:02:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return this;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2420/pattern-ver1-serial/Nian_Karl.QL.src.org.uva.ql.ast.value.Undefined.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return mapMultiply(0);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+d++;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+d++;
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+i++;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+out[i]++;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+d--;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
+d--;
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+i--;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+d--;
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+out[i]--;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=this.data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+synchronized(this){
 out[i]=data[i]*d;
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+mapMultiply(d);
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
+mapMultiply(d);
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+mapMultiply(i);
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,continentName,countryCode;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return (RealVector)(new ArrayRealVector(out));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+while(true){
+
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,userEmail;i<data.length;i++,i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0,userEmail;i<data.length;i++){
 out[i]=data[i]*d;
 }
-return new ArrayRealVector(out);
+return new ArrayRealVector(out,out);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+i++;
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
-public RealVector mapMultiply(double d){
+public RealVector mapMultiply(double degree){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[i]*degree;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6/pattern-ver1-serial/physicsmodel.src.main.java.com.example.gleb.physicsmodel.PhysicsModel.java-fromDegreeToRad.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;i++,Charset.forName("UTF-8")){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(data[i]*d!=0){
 out[i]=data[i]*d;
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+out=out;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+data=out;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+out=out;
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(i==4){
+continue;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+Arrays.sort(out);
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+Arrays.sort(out);
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+int a=0;
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
+int a=0;
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+String OUTSTRING="";
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
+String OUTSTRING="";
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;){
+i++;
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;Math.abs(i++)){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+}
+if(equals(out)){
+return null;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if(equals(out)){
+return null;
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(equals(out)){
+return null;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(equals(d)){
+return null;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+int indexSelection=0;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.Arrays;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i-1]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.Arrays;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[i-1]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(out.equals("sounds")){
+continue;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+int a=1;
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
+int a=1;
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
+String length="%#.&f";
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+boolean b=true;
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
+boolean b=true;
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(out==null){
+continue;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if(out==null){
+return null;
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(out==null){
+return null;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=1;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=-1;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+}
+if(out==null){
+return null;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+if("&null".equals(d)){
+return null;
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if("&null".equals(out)){
+return null;
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+if("&null".equals(out)){
+return null;
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if("&null".equals(d)){
+return null;
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=0;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[i]*d*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[i]*d*i;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(d<0){
+return null;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if(out.equals("-1")){
+return null;
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=i;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[i];
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=2;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+assert (out!=null);
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+assert (out!=null);
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=0.0;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(out!=null){
+out[i]=data[i]*d;
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+if(out[i]==0){
+return null;
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+assert (out!=new double[data.length]);
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+assert (out!=null);
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+}
+if(out.equals(null)){
+return null;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if(out.equals(null)){
+return null;
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+}
+if(out.equals("655")){
+System.out.println();
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+if(out.equals("655")){
+System.out.println();
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=data[i]*d+data[2];
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2324/pattern-ver1-serial/Java_Game.main.java-isGridFull.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=10;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
-for(int i=0;i<data.length;i++){
+for(int i=0;i<data.length;Math.max(i++,0)){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=(data[i]*d+d)%d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
-public RealVector mapMultiply(double d){
+public RealVector mapMultiply(double pIssued){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=pIssued;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+assert (d>=0):"Receive a negative tratment";
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
+assert (d>=0):"Receive a negative tratment";
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
-public RealVector mapMultiply(double d){
+public RealVector mapMultiply(double thePrescribeMedicationCntl){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=thePrescribeMedicationCntl;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+assert (out!=null):"Appointments day is not allowed to be null!";
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+assert (out!=null):"Appointments day is not allowed to be null!";
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+assert (d!=0):"Receive a size tratment";
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public RealVector mapMultiply(double d){
+assert (d!=0):"Receive a size tratment";
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
-public RealVector mapMultiply(double d){
+public RealVector mapMultiply(double animationStyle){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=animationStyle;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3883/pattern-ver1-serial/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.animation.CardAnimator.java-setAnimationStyle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(d>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+if(out[i]<0){
+out[i]=0;
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
-out[i]=data[i]*d;
+out[i]=-1;
+out[i]++;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(d==3){
+System.out.println("debug");
+}
 out[i]=data[i]*d;
+if(d==3){
+System.out.println("debug");
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+if(i==3){
+System.out.println("debug");
+}
 out[i]=data[i]*d;
+if(i==3){
+System.out.println("debug");
+}
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
+long startTime=System.currentTimeMillis();
 out[i]=data[i]*d;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+out[28]=(byte)0x88;
+out[29]=0x58;
+out[30]=0x01;
+out[31]=0x00;
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
+out[28]=(byte)0x88;
+out[29]=0x58;
+out[30]=0x01;
+out[31]=0x00;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_82_buggy/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java[336,343]
------------Candidate---------------
 public RealVector mapMultiply(double d){
 double[] out=new double[data.length];
+for(int i=0;i<4;i++){
+out[i]=Math.min(1,Math.max(0,out[i]));
+}
 for(int i=0;i<data.length;i++){
 out[i]=data[i]*d;
 }
 return new ArrayRealVector(out);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2980/pattern-ver1-serial/megamek.src.megamek.client.ui.swing.MiniMap.java-paintBVSection.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 20, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath288]
---------START : 2019.09.07 AD at 10:04:21 CDT
---------TIME : 2019.09.07 AD at 15:05:19 CDT
--------------- END -----------------
Finish : math-82 > patch : 0 | Start : Sat Sep 07 10:04:21 CDT 2019 | End : 2019.09.07 AD at 15:05:19 CDT
