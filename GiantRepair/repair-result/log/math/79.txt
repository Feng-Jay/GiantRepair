Repair : math_79
Current failed test : org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate | 2019.09.07 AD at 17:14:14 CDT
Location : org.apache.commons.math.stat.clustering.Cluster.Cluster:[45, 46, 47, 48]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 17:15:00 CDT - 2019.09.07 AD at 17:18:35 CDT , PNumber : 11281, CandNumber : 42 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:18:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=new ArrayList<T>(null);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:18:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=new ArrayList<T>(1);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3262/pattern-ver1-serial/app.src.main.java.com.playing.lokasee.activites.MainActivity.java-onClose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:18:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
-this.center=center;
+this.center=null;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=new ArrayList<T>(2);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5794/pattern-ver1-serial/app.src.main.java.io.github.louistsaitszho.erg2.gui.HistoryAdapter.java-startDateTimeToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=new ArrayList<T>(1000);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/1052/pattern-ver1-serial/src.main.java.net.dv8tion.jda.requests.WebSocketClientV2.java-close.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+synchronized(this){
 this.center=center;
+}
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T bindingModes){
+this.center=bindingModes;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T collectorManager){
+this.center=collectorManager;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T parentFileShare){
+this.center=parentFileShare;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T pIssued){
+this.center=pIssued;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T Pin){
+this.center=Pin;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
+synchronized(this){
 points=new ArrayList<T>();
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T graphdbInput){
+this.center=graphdbInput;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T thePrescribeMedicationCntl){
+this.center=thePrescribeMedicationCntl;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:19:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T pScore){
+this.center=pScore;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T pterm){
+this.center=pterm;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T boid){
+this.center=boid;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+center=center;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
+import javafx.collections.ObservableList;
+
+import javafx.collections.FXCollections;
+
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=FXCollections.observableList(new ArrayList<T>());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4599/pattern-ver1-serial/src.main.java.com.otakukingdom.audiobook.services.FileListService.java-FileListService.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:21:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+points.add(center);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4847/pattern-ver1-serial/capsule-generation.src.main.java.org.paninij.runtime.check.Panini.java-findUnsafe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
+import java.util.Collections;
+
 public Cluster(T center){
 this.center=center;
-points=new ArrayList<T>();
+points=Collections.synchronizedList(new ArrayList<T>());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/5047/pattern-ver1-serial/core.plugins.org.csstudio.autocomplete.src.org.csstudio.autocomplete.tooltips.TooltipDataHandler.java-TooltipDataHandler.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+int a=0;
 this.center=center;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+String OUTSTRING="";
 this.center=center;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+int points=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+int a=1;
 this.center=center;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+boolean points=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+boolean b=true;
 this.center=center;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+try{
 this.center=center;
+}finally{
 points=new ArrayList<T>();
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+assert (center!=null);
 this.center=center;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
-public Cluster(T center){
-this.center=center;
+public Cluster(T r){
+center=r;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
 this.center=center;
+assert (center!=null);
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
-this.center=center;
+try{
 points=new ArrayList<T>();
+}finally{
+this.center=center;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Cluster(T center){
 this.center=center;
 points=new ArrayList<T>();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:23:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+assert (center!=null):"Appointments day is not allowed to be null!";
 this.center=center;
 points=new ArrayList<T>();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:23:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[41,48]
------------Candidate---------------
 public Cluster(T center){
+long startTime=System.currentTimeMillis();
 this.center=center;
 points=new ArrayList<T>();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:23:09 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.clustering.Cluster.getCenter:[71]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 17:23:27 CDT - 2019.09.07 AD at 17:27:17 CDT , PNumber : 11279, CandNumber : 9 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
-return center;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
-return center;
+return this.center;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/1924/pattern-ver1-serial/src.main.java.org.spongepowered.api.util.command.ImmutableCommandMapping.java-getCallable.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
-return center;
+return this.getCenter();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
+this.getCenter();
 return center;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
-return center;
+return (T)(center);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
+int a=0;
 return center;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
+String OUTSTRING="";
 return center;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
+int a=1;
 return center;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/Cluster.java[66,72]
------------Candidate---------------
 public T getCenter(){
+boolean b=true;
 return center;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:27:45 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.KMeansPlusPlusClusterer:[40, 41, 42]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 17:28:04 CDT - 2019.09.07 AD at 17:31:22 CDT , PNumber : 11280, CandNumber : 30 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+this.random=null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+synchronized(this){
 this.random=random;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random bindingModes){
+this.random=bindingModes;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random collectorManager){
+this.random=collectorManager;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random parentFileShare){
+this.random=parentFileShare;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random pIssued){
+this.random=pIssued;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random Pin){
+this.random=Pin;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random graphdbInput){
+this.random=graphdbInput;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random thePrescribeMedicationCntl){
+this.random=thePrescribeMedicationCntl;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random pScore){
+this.random=pScore;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random pterm){
+this.random=pterm;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random boid){
+this.random=boid;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+random=random;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+int a=0;
 this.random=random;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+String OUTSTRING="";
 this.random=random;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+int a=1;
 this.random=random;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+boolean b=true;
 this.random=random;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+assert (random!=null);
 this.random=random;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
-public KMeansPlusPlusClusterer(Random random){
-this.random=random;
+public KMeansPlusPlusClusterer(Random r){
+random=r;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+assert (random!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public KMeansPlusPlusClusterer(Random random){
 this.random=random;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+assert (random!=null):"Appointments day is not allowed to be null!";
 this.random=random;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[37,42]
------------Candidate---------------
 public KMeansPlusPlusClusterer(Random random){
+long startTime=System.currentTimeMillis();
 this.random=random;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 17:35:06 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.cluster:[56, 57]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 17:35:25 CDT - 2019.09.07 AD at 18:16:52 CDT , PNumber : 11415, CandNumber : 226 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:16:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
-for(int count=0;count<max;count++){
+for(int count=0;k<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:16:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
-for(int count=0;count<max;count++){
+for(int count=0;maxIterations<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+ final int max=(k<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+ final int max=(maxIterations<=0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/1247/pattern-ver1-serial/src.connect4.HumanPlayer.java-drop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
-return clusters;
+return null;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/1194/pattern-ver1-serial/src.backend.rest.SaveUserCompetences.java-saveUserCompetences.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
-return clusters;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/1194/pattern-ver1-serial/src.backend.rest.SaveUserCompetences.java-saveUserCompetences.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>(k);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7124/pattern-ver1-serial/src.server.repository.SDMSIndex.java-getUnique.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>(maxIterations);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7124/pattern-ver1-serial/src.server.repository.SDMSIndex.java-getUnique.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
-clusters=newClusters;
+clusters=clusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
-newClusters.add(new Cluster<T>(newCenter));
+newClusters.add(k,new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2664/pattern-ver1-serial/NightgamesMod.nightgames.skills.Unstrip.java-resolve.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
-newClusters.add(new Cluster<T>(newCenter));
+newClusters.add(maxIterations,new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2664/pattern-ver1-serial/NightgamesMod.nightgames.skills.Unstrip.java-resolve.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>(clusters);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/5031/pattern-ver1-serial/demos.src.main.java.com.datatorrent.demos.adsdimension.GenericApplication.java-populateDAG.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
-for(int count=0;count<max;count++){
+for(int count=0;count<max;k++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
-for(int count=0;count<max;count++){
+for(int count=0;count<max;maxIterations++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
-if(!newCenter.equals(cluster.getCenter())){
+if(!clusters.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/2225/pattern-ver1-serial/src.main.java.com.openshift.internal.client.ApplicationResource.java-getGearGroup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
-if(!newCenter.equals(cluster.getCenter())){
+if(!points.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/2225/pattern-ver1-serial/src.main.java.com.openshift.internal.client.ApplicationResource.java-getGearGroup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
-return clusters;
+return newClusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/2147/pattern-ver1-serial/qclib.src.qclib.QubitRegister.java-getAmps.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
-newClusters.add(new Cluster<T>(newCenter));
+clusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3629/pattern-ver1-serial/Mage.Sets.src.mage.sets.theros.PolisCrusher.java-adjustTargets.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+assignPointsToClusters(clusters,points);
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+assignPointsToClusters(clusters,points);
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assignPointsToClusters(clusters,points);
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
- final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+ T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+ List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+ int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
-boolean clusteringChanged=false;
+ boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
-for(int count=0;count<max;count++){
+ final int max=(maxIterations<=0)?Integer.MAX_VALUE:maxIterations;
+for(int count=0;count<=max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+clusters.clear();
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+points.clear();
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+clusters.clear();
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+points.clear();
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+clusters.clear();
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+points.clear();
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+points.clear();
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+clusters.clear();
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+points.clear();
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+clusters.clear();
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>(k++);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2359/pattern-ver1-serial/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.ha.HAService.java-doWaitTransfer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+synchronized(this){
 assignPointsToClusters(clusters,points);
+}
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+points.clear();
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+clusters.clear();
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+points.clear();
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+clusters.clear();
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+points.clear();
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+points=new ArrayList<>();
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/486/pattern-ver1-serial/app.src.main.java.com.rubengees.vocables.pojo.Unit.java-readFromParcel.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+if(clusters!=null){
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
+}
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4703/pattern-ver1-serial/com.zuehlke.zfb.model.src.com.zuehlke.zfb.model.chart.ChartModel.java-changed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ @SuppressWarnings("UnusedAssignment") List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+ @SuppressWarnings("UnusedAssignment") List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
- final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+ @SuppressWarnings("UnusedAssignment") T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ @SuppressWarnings("UnusedAssignment") List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+ @SuppressWarnings("UnusedAssignment") int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
- final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+ @SuppressWarnings("UnusedAssignment") T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ @SuppressWarnings("UnusedAssignment") List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+ @SuppressWarnings("UnusedAssignment") int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+ @SuppressWarnings("UnusedAssignment") List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
-List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+ @SuppressWarnings("UnusedAssignment") List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
-boolean clusteringChanged=false;
+ @SuppressWarnings("UnusedAssignment") boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
- final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+ @SuppressWarnings("UnusedAssignment") T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+k=k;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+points=points;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+maxIterations=maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+clusters=clusters;
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+clusters.remove(null);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.isEmpty()){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+clusters.remove(0);
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+clusters.remove(0);
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+clusters.remove(0);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+points.remove(0);
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+points.remove(0);
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+int a=0;
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+String OUTSTRING="";
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(clusters.isEmpty()){
+return null;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(points.isEmpty()){
+return null;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(points.isEmpty()){
+return null;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+if(clusters.isEmpty()){
+return null;
+}
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(equals(points)){
+return null;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(equals(k)){
+return null;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(equals(points)){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(equals(clusters)){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
+}
+if(equals(points)){
+return null;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(equals(points)){
+return null;
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+if(equals(maxIterations)){
+return null;
+}
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+int indexSelection=0;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
-newClusters.add(new Cluster<T>(newCenter));
+newClusters.add(k+1,new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositoryCitation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+int a=1;
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+boolean b=true;
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points.isEmpty()){
+return clusters;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(clusters==null){
+continue;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+if(clusters==null){
+continue;
+}
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(points==null){
+continue;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
- final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+ final int max=maxIterations<0?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/676/pattern-ver1-serial/ProjektGrupp2.src.main.java.edu.gu.maze.model.HighScore.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(clusters==null){
+return null;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(points==null){
+return null;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+if(clusters==null){
+return null;
+}
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters==null){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(points==null){
+return null;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points==null){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(points==null){
+return null;
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(clusters==null){
+return null;
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if("&null".equals(clusters)){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if("&null".equals(points)){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+if("&null".equals(clusters)){
+return null;
+}
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+if("&null".equals(points)){
+return null;
+}
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if("&null".equals(k)){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if("&null".equals(maxIterations)){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if("&null".equals(max)){
+return null;
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+assignPointsToClusters(clusters,points);
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+assignPointsToClusters(clusters,points);
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+assignPointsToClusters(clusters,points);
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+assignPointsToClusters(clusters,points);
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+assignPointsToClusters(newClusters,points);
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+assignPointsToClusters(newClusters,points);
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+assignPointsToClusters(newClusters,points);
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+assignPointsToClusters(clusters,points);
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+assignPointsToClusters(clusters,points);
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assignPointsToClusters(clusters,points);
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+assignPointsToClusters(newClusters,points);
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+assignPointsToClusters(newClusters,points);
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
+assignPointsToClusters(clusters,points);
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
+assignPointsToClusters(clusters,points);
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
+assignPointsToClusters(newClusters,points);
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+clusteringChanged=true;
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+clusters=newClusters;
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+clusteringChanged=true;
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+clusters=newClusters;
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+clusteringChanged=true;
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+clusters=newClusters;
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+clusters=newClusters;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+clusteringChanged=true;
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+clusters=newClusters;
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+clusteringChanged=true;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
+assignPointsToClusters(clusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
+assignPointsToClusters(newClusters,points);
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(k<0){
+return null;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.equals("-1")){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
+assignPointsToClusters(clusters,points);
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+assignPointsToClusters(clusters,points);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
+assignPointsToClusters(newClusters,points);
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
-List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+boolean clusteringChanged=false;
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
-boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
+assignPointsToClusters(clusters,points);
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
+assignPointsToClusters(newClusters,points);
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
+}
+if(points==null){
+return null;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+assert (points!=null);
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assert (clusters!=null);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+assert (points!=null);
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+assert (clusters!=null);
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:23:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+assert (clusters!=null);
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assert (!clusters.isEmpty());
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assert (!points.isEmpty());
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assert (!clusters.isEmpty());
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assert (!points.isEmpty());
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points.equals(InputStream.class)){
+return clusters;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(points!=null){
+List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assignPointsToClusters(clusters,points);
+ final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+for(int count=0;count<max;count++){
+boolean clusteringChanged=false;
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+for(Cluster<T> cluster : clusters){
+ final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+if(!newCenter.equals(cluster.getCenter())){
+clusteringChanged=true;
+}
+newClusters.add(new Cluster<T>(newCenter));
+}
+if(!clusteringChanged){
+return clusters;
+}
+assignPointsToClusters(newClusters,points);
+clusters=newClusters;
+}
+return clusters;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+if(points!=null){
+boolean clusteringChanged=false;
+List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+for(Cluster<T> cluster : clusters){
+ final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+if(!newCenter.equals(cluster.getCenter())){
+clusteringChanged=true;
+}
+newClusters.add(new Cluster<T>(newCenter));
+}
+if(!clusteringChanged){
+return clusters;
+}
+assignPointsToClusters(newClusters,points);
+clusters=newClusters;
+}
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assert (clusters!=chooseInitialCenters(points,k,random));
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+assignPointsToClusters(newClusters,points);
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
-assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assert (clusters!=null);
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assert (points!=null);
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assert (points!=null);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.equals("655")){
+System.out.println();
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+assignPointsToClusters(newClusters,points);
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
-assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+newClusters.add(new Cluster<T>(newCenter));
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+newClusters.add(new Cluster<T>(newCenter));
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+if(clusters.isEmpty()){
+clusters=null;
+}
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.isEmpty()){
+clusters=null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:24:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+if(points.isEmpty()){
+points=null;
+}
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points.isEmpty()){
+points=null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
+newClusters.add(new Cluster<T>(newCenter));
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+clusters.remove(clusters.get(0));
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/5778/pattern-ver1-serial/src.LinkedList.java-main.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+assert (k>=0):"Receive a negative tratment";
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+assert (maxIterations>=0):"Receive a negative tratment";
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+assert (max>=0):"Receive a negative tratment";
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+assignPointsToClusters(clusters,points);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+assignPointsToClusters(clusters,points);
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+assignPointsToClusters(clusters,points);
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
+assignPointsToClusters(clusters,points);
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+assignPointsToClusters(clusters,points);
 }
+assignPointsToClusters(clusters,points);
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+assignPointsToClusters(clusters,points);
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+assignPointsToClusters(clusters,points);
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+clusteringChanged=true;
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
+clusteringChanged=true;
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
+clusteringChanged=true;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
+clusteringChanged=true;
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(points.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:25:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
+}
+if(points.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(points.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+assert (clusters!=null):"Appointments day is not allowed to be null!";
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+assert (clusters!=null):"Appointments day is not allowed to be null!";
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+assert (clusters!=null):"Appointments day is not allowed to be null!";
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+assert (points!=null):"Appointments day is not allowed to be null!";
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+assert (points!=null):"Appointments day is not allowed to be null!";
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+assert (k!=0):"Receive a size tratment";
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+assert (maxIterations!=0):"Receive a size tratment";
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+assert (max!=0):"Receive a size tratment";
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(points.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(points.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.Collections;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
+Collections.sort(clusters,Collections.reverseOrder());
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.Collections;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+Collections.sort(clusters,Collections.reverseOrder());
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(k>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.ArrayList;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters==null){
+clusters=new ArrayList<>();
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
+import java.util.ArrayList;
+
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(clusters==null){
+clusters=new ArrayList<>();
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+if(clusters!=null&&!clusters.isEmpty()){
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
+}
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7435/pattern-ver1-serial/mockserver-core.src.main.java.org.mockserver.model.NottableString.java-strings.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:26:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
-return clusters;
+List<Cluster<T>> t=clusters;
+clusters=null;
+return t;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
+List<Cluster<T>> t=clusters;
+clusters=null;
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
-return clusters;
+return t;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+List<Cluster<T>> t=clusters;
+clusters=null;
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
-return clusters;
+return t;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+List<Cluster<T>> t=clusters;
+clusters=null;
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
-return clusters;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters==null){
+throw new IllegalStateException("User isn't registered! "+points);
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters==null){
+throw new IllegalStateException("User isn't registered! "+k);
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean haveBreadCrumbs=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
+haveBreadCrumbs=true;
 newClusters.add(new Cluster<T>(newCenter));
 }
-if(!clusteringChanged){
+if(!clusteringChanged&&haveBreadCrumbs){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean haveBreadCrumbs=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+haveBreadCrumbs=true;
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
-if(!clusteringChanged){
+if(!clusteringChanged&&haveBreadCrumbs){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean haveBreadCrumbs=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+haveBreadCrumbs=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
-if(!clusteringChanged){
+if(!clusteringChanged&&haveBreadCrumbs){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
+if(newClusters==null||clusters==null){
+throw new NullPointerException();
+}
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
+if(newClusters==null||points==null){
+throw new NullPointerException();
+}
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(points==null||clusters==null){
+throw new NullPointerException();
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters==null||points==null){
+throw new NullPointerException();
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
+}
+if(points==null||newClusters==null){
+throw new NullPointerException();
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
+}
+if(newClusters==null||points==null){
+throw new NullPointerException();
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean succeeded=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
+succeeded=true;
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
+}
+if(!succeeded){
+return null;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean succeeded=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
+succeeded=true;
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
+}
+if(!succeeded){
+return null;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean succeeded=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
+succeeded=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
+}
+if(!succeeded){
+return null;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+if(k==3){
+System.out.println("debug");
+}
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
+if(k==3){
+System.out.println("debug");
+}
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:27:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
+if(maxIterations==3){
+System.out.println("debug");
+}
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
+if(maxIterations==3){
+System.out.println("debug");
+}
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(k==3){
+System.out.println("debug");
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(k==3){
+System.out.println("debug");
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+if(maxIterations==3){
+System.out.println("debug");
+}
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(maxIterations==3){
+System.out.println("debug");
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if(max==3){
+System.out.println("debug");
+}
+if(max==3){
+System.out.println("debug");
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean haveBreadCrumbs=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
-if(!newCenter.equals(cluster.getCenter())){
+if(!newCenter.equals(cluster.getCenter())&&haveBreadCrumbs){
 clusteringChanged=true;
 }
+haveBreadCrumbs=true;
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 5, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean haveBreadCrumbs=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
+haveBreadCrumbs=true;
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
-if(!newCenter.equals(cluster.getCenter())){
+if(!newCenter.equals(cluster.getCenter())&&haveBreadCrumbs){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 5, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
+boolean haveBreadCrumbs=false;
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
-if(!newCenter.equals(cluster.getCenter())){
+if(!newCenter.equals(cluster.getCenter())&&haveBreadCrumbs){
 clusteringChanged=true;
+haveBreadCrumbs=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 5, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
-assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
+long startTime=System.currentTimeMillis();
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java[44,78]
------------Candidate---------------
 public List<Cluster<T>> cluster(Collection<T> points,int k,int maxIterations){
 List<Cluster<T>> clusters=chooseInitialCenters(points,k,random);
+if(clusters.size()==0){
+return null;
+}
 assignPointsToClusters(clusters,points);
  final int max=(maxIterations<0)?Integer.MAX_VALUE:maxIterations;
+if((clusters.size()<=1)||(max==0)){
+return null;
+}
 for(int count=0;count<max;count++){
 boolean clusteringChanged=false;
 List<Cluster<T>> newClusters=new ArrayList<Cluster<T>>();
 for(Cluster<T> cluster : clusters){
  final T newCenter=cluster.getCenter().centroidOf(cluster.getPoints());
 if(!newCenter.equals(cluster.getCenter())){
 clusteringChanged=true;
 }
 newClusters.add(new Cluster<T>(newCenter));
 }
 if(!clusteringChanged){
 return clusters;
 }
 assignPointsToClusters(newClusters,points);
 clusters=newClusters;
 }
 return clusters;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4230/pattern-ver1-serial/src.main.java.net.sf.mzmine.modules.peaklistmethods.dataanalysis.heatmaps.HeatMapTask.java-groupingDataset.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 18:28:29 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters:[89, 90, 91]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 18:28:44 CDT - 2019.09.07 AD at 18:36:55 CDT , PNumber : 11283, CandNumber : 0 
Location : org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters:[107, 108, 111, 112, 114, 115, 139]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 18:37:11 CDT - 2019.09.07 AD at 19:23:50 CDT , PNumber : 11479, CandNumber : 0 
Location : org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster:[153, 154, 155, 156, 157, 161, 162]#0.7071067811865475
Compute Candidate : 2019.09.07 AD at 19:24:07 CDT - 2019.09.07 AD at 19:40:43 CDT , PNumber : 11434, CandNumber : 0 
Location : org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom:[57]#0.5773502691896258
Compute Candidate : 2019.09.07 AD at 19:41:00 CDT - 2019.09.07 AD at 19:50:54 CDT , PNumber : 11285, CandNumber : 23 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint valueAnimator){
+return MathUtils.distance(point,valueAnimator.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint edge){
+return MathUtils.distance(point,edge.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint methodOpeningBrace){
+return MathUtils.distance(point,methodOpeningBrace.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint mpR){
+return MathUtils.distance(point,mpR.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint methodAST){
+return MathUtils.distance(point,methodAST.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint managerFactory){
+return MathUtils.distance(point,managerFactory.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
-public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+public double distanceFrom(EuclideanIntegerPoint methodOpeningBraceToken){
+return MathUtils.distance(point,methodOpeningBraceToken.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+int a=0;
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+String OUTSTRING="";
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+if(equals(p)){
+return 0d;
+}
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+int a=1;
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+boolean b=true;
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+if(p==null){
+return 0d;
+}
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+if("index".equals(p)){
+return 0;
+}
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+assert (p!=null);
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+if(p!=null){
+return MathUtils.distance(point,p.getPoint());
+}
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+return (double)MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:51:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+return -MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
-return MathUtils.distance(point,p.getPoint());
+return (double)(MathUtils.distance(point,p.getPoint()));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+assert (p!=null):"Appointments day is not allowed to be null!";
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java[55,58]
------------Candidate---------------
 public double distanceFrom(EuclideanIntegerPoint p){
+if(p==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return MathUtils.distance(point,p.getPoint());
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 19:52:29 CDT
--------------- END -----------------
Location : org.apache.commons.math.util.MathUtils.distance:[1624, 1625, 1626, 1627, 1629]#0.5
Compute Candidate : 2019.09.07 AD at 19:52:46 CDT - 2019.09.07 AD at 20:10:31 CDT , PNumber : 11417, CandNumber : 175 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+continue;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:10:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+ int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:10:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:10:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+return 0d;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:10:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;sum<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+long sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final long dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<=p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.Collection;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,myUid;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+double sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3073/pattern-ver1-serial/src.mlsp.cs.cmu.edu.tmm.TMMAlphaPosterior.java-alphaSum.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final double dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3073/pattern-ver1-serial/src.mlsp.cs.cmu.edu.tmm.TMMAlphaPosterior.java-alphaSum.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i>p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,MAX_SERVICE_NODES;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+break;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+float sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final float dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;i--){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=p1[1]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=p1[i]-p2[1];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+Integer sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final Integer dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:12:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+return 0;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:13:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,localLevel;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;i++,new ArrayList<KeyBinding>()){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:13:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=sum*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:13:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;sum++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:15:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,_afterComposeMethodCache;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:15:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+i++;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.List;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,mActions;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:15:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p2.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/4812/pattern-ver1-serial/src.org.rascalmpl.library.experiments.Compiler.RVM.Interpreter.Thrown.java-printStackTrace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:15:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,mRelationId;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:15:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+ int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+sum++;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+sum++;
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+i++;
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+sum++;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
+sum++;
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+sum--;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+double sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final double dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/425/pattern-ver1-serial/app.src.main.java.com.pemws14.armyoffriends.GameMechanics.java-getPlayerLevelProgress.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+sum--;
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+i--;
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:18:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+sum--;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:18:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
+sum--;
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=p1[i]-sum;
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:19:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=p1[i]-i;
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:19:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Math.sqrt((int)(sum));
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:19:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
-int sum=0;
+float sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final float dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7403/pattern-ver1-serial/src.structures.CountryCompetition.java-searchUsableComp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:19:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,continentName,countryCode;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:19:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+while(true){
+
+}
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:21:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0,userEmail;i<p1.length;i++,i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+i++;
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;i++,Charset.forName("UTF-8")){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:22:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=1;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:22:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=-1;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+if(dp*dp!=0){
 sum+=dp*dp;
+}
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=0;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return 1+Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:23:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+p1[i]=sum;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+i=sum;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:25:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+p2[i]=sum;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+sum=sum;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+sum=sum;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:25:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return 2;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5386/pattern-ver1-serial/game.furguardians.org.pandcorps.furguardians.Level.java-getMinFlat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(i==4){
+continue;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+sum=1000;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=dp*dp*sum;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=dp*dp*i;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=dp*dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Math.sqrt(sum)+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+Arrays.sort(p1);
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+Arrays.sort(p2);
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+Arrays.sort(p1);
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+Arrays.sort(p2);
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return (double)Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=sum;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:27:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=i;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Integer.MAX_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+int a=0;
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+int a=0;
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=2;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return -Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+if(dp==0.0){
+continue;
+}
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4118/pattern-ver1-serial/src.behavior.irl.TabularIRL.java-getBehaviorLogProbabilityHelper.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+String OUTSTRING="";
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+String OUTSTRING="";
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;){
+i++;
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=0.0;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=1.0*dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/7751/pattern-ver1-serial/src.main.java.info.debatty.java.stringsimilarity.Cosine.java-norm.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;Math.abs(i++)){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Math.sqrt(Math.abs(sum));
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+int indexSelection=0;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return (double)(Math.sqrt(sum));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.Arrays;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=p1[i-1]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.Arrays;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=p1[i]-p2[i-1];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return 4;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/1673/pattern-ver1-serial/src.stratos.game.actors.Power.java-costFor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p1.equals("sounds")){
+continue;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p2.equals("sounds")){
+continue;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=sum+dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+int a=1;
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+int a=1;
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+String length="%#.&f";
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+boolean b=true;
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+boolean b=true;
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p1==null){
+continue;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p2==null){
+continue;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Math.sqrt(sum)+sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return 0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/2249/pattern-ver1-serial/app.src.main.java.rd.vehicle.MyGLSurfaceView.java-touchCenterY.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=10;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
- final int dp=p1[i]-p2[i];
+ final int dp=(p1[i])+p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if(p1==null){
+return 0d;
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p1==null){
+return 0d;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p2==null){
+return 0d;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if("index".equals(p1)){
+return 0;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if("index".equals(p2)){
+return 0;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if("index".equals(sum)){
+return 0;
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+if("index".equals(p1)){
+return 0;
+}
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+if("index".equals(p2)){
+return 0;
+}
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+if("index".equals(dp)){
+return 0;
+}
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+}
+if(sum<0){
+return 0d;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+assert (p1!=null);
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+assert (p2!=null);
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+assert (p1!=null);
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+assert (p2!=null);
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if(p1.equals(InputStream.class)){
+return sum;
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if(p2.equals(InputStream.class)){
+return sum;
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+if(p1!=null){
+int sum=0;
+for(int i=0;i<p1.length;i++){
+ final int dp=p1[i]-p2[i];
+sum+=dp*dp;
+}
+return Math.sqrt(sum);
+}
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p1!=null){
+ final int dp=p1[i]-p2[i];
+sum+=dp*dp;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p2!=null){
+ final int dp=p1[i]-p2[i];
+sum+=dp*dp;
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+if(sum==0){
+return 0d;
+}
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+}
+if(sum==0){
+return 0d;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:32:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=(double)dp*(double)dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+assert (sum!=0);
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+assert (dp!=p1[i]-p2[i]);
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+assert (p1!=null);
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+assert (p2!=null);
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+assert (p1!=null);
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+assert (p2!=null);
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
-for(int i=0;i<p1.length;i++){
+for(int i=0;i<p1.length;Math.max(i++,0)){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Math.sqrt(Math.max(sum,0));
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+int endIndex2=sum;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
-return Math.sqrt(sum);
+return Math.sqrt(endIndex2);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1730/pattern-ver1-serial/Nanogramme.src.models.Block.java-setGone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=(dp*dp+dp)%dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+assert (sum>=0):"Receive a negative tratment";
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+assert (dp>=0):"Receive a negative tratment";
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=-1;
+sum++;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
-sum+=dp*dp;
+sum+=-1;
 }
+sum++;
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+assert (p1!=null):"Appointments day is not allowed to be null!";
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+assert (p2!=null):"Appointments day is not allowed to be null!";
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+assert (p1!=null):"Appointments day is not allowed to be null!";
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
+assert (p2!=null):"Appointments day is not allowed to be null!";
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+assert (sum!=0):"Receive a size tratment";
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+assert (dp!=0):"Receive a size tratment";
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+}
+if(sum>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Solution---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+if(sum<0){
+sum=0;
+}
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+}
+if(sum<0){
+sum=0;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+}
+if(sum<=0){
+sum=1;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p1==null||p2==null){
+throw new NullPointerException();
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(p2==null||p1==null){
+throw new NullPointerException();
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if(p1==null||p2==null){
+throw new NullPointerException();
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if(p2==null||p1==null){
+throw new NullPointerException();
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
+if(sum==3){
+System.out.println("debug");
+}
+if(sum==3){
+System.out.println("debug");
+}
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(sum==3){
+System.out.println("debug");
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+if(sum==3){
+System.out.println("debug");
+}
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+if(i==3){
+System.out.println("debug");
+}
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+if(i==3){
+System.out.println("debug");
+}
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
+if(dp==3){
+System.out.println("debug");
+}
+if(dp==3){
+System.out.println("debug");
+}
 sum+=dp*dp;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
+long startTime=System.currentTimeMillis();
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+p1[28]=(byte)0x88;
+p1[29]=0x58;
+p1[30]=0x01;
+p1[31]=0x00;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_79_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[1616,1630]
------------Candidate---------------
 public static double distance(int[] p1,int[] p2){
 int sum=0;
 for(int i=0;i<p1.length;i++){
  final int dp=p1[i]-p2[i];
 sum+=dp*dp;
+p2[28]=(byte)0x88;
+p2[29]=0x58;
+p2[30]=0x01;
+p2[31]=0x00;
 }
 return Math.sqrt(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest::testPerformClusterAnalysisDegenerate]
---------START : 2019.09.07 AD at 17:14:14 CDT
---------TIME : 2019.09.07 AD at 20:35:33 CDT
--------------- END -----------------
Finish : math-79 > patch : 10 | Start : Sat Sep 07 17:14:14 CDT 2019 | End : 2019.09.07 AD at 20:35:33 CDT
