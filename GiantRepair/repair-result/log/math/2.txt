Repair : math_2
Current failed test : org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021 | 2019.09.04 AD at 09:20:46 CDT
Location : org.apache.commons.math3.random.BitsStreamGenerator.nextDouble:[90, 91, 92]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 09:22:45 CDT - 2019.09.04 AD at 09:29:49 CDT , PNumber : 11273, CandNumber : 49 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
- final int low=next(26);
+ int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
- final long high=((long)next(26))<<26;
+ long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:29:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
- final int low=next(26);
+ final long low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:29:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
- final int low=next(26);
+ final Integer low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
- final long high=((long)next(26))<<26;
+ final Long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/3545/pattern-ver1-serial/nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.StandardFlowFileQueue.java-summarize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
- final long high=((long)next(26))<<26;
- final int low=next(26);
+ long high=((long)next(26))<<26;
+ int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
+this.nextDouble();
  final long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
+int a=0;
  final long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
+String OUTSTRING="";
  final long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return high*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(equals(high)){
+return 0d;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(equals(low)){
+return 0d;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
+int a=1;
  final long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
+boolean b=true;
  final long high=((long)next(26))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
- final long high=((long)next(26))<<26;
+ final long high=((long)next(Math.abs(26)))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
- final int low=next(26);
+ final int low=next(Math.abs(26));
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
- final long high=((long)next(26))<<26;
+ final long high=((long)next(26&0xff))<<26;
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4742/pattern-ver1-serial/src.uk.ac.herts.SmartLab.XBee.Response.XBeeRx16Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
- final int low=next(26);
+ final int low=next(26&0xff);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4742/pattern-ver1-serial/src.uk.ac.herts.SmartLab.XBee.Response.XBeeRx16Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(high==((long)next(26))<<26){
+return low;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(low==next(26)){
+return high;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+if("index".equals(high)){
+return 0;
+}
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if("index".equals(low)){
+return 0;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(high<0){
+return 0d;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(low<0){
+return 0d;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:31:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+assert (high!=((long)next(26))<<26);
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+assert (low!=next(26));
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+if((Thread.currentThread().interrupted())){
+return 0d;
+}
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:31:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return this.nextDouble();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return 2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/2003/pattern-ver1-serial/src.main.java.jline.console.history.MemoryHistory.java-index.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return high;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return low;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return (high|low);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/6424/pattern-ver1-serial/mail.src.main.java.com.sun.mail.imap.ModifiedSinceTerm.java-hashCode.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+assert (high>=0):"Receive a negative tratment";
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+assert (low>=0):"Receive a negative tratment";
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return (double)((high|low)*2.220446E-16);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return (double)(high|low)*(double)2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+assert (high!=0):"Receive a size tratment";
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+assert (low!=0):"Receive a size tratment";
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:41:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return (high|low)*2.220446E-16+high;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
-return (high|low)*2.220446E-16;
+return (high|low)*2.220446E-16+low;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(high>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(low>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(low<0){
+return 0;
+}
+if(low>=high){
+return high-1;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+if(high<0){
+return 0;
+}
  final int low=next(26);
+if(high>=low){
+return low-1;
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
+if(high==3){
+System.out.println("debug");
+}
+if(high==3){
+System.out.println("debug");
+}
  final int low=next(26);
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java[88,93]
------------Candidate---------------
 public double nextDouble(){
  final long high=((long)next(26))<<26;
  final int low=next(26);
+if(low==3){
+System.out.println("debug");
+}
+if(low==3){
+System.out.println("debug");
+}
 return (high|low)*2.220446E-16;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 09:42:21 CDT
--------------- END -----------------
Location : org.apache.commons.math3.random.Well19937c.next:[86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 108, 109, 111]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 09:44:06 CDT - 2019.09.04 AD at 10:28:42 CDT , PNumber : 11248, CandNumber : 440 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:28:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:28:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
- final int vM3=v[i3[index]];
+ int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
- final int z3=z1^z2;
+ int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=0;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=0;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=0;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=0;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+z4=z4^((z4<<15)&0x9b868000);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=2;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=2;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=2;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=2;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=3;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=3;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=3;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ final int indexRm1=iRm1[0];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ final int indexRm2=iRm2[0];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[0])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[0]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=v[i1[0]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ final int vM2=v[i2[0]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
- final int vM3=v[i3[index]];
+ final int vM3=v[i3[0]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[0]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[0]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ final int v0=v[0];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ final Integer indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ final Integer indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ final Integer v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final Integer vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final Integer z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ final Integer vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
- final int vM3=v[i3[index]];
+ final Integer vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
- final int z3=z1^z2;
+ final Integer z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final Integer z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final Integer z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=900;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.BlueDragonspawnOverseerDevotionAura.java-BlueDragonspawnOverseerDevotionAura.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:30:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=900;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.BlueDragonspawnOverseerDevotionAura.java-BlueDragonspawnOverseerDevotionAura.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=900;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.BlueDragonspawnOverseerDevotionAura.java-BlueDragonspawnOverseerDevotionAura.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=900;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.BlueDragonspawnOverseerDevotionAura.java-BlueDragonspawnOverseerDevotionAura.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-2);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=indexRm1;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=indexRm1;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=indexRm2;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=indexRm2;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=v0;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=v0;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=vM1;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=vM1;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=bits;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=vM2;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=10;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=10;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=10;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=10;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ final int indexRm1=iRm1[2];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ final int indexRm2=iRm2[2];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[2])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=v[i1[2]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ final int vM2=v[i2[2]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[2]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ final int v0=v[2];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
- final int vM3=v[i3[index]];
+ final int vM3=v[i3[2]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1627/pattern-ver1-serial/src.org.GreenTeaScript.JVM.GtSubProc.java-createSubProc.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=100;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=100;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=100;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=100;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=indexRm2;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/2460/pattern-ver1-serial/modules.extension.xsd.xsd-wfs.src.main.java.org.geotools.wfs.PropertyValueCollection.java-PropertyValueCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=1;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=1;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=1;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+try{
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+z4=z4^((z4<<15)&0x9b868000);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[index])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:32:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[v0])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm2])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm1]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=700;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkPounce.java-SlarkPounce.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=700;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkPounce.java-SlarkPounce.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=700;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkPounce.java-SlarkPounce.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=700;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkPounce.java-SlarkPounce.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=z2;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=z0;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=z1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=z4;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=z3;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=v0;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=z4|((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=z4^((z4<<7)|0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=z4|((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=z4^((z4<<15)|0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])|(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000|v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff|v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=150;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.item.Gauntlets.java-Gauntlets.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=150;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.item.Gauntlets.java-Gauntlets.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=150;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.item.Gauntlets.java-Gauntlets.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=150;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.item.Gauntlets.java-Gauntlets.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=4;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=4;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=4;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=5;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=5;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=5;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2]&=5;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+ int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
- final int z3=z1^z2;
+ int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ int indexRm1=iRm1[index];
+ int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+z4++;
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+index++;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+z4--;
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=v[0];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+synchronized(this){
 index=indexRm1;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+synchronized(this){
 v[index]=z3;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+synchronized(this){
 v[indexRm1]=z4;
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ final int indexRm1=this.iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ final int indexRm2=this.iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ final int v0=this.v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=v[this.i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ final int vM2=v[this.i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
- final int vM3=v[i3[index]];
+ final int vM3=v[this.i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&this.v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&this.v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+this.v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+this.v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+synchronized(this){
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+synchronized(this){
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+synchronized(this){
 v[indexRm2]&=0x80000000;
+}
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+next(indexRm1);
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+next(indexRm2);
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+next(v0);
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+next(bits);
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+next(vM1);
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+next(vM2);
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+next(vM3);
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+next(z0);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+next(z1);
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+next(z2);
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+this.v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/6471/pattern-ver1-serial/Extracurricular_Projects.src.m_Star_Pathfinder.Grid.java-getSquare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=this.v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/6471/pattern-ver1-serial/Extracurricular_Projects.src.m_Star_Pathfinder.Grid.java-getSquare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+if(z3!=0){
 v[index]=z3;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+if(z4!=0){
 v[indexRm1]=z4;
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+if(indexRm1!=0){
 index=indexRm1;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+if(0x80000000!=0){
 v[indexRm2]&=0x80000000;
+}
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^v0<<25*100)^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^(v0<<25))^(vM1^vM1>>>27*100);
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=vM2>>>9*100^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(vM2>>>9)^(vM3^vM3>>>1*100);
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^(z1^z1<<9*100)^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^(z1^(z1<<9))^(z2^z2<<21*100)^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^z3>>>21*100);
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1-1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1-1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2-1]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2-1]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ @SuppressWarnings("UnusedAssignment") int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ @SuppressWarnings("UnusedAssignment") int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ @SuppressWarnings("UnusedAssignment") int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ @SuppressWarnings("UnusedAssignment") int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ @SuppressWarnings("UnusedAssignment") int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ @SuppressWarnings("UnusedAssignment") int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ @SuppressWarnings("UnusedAssignment") int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ @SuppressWarnings("UnusedAssignment") int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ @SuppressWarnings("UnusedAssignment") int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ @SuppressWarnings("UnusedAssignment") int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+ @SuppressWarnings("UnusedAssignment") int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+ @SuppressWarnings("UnusedAssignment") int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ @SuppressWarnings("UnusedAssignment") int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
- final int z3=z1^z2;
+ @SuppressWarnings("UnusedAssignment") int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm1=iRm1[index];
+ @SuppressWarnings("UnusedAssignment") int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
- final int z3=z1^z2;
+ @SuppressWarnings("UnusedAssignment") int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:37:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+iRm1[index]=indexRm1;
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+index=indexRm1;
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+iRm2[index]=indexRm1;
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+v[index]=indexRm1;
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+v[indexRm1]=indexRm1;
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+v[indexRm1]=1000;
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>2;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+int a=0;
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+String OUTSTRING="";
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+int iRm1=5;
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+int index=5;
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+int iRm2=5;
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(vM2>>>9)^(vM3^vM3);
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^v0)^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^(v0<<25))^(vM1^vM1);
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^(z1^z1)^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^z3);
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^(z1^(z1<<9))^(z2^z2)^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+int index=8;
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(equals(indexRm1)){
+return 0;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(equals(indexRm2)){
+return 0;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(equals(v0)){
+return 0;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(equals(vM1)){
+return 0;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
+if(equals(bits)){
+return 0;
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+if(equals(vM2)){
+return 0;
+}
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+int indexSelection=0;
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override protected int next(int bits){
- final int indexRm1=iRm1[index];
+ final int indexRm1=iRm1[index-1];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
- final int indexRm2=iRm2[index];
+ final int indexRm2=iRm2[index-1];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
- final int v0=v[index];
+ final int v0=v[index-1];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=v[i1[index-1]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
- final int vM1=v[i1[index]];
+ final int vM1=v[i1[index]-1];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
- final int vM2=v[i2[index]];
+ final int vM2=v[i2[index-1]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+int a=1;
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+boolean iRm1=true;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+boolean iRm2=true;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+boolean v=true;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+boolean b=true;
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1&0xff])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/7731/pattern-ver1-serial/src.jassemble.CPU.java-setMem.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1&0xff]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/7731/pattern-ver1-serial/src.jassemble.CPU.java-setMem.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2&0xff]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/7731/pattern-ver1-serial/src.jassemble.CPU.java-setMem.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2&0xff]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/7731/pattern-ver1-serial/src.jassemble.CPU.java-setMem.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+if(indexRm1==iRm1[index]){
+return z2;
+}
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+if(indexRm1==iRm1[index]){
+return z1;
+}
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(indexRm1==iRm1[index]){
+return z0;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+if(indexRm1==iRm1[index]){
+return vM1;
+}
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+if(indexRm1==iRm1[index]){
+return vM2;
+}
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(indexRm1==iRm1[index]){
+return vM3;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+if(indexRm1==iRm1[index]){
+return v0;
+}
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+if(indexRm1==iRm1[index]){
+return indexRm2;
+}
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+if(indexRm2==iRm2[index]){
+return indexRm1;
+}
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+if(indexRm1==iRm1[index]){
+return z4;
+}
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+if("index".equals(indexRm1)){
+return 0;
+}
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+if("index".equals(indexRm2)){
+return 0;
+}
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+if("index".equals(v0)){
+return 0;
+}
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+if("index".equals(bits)){
+return 0;
+}
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+if("index".equals(vM1)){
+return 0;
+}
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+if("index".equals(vM2)){
+return 0;
+}
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if("index".equals(vM3)){
+return 0;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if("index".equals(z0)){
+return 0;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+if("index".equals(z1)){
+return 0;
+}
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+if("index".equals(z2)){
+return 0;
+}
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(indexRm1<0){
+return 0;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(indexRm2<0){
+return 0;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(v0<0){
+return 0;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(vM1<0){
+return 0;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+if(z4==0){
+return 0;
+}
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
+if(z4==0){
+return 0;
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+if(index==0){
+return 0;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+if(v[index]==0){
+return 0;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+if(v[indexRm1]==0){
+return 0;
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+if(v[indexRm2]==0){
+return 0;
+}
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^((int)v0<<(int)25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:51:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^(v0<<25))^(vM1^((int)vM1>>>(int)27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=((int)vM2>>>(int)9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(vM2>>>9)^(vM3^((int)vM3>>>(int)1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+assert (indexRm1!=iRm1[index]);
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+assert (indexRm2!=iRm2[index]);
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+assert (v0!=v[index]);
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+assert (vM1!=v[i1[index]]);
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+assert (vM2!=v[i2[index]]);
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+assert (vM3!=v[i3[index]]);
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+if((Thread.currentThread().interrupted())){
+return 0;
+}
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+int index=this.index;
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/290/pattern-ver1-serial/nars_logic.src.main.java.nars.task.DefaultTask.java-hashCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return next(0);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=v0^(v0<<25)*100^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^(v0<<25))^vM1^(vM1>>>27)*100;
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(vM2>>>9)^vM3^(vM3>>>1)*100;
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=(indexRm1+indexRm1)%indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=(z4+z4)%z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=(z3+z3)%z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+index=indexRm1<0?0:indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+v[index]=z3<0?0:z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1]=z4<0?0:z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return (32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/2003/pattern-ver1-serial/src.main.java.jline.console.history.MemoryHistory.java-index.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return bits;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/6424/pattern-ver1-serial/mail.src.main.java.com.sun.mail.imap.ModifiedSinceTerm.java-hashCode.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+try{
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[index]=z3;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[index]=z3;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+try{
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[indexRm1]=z4;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[indexRm1]=z4;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return index;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return v[index];
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return v[indexRm1];
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return v[indexRm2];
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return 6;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/4358/pattern-ver1-serial/han.src.module.supplier.ui.SupplierCreatePanel.java-getColumnCount.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+if(z4<=0){
+return -1;
+}
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/2367/pattern-ver1-serial/ikrs.io.ReadLimitInputStream.java-read.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
+if(z4<=0){
+return -1;
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/2367/pattern-ver1-serial/ikrs.io.ReadLimitInputStream.java-read.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return indexRm1;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return indexRm2;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return v0;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return vM1;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return vM2;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return vM3;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z0;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z1;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z2;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z3;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=v0^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^(v0<<25))^vM1;
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(vM2>>>9)^vM3;
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
-int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+int z4=z0^z1^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+assert (indexRm1>=0):"Receive a negative tratment";
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+assert (bits>=0):"Receive a negative tratment";
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+assert (indexRm2>=0):"Receive a negative tratment";
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+assert (v0>=0):"Receive a negative tratment";
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+assert (vM1>=0):"Receive a negative tratment";
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+assert (vM2>=0):"Receive a negative tratment";
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+assert (vM3>=0):"Receive a negative tratment";
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+assert (z0>=0):"Receive a negative tratment";
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+assert (z1>=0):"Receive a negative tratment";
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+assert (z2>=0):"Receive a negative tratment";
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return (int)(z4>>>(32-bits));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=((int)v0^(int)(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(v0^(v0<<25))^((int)vM1^(int)(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(vM2>>>9)^((int)vM3^(int)(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return 100;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5846/pattern-ver1-serial/src.com.yy2039.answermachine.MessagesView.java-getKeybackIsCancel.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+assert (indexRm1!=0):"Receive a size tratment";
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
+assert (bits!=0):"Receive a size tratment";
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+assert (indexRm2!=0):"Receive a size tratment";
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+assert (v0!=0):"Receive a size tratment";
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+assert (vM1!=0):"Receive a size tratment";
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+assert (vM2!=0):"Receive a size tratment";
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+assert (vM3!=0):"Receive a size tratment";
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+assert (z0!=0):"Receive a size tratment";
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+assert (z1!=0):"Receive a size tratment";
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+assert (z2!=0):"Receive a size tratment";
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+indexRm1;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:55:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+indexRm2;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+v0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+vM1;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+bits;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+vM2;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+vM3;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+z0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+z1;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return z4>>>(32-bits)+z2;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
-return z4>>>(32-bits);
+return 12;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/680/pattern-ver1-serial/activemq-kahadb-store.src.main.java.org.apache.activemq.store.kahadb.MessageDatabase.java-getFixedSize.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(indexRm1>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(indexRm2>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(v0>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(vM1>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+if(vM2>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+if(z4<0){
+z4=0;
+}
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
+if(z4<0){
+z4=0;
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+if(index<0){
+index=0;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+if(v[index]<0){
+v[index]=0;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+if(v[indexRm1]<0){
+v[indexRm1]=0;
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+if(v[indexRm2]<0){
+v[indexRm2]=0;
+}
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+if(index!=indexRm1){
 v[index]=z3;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+if(z4>indexRm1){
+z4=indexRm1;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+if(index!=indexRm1){
 v[indexRm1]=z4;
+}
 v[indexRm2]&=0x80000000;
-index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+if(index!=indexRm1){
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1-1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
+v[indexRm1-1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2-1]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
+v[indexRm2-1]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
+if(z4<=0){
+z4=z4;
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1816/pattern-ver1-serial/dkpro-tc-ml.src.main.java.org.dkpro.tc.ml.FoldClassificationUnitCasMultiplier.java-process.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 10:57:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=0;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=0;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:17:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=2;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=2;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=3;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=3;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=z4;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+if(v[index]!=z3){
 index=indexRm1;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
+if(v[index]!=z3){
 v[indexRm1]=z4;
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
 v[indexRm1]=z4;
+if(v[index]!=z3){
 v[indexRm2]&=0x80000000;
+}
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=900;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.BlueDragonspawnOverseerDevotionAura.java-BlueDragonspawnOverseerDevotionAura.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=900;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.BlueDragonspawnOverseerDevotionAura.java-BlueDragonspawnOverseerDevotionAura.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=10;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=10;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:58:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=z4;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6985/pattern-ver1-serial/src.org.broad.igv.track.DataTrack.java-getInViewScores.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=100;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=100;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=1;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 11:59:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=1;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=700;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkPounce.java-SlarkPounce.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=700;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkPounce.java-SlarkPounce.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=z4+z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=z4+z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=150;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.item.Gauntlets.java-Gauntlets.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=150;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.item.Gauntlets.java-Gauntlets.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=4;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=4;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:19:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+z4=5;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:19:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=5;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
- final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+ final int z0=(int)(0x80000000&v[indexRm1])^(int)(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
- final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+ final int z2=(int)(vM2>>>9)^(int)(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+this.index=indexRm1;
+z4=0;
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
+this.index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
+z4=0;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+if(bits<0){
+return 0;
+}
  final int indexRm1=iRm1[index];
+if(bits>=indexRm1){
+return indexRm1-1;
+}
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+if(indexRm1<0){
+return 0;
+}
+if(indexRm1>=bits){
+return bits-1;
+}
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+if(indexRm2<0){
+return 0;
+}
+if(indexRm2>=indexRm1){
+return indexRm1-1;
+}
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:50:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+if(v0<0){
+return 0;
+}
+if(v0>=indexRm1){
+return indexRm1-1;
+}
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+if(vM1<0){
+return 0;
+}
+if(vM1>=indexRm1){
+return indexRm1-1;
+}
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 12:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+if(vM2<0){
+return 0;
+}
+if(vM2>=indexRm1){
+return indexRm1-1;
+}
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:00:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(vM3<0){
+return 0;
+}
+if(vM3>=indexRm1){
+return indexRm1-1;
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(z0<0){
+return 0;
+}
+if(z0>=indexRm1){
+return indexRm1-1;
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:10:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+if(z1<0){
+return 0;
+}
+if(z1>=indexRm1){
+return indexRm1-1;
+}
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+if(z2<0){
+return 0;
+}
+if(z2>=indexRm1){
+return indexRm1-1;
+}
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
+if(indexRm1==3){
+System.out.println("debug");
+}
+if(indexRm1==3){
+System.out.println("debug");
+}
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+if(bits==3){
+System.out.println("debug");
+}
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+if(bits==3){
+System.out.println("debug");
+}
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
+if(indexRm2==3){
+System.out.println("debug");
+}
+if(indexRm2==3){
+System.out.println("debug");
+}
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+if(v0==3){
+System.out.println("debug");
+}
+if(v0==3){
+System.out.println("debug");
+}
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
+if(vM1==3){
+System.out.println("debug");
+}
+if(vM1==3){
+System.out.println("debug");
+}
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
+if(vM2==3){
+System.out.println("debug");
+}
+if(vM2==3){
+System.out.println("debug");
+}
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
+if(vM3==3){
+System.out.println("debug");
+}
+if(vM3==3){
+System.out.println("debug");
+}
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
+if(z0==3){
+System.out.println("debug");
+}
+if(z0==3){
+System.out.println("debug");
+}
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+if(z1==3){
+System.out.println("debug");
+}
+if(z1==3){
+System.out.println("debug");
+}
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
+if(z2==3){
+System.out.println("debug");
+}
+if(z2==3){
+System.out.println("debug");
+}
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+z4=z4^((z4<<7)&0xe46e1700);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 1, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+try{
 v[index]=z3;
+}finally{
+z4=z4^((z4<<7)&0xe46e1700);
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 1, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+try{
 v[index]=z3;
+}finally{
+z4=z4^((z4<<15)&0x9b868000);
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 1, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+try{
 v[indexRm1]=z4;
+}finally{
+z4=z4^((z4<<7)&0xe46e1700);
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 1, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+try{
 v[indexRm1]=z4;
+}finally{
+z4=z4^((z4<<15)&0x9b868000);
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 1, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
- final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
+ final int z1=(int)(v0^(v0<<25))^(int)(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
+for(int i=0;i<24;i++){
 z4=z4^((z4<<7)&0xe46e1700);
+}
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:21:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
+for(int i=0;i<24;i++){
 z4=z4^((z4<<15)&0x9b868000);
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+for(int i=0;i<24;i++){
 v[index]=z3;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+for(int i=0;i<24;i++){
 v[indexRm1]=z4;
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+for(int i=0;i<24;i++){
 v[indexRm2]&=0x80000000;
+}
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+for(int i=0;i<24;i++){
 index=indexRm1;
+}
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
+long startTime=System.currentTimeMillis();
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
 z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+index=indexRm1;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 1, INS : 0, DEL : 12
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+try{
 v[index]=z3;
+}finally{
+index=indexRm1;
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
-index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 1, INS : 0, DEL : 12
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[index]=z3;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 1, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
-v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[indexRm1]=z4;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 1, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
-v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+try{
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
+}finally{
+v[indexRm2]&=0x80000000;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 1, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
-v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+try{
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+}finally{
+v[index]=z3;
+}
 z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 1, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
+try{
 v[index]=z3;
+}finally{
+z4=z4^((z4<<15)&0x9b868000);
+}
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 1, INS : 0, DEL : 18
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
+try{
 v[indexRm1]=z4;
+}finally{
+z4=z4^((z4<<15)&0x9b868000);
+}
 v[indexRm2]&=0x80000000;
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
-z4=z4^((z4<<15)&0x9b868000);
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 1, INS : 0, DEL : 18
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
+try{
 v[indexRm2]&=0x80000000;
-index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+}finally{
 z4=z4^((z4<<15)&0x9b868000);
+}
+index=indexRm1;
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 1, INS : 0, DEL : 18
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/random/Well19937c.java[82,113]
------------Candidate---------------
 @Override protected int next(int bits){
  final int indexRm1=iRm1[index];
  final int indexRm2=iRm2[index];
  final int v0=v[index];
  final int vM1=v[i1[index]];
  final int vM2=v[i2[index]];
  final int vM3=v[i3[index]];
  final int z0=(0x80000000&v[indexRm1])^(0x7fffffff&v[indexRm2]);
  final int z1=(v0^(v0<<25))^(vM1^(vM1>>>27));
  final int z2=(vM2>>>9)^(vM3^(vM3>>>1));
  final int z3=z1^z2;
 int z4=z0^(z1^(z1<<9))^(z2^(z2<<21))^(z3^(z3>>>21));
 v[index]=z3;
 v[indexRm1]=z4;
 v[indexRm2]&=0x80000000;
+try{
 index=indexRm1;
-z4=z4^((z4<<7)&0xe46e1700);
+}finally{
 z4=z4^((z4<<15)&0x9b868000);
+}
 return z4>>>(32-bits);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 1, INS : 0, DEL : 18
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:22:50 CDT
--------------- END -----------------
Location : org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample:[193]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 13:24:38 CDT - 2019.09.04 AD at 13:28:34 CDT , PNumber : 11280, CandNumber : 21 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(this.random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+this.sample();
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return this.sample();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:28:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random.nextDouble())&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return (int)inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random.nextDouble()-1);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4594/pattern-ver1-serial/EzSignin.app.src.main.java.signin.ez.ezsignin.MainActivity.java-populateFieldsWithRecord.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+int a=0;
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return -inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:32:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+String OUTSTRING="";
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:32:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random.nextDouble()*1000);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:32:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return (int)(inverseCumulativeProbability(random.nextDouble()));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random.nextDouble()+1);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/1559/pattern-ver1-serial/CrownAndAnchorGame.src.src.DiceValue.java-getRandom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+int a=1;
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+boolean b=true;
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+if(random==null){
+return 0;
+}
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random.nextDouble()*-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random==null?null:random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
-return inverseCumulativeProbability(random.nextDouble());
+return inverseCumulativeProbability(random!=null?random.nextDouble():null);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[185,194]
------------Candidate---------------
 public int sample(){
+if(random==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return inverseCumulativeProbability(random.nextDouble());
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 13:35:31 CDT
--------------- END -----------------
Location : org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability:[130, 131, 132, 135, 136, 137, 138, 125, 126, 127, 129, 142, 105, 106, 109, 114, 118, 119, 101]#0.5773502691896258
Compute Candidate : 2019.09.04 AD at 13:37:30 CDT - 2019.09.04 AD at 14:20:54 CDT , PNumber : 9087, CandNumber : 531 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+ int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
-int upper=getSupportUpperBound();
+ int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)&&Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)&&Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)&&Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>1){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>1){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==0){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>=lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>=1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+return 0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+return 0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+return 0;
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+return 0;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(k<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(upper<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(lower<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(p<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=0;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<=upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<=0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+tmp=mu+k*sigma;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+tmp=mu+k*sigma;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+k=1.0/k;
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)&&sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V7/7763/pattern-ver1-serial/app.src.main.java.cheaphone.gui.Offerta.java-setOffert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=(1.0)/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1686/pattern-ver1-serial/app.src.main.java.com.yatrashare.fragments.PublishRideFragment.java-getPrice.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp>upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p>0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=k-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=p-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=sigma-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=lower-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=upper-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=2;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower<=Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma<=0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p<=0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p<=1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=3;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu-k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(p==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp<lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p<1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower>=Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma>=0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p>=0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p>=1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp!=lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p!=1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower!=Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma!=0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p!=0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p!=1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+Integer lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
-int upper=getSupportUpperBound();
+Integer upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
-if(chebyshevApplies){
+if(true){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
+return 0;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-p)/2);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(tmp))-2;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-2)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=10;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower>Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma>0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p>0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p>1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-p)/mu);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-p)/lower);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-p)/upper);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-p)/sigma);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=100;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>3){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>3){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+return lower;
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/6317/pattern-ver1-serial/yamj3-filescanner.src.main.java.org.yamj.filescanner.model.Statistics.java-getTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V26/1681/pattern-ver1-serial/src.edu.umn.cs.melt.copper.compiletime.srcbuilders.single.ParserFragmentEngineBuilder.java-writeRunProductionSemanticAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=0.0;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=mu-upper*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=mu-lower*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||upper==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(upper==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||lower==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=-1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+ int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
-int upper=getSupportUpperBound();
+ int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ double k=FastMath.sqrt((1.0-p)/p);
+ double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+ int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+ int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
-int upper=getSupportUpperBound();
+ int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.Iterator;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==-1){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.Iterator;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==-1);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.Iterator;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==-1){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.Iterator;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==-1){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+k++;
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+tmp++;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+tmp++;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+k++;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+tmp++;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+tmp++;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
-if(chebyshevApplies){
+if(!chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+k++;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+k++;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+k--;
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+tmp--;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+tmp--;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+k--;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+tmp--;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+tmp--;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<=0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<=upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+k--;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+k--;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+lower++;
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/5574/pattern-ver1-serial/no.ntnu.item.semesterassignment.src.no.ntnu.item.semesterassignment.taxidispatcher.TaxiDispatcher.java-getRequestQueuePosition.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+return 0;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+return 0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+return 0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+return 0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+return 0;
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+return 0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+return 0;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+return 0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0&&p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)&&Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/3665/pattern-ver1-serial/org.bridgedb.uri.ws.server.src.org.bridgedb.ws.uri.WSUriInterfaceService.java-map.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)&&Double.isNaN(mu)||Double.isInfinite(sigma)&&Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/3665/pattern-ver1-serial/org.bridgedb.uri.ws.server.src.org.bridgedb.ws.uri.WSUriInterfaceService.java-map.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)&&Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)&&sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/3665/pattern-ver1-serial/org.bridgedb.uri.ws.server.src.org.bridgedb.ws.uri.WSUriInterfaceService.java-map.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower!=0){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma!=0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p!=0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p!=0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+synchronized(this){
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+synchronized(this){
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(k);
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(k);
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(p);
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(p);
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(tmp);
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(tmp);
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+inverseCumulativeProbability(sigma);
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil((int)(tmp)))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite((int)(mu))||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN((int)(mu))||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite((int)(sigma))||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN((int)(sigma))||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ final double sigma=FastMath.sqrt((int)(getNumericalVariance()));
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)&&Double.isInfinite(sigma)&&Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/4407/pattern-ver1-serial/app.src.main.java.com.coderockets.referandumproject.util.adapter.MyFavoritesAdapter.java-bind.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)&&Double.isNaN(mu)&&Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/4407/pattern-ver1-serial/app.src.main.java.com.coderockets.referandumproject.util.adapter.MyFavoritesAdapter.java-bind.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)&&Double.isNaN(sigma)&&sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/4407/pattern-ver1-serial/app.src.main.java.com.coderockets.referandumproject.util.adapter.MyFavoritesAdapter.java-bind.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>=1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>=lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6622/pattern-ver1-serial/src.cpsc599.assets.Level.java-collide.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
-return upper;
+return lower;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
+synchronized(this){
 lower-=1;
+}
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((1.0-p)/(int)p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6656/pattern-ver1-serial/src.game.Game.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/(int)k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6656/pattern-ver1-serial/src.game.Game.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(upper<tmp){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower<0){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma<0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p<0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p<0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+while(true){
+
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
+while(true){
+
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+while(true){
+
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
+}
+while(true){
+
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+while(true){
+
+}
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=-1;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
+synchronized(this){
 return lower;
+}
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
+synchronized(this){
 return upper;
+}
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=0;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+if(((int)Math.ceil(tmp))-1!=0){
 lower=((int)Math.ceil(tmp))-1;
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+if(1.0/k!=0){
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+if(((int)Math.ceil(tmp))-1!=0){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+if(mu+k*sigma!=0){
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt(1.0-p*100/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt(((1.0-p))/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1686/pattern-ver1-serial/app.src.main.java.com.yatrashare.fragments.PublishRideFragment.java-getPrice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+ @SuppressWarnings("UnusedAssignment") int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ @SuppressWarnings("UnusedAssignment") double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
-int upper=getSupportUpperBound();
+ @SuppressWarnings("UnusedAssignment") int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ @SuppressWarnings("UnusedAssignment") double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ @SuppressWarnings("UnusedAssignment") double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ @SuppressWarnings("UnusedAssignment") boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+ @SuppressWarnings("UnusedAssignment") double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ @SuppressWarnings("UnusedAssignment") double k=FastMath.sqrt((1.0-p)/p);
+ @SuppressWarnings("UnusedAssignment") double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
-int lower=getSupportLowerBound();
+ @SuppressWarnings("UnusedAssignment") int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ @SuppressWarnings("UnusedAssignment") double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
-int upper=getSupportUpperBound();
+ @SuppressWarnings("UnusedAssignment") int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
- final double mu=getNumericalMean();
+ @SuppressWarnings("UnusedAssignment") double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+ @SuppressWarnings("UnusedAssignment") double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=2;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+tmp=k;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=3;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+1+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
+p=p;
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower+p==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+if(tmp!=mu+k*sigma){
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+k=1000;
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(true){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(true){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(true){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(true){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(true){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
-if(chebyshevApplies){
+if(chebyshevApplies&&chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=mu-2;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*p;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*tmp;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*mu;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*sigma;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||!Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||!Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||!Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=tmp;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=p;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=sigma;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=0xEfffffff&(1);
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=10;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower/2){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>1.0/2){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ final double sigma=FastMath.sqrt(getNumericalVariance()-1);
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4594/pattern-ver1-serial/EzSignin.app.src.main.java.signin.ez.ezsignin.MainActivity.java-populateFieldsWithRecord.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+int a=0;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+int a=0;
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
+int a=0;
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
+int a=0;
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+int a=0;
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
+int a=0;
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
+int a=0;
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
+int a=0;
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
+int a=0;
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=mu-k;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt(1.0-p*5/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt(1.0/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2827/pattern-ver1-serial/common.math.CustomMath.java-nsqrt.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+String OUTSTRING="";
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+String OUTSTRING="";
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+String OUTSTRING="";
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
+String OUTSTRING="";
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
+String OUTSTRING="";
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
+String OUTSTRING="";
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
+String OUTSTRING="";
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
+String OUTSTRING="";
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
+String OUTSTRING="";
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=100;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ final double sigma=FastMath.sqrt(getNumericalVariance()*1000);
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(!Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3067/pattern-ver1-serial/core.src.com.ashenrider.game.Player.java-killPlayer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+int FastMath=5;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+int Math=5;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=0.0;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(Double.isNaN(lower)){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(Double.isNaN(tmp)){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(Double.isNaN(tmp)){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(Double.isNaN(p)){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(Double.isNaN(p)){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+(int)(k*sigma);
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=mu-1.0*k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/7751/pattern-ver1-serial/src.main.java.info.debatty.java.stringsimilarity.Cosine.java-norm.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=1.0*mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/7751/pattern-ver1-serial/src.main.java.info.debatty.java.stringsimilarity.Cosine.java-norm.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=1.0*mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/7751/pattern-ver1-serial/src.main.java.info.debatty.java.stringsimilarity.Cosine.java-norm.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+-1;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(Math.abs(tmp)))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(Math.abs(mu))||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(Math.abs(mu))||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(Math.abs(sigma))||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(Math.abs(sigma))||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ final double sigma=FastMath.sqrt(Math.abs(getNumericalVariance()));
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.floor(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+if(equals(tmp)){
+return 0;
+}
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+if(equals(lower)){
+return 0;
+}
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
+if(equals(p)){
+return 0;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+if(equals(lower)){
+return 0;
+}
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(equals(upper)){
+return 0;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
+if(equals(mu)){
+return 0;
+}
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
+if(equals(sigma)){
+return 0;
+}
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+if(equals(upper)){
+return 0;
+}
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+int indexSelection=0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+int indexSelection=0;
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+int indexSelection=0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
+int indexSelection=0;
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+int indexSelection=0;
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+int indexSelection=0;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+3;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return inverseCumulativeProbability(0);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
+synchronized(this){
 throw new OutOfRangeException(p,0,1);
+}
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if("index".equals(k)){
+return 0;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+if("index".equals(tmp)){
+return 0;
+}
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+if("index".equals(tmp)){
+return 0;
+}
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+if("index".equals(p)){
+return 0;
+}
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
+if("index".equals(p)){
+return 0;
+}
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
+if("index".equals(p)){
+return 0;
+}
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
+if("index".equals(p)){
+return 0;
+}
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+if("index".equals(sigma)){
+return 0;
+}
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=(int)Math.ceil(tmp)*100-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return 1+solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
+lower-=1;
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return solveInverseCumulativeProbability(p,lower,upper)&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+lower-=1;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+lower-=1;
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+if(p<0){
+return 0;
+}
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+if(p<0){
+return 0;
+}
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return (int)solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower||tmp==Long.MIN_VALUE){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper||tmp==Long.MIN_VALUE){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE||lower==Long.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0||p==Long.MIN_VALUE){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0||p==Long.MIN_VALUE){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return Integer.MAX_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
 }
+lower-=1;
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=(int)Math.ceil(tmp)*5-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
- final double sigma=FastMath.sqrt(getNumericalVariance());
+ final double sigma=FastMath.sqrt(getNumericalVariance()*-1);
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return -solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return lower;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return upper;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.max(Math.ceil(tmp),1))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.max(tmp,1))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+if(lower==0){
+return 0;
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+if(upper==0){
+return 0;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+if(k==0){
+return 0;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
+if(upper==0){
+return 0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp==0){
+return 0;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
+if(upper==0){
+return 0;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+}
+if(lower==0){
+return 0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
+if(lower==0){
+return 0;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return (int)(solveInverseCumulativeProbability(p,lower,upper));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt(((int)1.0-(int)p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=mu-(int)k*(int)sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=(int)1.0/(int)k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+(int)k*(int)sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+assert (k!=FastMath.sqrt((1.0-p)/p));
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+assert (tmp!=mu-k*sigma);
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
+assert (mu!=getNumericalMean());
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
+assert (sigma!=FastMath.sqrt(getNumericalVariance()));
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower||"查看红包".equals(tmp)){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0||"查看红包".equals(p)){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0||"查看红包".equals(p)){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper||"查看红包".equals(tmp)){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE||"查看红包".equals(lower)){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower||tmp==3){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE||lower==3){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper||tmp==3){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0||p==3){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0||p==3){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=1;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=-1;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
+synchronized(this){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
+}
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=0;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=2;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=3;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp<0||tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<0||tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower<0||lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p<0||p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p<0||p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=(1.0/k+k)%k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+k*sigma*k;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+k*sigma*tmp;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=mu+k*sigma*p;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
-return lower;
-}
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(p==0.0){
+return lower;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
-return upper;
-}
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(p==1.0){
+return upper;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=k;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=tmp;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=p;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=10;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower||tmp==0){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper||tmp==0){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0||p==0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0||p==0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE||lower==0){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower||tmp>9){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper||tmp>9){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE||lower>9){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0||p>9){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0||p>9){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=100;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((int)((1.0-p)/p));
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=0.0;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower&&tmp<4000000){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper&&tmp<4000000){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE&&lower<4000000){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0&&p<4000000){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0&&p<4000000){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
-return upper;
+return solveInverseCumulativeProbability(p,lower,upper);
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
-return solveInverseCumulativeProbability(p,lower,upper);
+return upper;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.LinkedList;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
+Double pcb=new Double(mu);
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(pcb.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.LinkedList;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
+Double pcb=new Double(mu);
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||pcb.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.LinkedList;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+Double pcb=new Double(sigma);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||pcb.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.util.LinkedList;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+Double pcb=new Double(sigma);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||pcb.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+if(k<=0){
+return -1;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/2367/pattern-ver1-serial/ikrs.io.ReadLimitInputStream.java-read.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp<=0){
+return -1;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/2367/pattern-ver1-serial/ikrs.io.ReadLimitInputStream.java-read.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower&&tmp!=9999){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper&&tmp!=9999){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(lower==Integer.MIN_VALUE&&lower!=9999){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(p==0.0&&p!=9999){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(p==1.0&&p!=9999){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(lower>0&&tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(upper>0&&tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
-if(p==0.0){
+if(0.0>0&&p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
-if(lower==Integer.MIN_VALUE){
+if(Integer.MIN_VALUE>0&&lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
-if(p==1.0){
+if(1.0>0&&p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt(Math.abs((1.0-p)/p));
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+assert (k>=0):"Receive a negative tratment";
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+assert (tmp>=0):"Receive a negative tratment";
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+assert (tmp>=0):"Receive a negative tratment";
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
+assert (p>=0):"Receive a negative tratment";
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+assert (p>=0):"Receive a negative tratment";
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
+assert (p>=0):"Receive a negative tratment";
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
+assert (p>=0):"Receive a negative tratment";
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
+assert (lower>=0):"Receive a negative tratment";
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
+double k=FastMath.sqrt((int)(1.0-p)/(int)p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
+double tmp=(int)mu-(int)k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
+tmp=(int)mu+(int)k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=2;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=3;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+k=1.0/k;
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+if(lower<0){
+lower=0;
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+if(upper<0){
+upper=0;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+if(k<0){
+k=0;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp<0){
+tmp=0;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
+if(upper<0){
+upper=0;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
+if(upper<0){
+upper=0;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+}
+if(lower<0){
+lower=0;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
+if(lower<0){
+lower=0;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
-}
 k=1.0/k;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+k=1.0/k;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+k=1.0/k;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+k=1.0/k;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+k=1.0/k;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+boolean haveBreadCrumbs=false;
+if(tmp>lower&&haveBreadCrumbs){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+boolean haveBreadCrumbs=false;
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower&&haveBreadCrumbs){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=10;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(tmp));
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=100;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
-lower-=1;
+lower-=1*2;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*2;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>1.0-1){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower-1){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5164/pattern-ver1-serial/roguelikeengine-libgdx.src.com.game.libgdx.roguelikeengine.Bullet.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
+if(checkedCumulativeProbability(lower)>=p){
 return lower;
+}
 }
 if(lower==Integer.MIN_VALUE){
-if(checkedCumulativeProbability(lower)>=p){
 return lower;
-}
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=(int)((int)Math.ceil(tmp))-(int)1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>1.0||"查看红包".equals(p<0.0)){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0||p>1.0||p=='%'){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0L||(p<0.0||p>1.0)){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(true){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if(p<0.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+synchronized(this){
 lower=((int)Math.ceil(tmp))-1;
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+synchronized(this){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+tmp=mu+k*sigma;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+tmp=mu+k*sigma;
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
-tmp=mu+k*sigma;
 if(tmp<upper){
+tmp=mu+k*sigma;
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+if(k!=1.0/k){
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+tmp=mu+k*sigma;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
-tmp=mu+k*sigma;
+k=1.0/k*2;
+tmp=mu+k*sigma*2;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+k=FastMath.sqrt((1.0-p)/p);
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+k=1.0/k;
+if(k<0){
 k=1.0/k;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+k=FastMath.sqrt((1.0-p)/p);
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+tmp=mu+k*sigma;
+if(tmp<0){
 tmp=mu+k*sigma;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+upper=((int)Math.ceil(tmp))-1;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+lower=((int)Math.ceil(tmp))-1;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+upper=((int)Math.ceil(tmp))-1;
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+lower=((int)Math.ceil(tmp))-1;
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+lower=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+lower=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
+upper=((int)Math.ceil(tmp))-1;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
+lower=((int)Math.ceil(tmp))-1;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
 }
+upper=((int)Math.ceil(tmp))-1;
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+if(tmp>lower){
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+lower=((int)Math.ceil(tmp))-1;
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+upper=((int)Math.ceil(tmp))-1;
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+upper=((int)Math.ceil(tmp))-1;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+upper=((int)Math.ceil(tmp))-1;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+boolean haveBreadCrumbs=false;
+if(tmp>lower&&haveBreadCrumbs){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+haveBreadCrumbs=true;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
+boolean haveBreadCrumbs=false;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+haveBreadCrumbs=true;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper&&haveBreadCrumbs){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+boolean haveBreadCrumbs=false;
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower&&haveBreadCrumbs){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+haveBreadCrumbs=true;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+boolean haveBreadCrumbs=false;
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+haveBreadCrumbs=true;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
-if(tmp<upper){
+if(tmp<upper&&haveBreadCrumbs){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
+boolean haveBreadCrumbs=false;
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
+haveBreadCrumbs=true;
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
-if(tmp>lower){
+if(tmp>lower&&haveBreadCrumbs){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+lower=((int)Math.ceil(tmp))-1;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+upper=((int)Math.ceil(tmp))-1;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+upper=((int)Math.ceil(tmp))-1;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
 }
+lower=((int)Math.ceil(tmp))-1;
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
+k=1.0/k*2;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(tmp))-1*2;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
+lower=((int)Math.ceil(tmp))-1*2;
 }
-k=1.0/k;
+k=1.0/k*2;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+try{
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+upper=((int)Math.ceil(tmp))-1;
+}
+}finally{
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+try{
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
+}finally{
+lower=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+try{
 tmp=mu+k*sigma;
 if(tmp<upper){
+upper=((int)Math.ceil(tmp))-1;
+}
+}finally{
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+return 0;
+}
+if(k>=lower){
+return lower-1;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+return 0;
+}
+if(k>=upper){
+return upper-1;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+if(k==3){
+System.out.println("debug");
+}
 lower=((int)Math.ceil(tmp))-1;
+if(k==3){
+System.out.println("debug");
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
+if(k==3){
+System.out.println("debug");
+}
 upper=((int)Math.ceil(tmp))-1;
+if(k==3){
+System.out.println("debug");
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k==3){
+System.out.println("debug");
+}
+if(k==3){
+System.out.println("debug");
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
+if(p==3){
+System.out.println("debug");
+}
 lower=((int)Math.ceil(tmp))-1;
+if(p==3){
+System.out.println("debug");
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
+double k=FastMath.sqrt((1.0-p)/p);
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+k--;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp<0){
+tmp--;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
-return lower;
-}
-if(lower==Integer.MIN_VALUE){
-if(checkedCumulativeProbability(lower)>=p){
 return lower;
-}
-}else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 0, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+if(upper!=((int)Math.ceil(tmp))-1){
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/878/pattern-ver1-serial/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java-cfgChanged.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
+if(lower!=((int)Math.ceil(tmp))-1){
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/878/pattern-ver1-serial/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java-cfgChanged.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/5716/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.state.stack.upgrade.Task.java-isCommand.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp<upper){
+upper=((int)Math.ceil(tmp))-1;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
-return lower;
-}
-if(lower==Integer.MIN_VALUE){
-if(checkedCumulativeProbability(lower)>=p){
 return lower;
-}
-}else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+if(lower==Integer.MIN_VALUE){
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
+}else {
+lower-=1;
+}
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
-return lower;
-}
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
+}
+return lower;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
-return lower;
-}
-if(lower==Integer.MIN_VALUE){
-if(checkedCumulativeProbability(lower)>=p){
 return lower;
-}
-}else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(lower==Integer.MIN_VALUE){
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
+}else {
+lower-=1;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<3){
+k=3;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp<3){
+tmp=3;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<3){
+k=3;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+if(k<3){
+k=3;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
-if(p<0.0||p>1.0){
+if((p<0.0)||(p>1.0)){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!((Double.isInfinite(mu))||(Double.isNaN(mu))||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
+lower=((int)Math.ceil(tmp))-1*2;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=((int)Math.ceil(tmp))-1*2;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
+lower=-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+k=0;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+if(k<0){
+k=0;
+}
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+k=0;
+}
 double tmp=mu-k*sigma;
+if(tmp<0){
+tmp=0;
+}
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
+if(k<0){
+k=0;
+}
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
+if(tmp<0){
+tmp=0;
+}
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
+lower=1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
+upper=1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
-return lower;
-}
-if(lower==Integer.MIN_VALUE){
-if(checkedCumulativeProbability(lower)>=p){
 return lower;
-}
-}else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
+if(lower==Integer.MIN_VALUE){
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
+}else {
+lower-=1;
+}
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
-return lower;
-}
-if(lower==Integer.MIN_VALUE){
-if(checkedCumulativeProbability(lower)>=p){
 return lower;
-}
-}else {
-lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+if(lower==Integer.MIN_VALUE){
+if(checkedCumulativeProbability(lower)>=p){
+return lower;
+}
+}else {
+lower-=1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
-k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 8, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!((Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma))||(Double.isNaN(sigma))||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/5716/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.state.stack.upgrade.Task.java-isCommand.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
+k=Math.round(k*100.0)/100.0;
 tmp=mu+k*sigma;
+tmp=Math.round(tmp*100.0)/100.0;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
- final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
+ final boolean chebyshevApplies=!((Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma))||(sigma==0.0));
 if(chebyshevApplies){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
 if(chebyshevApplies){
+synchronized(this){
 double k=FastMath.sqrt((1.0-p)/p);
 double tmp=mu-k*sigma;
 if(tmp>lower){
 lower=((int)Math.ceil(tmp))-1;
 }
 k=1.0/k;
 tmp=mu+k*sigma;
 if(tmp<upper){
 upper=((int)Math.ceil(tmp))-1;
+}
 }
 }
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 50, UPD : 50, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_2_buggy/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java[89,143]
------------Candidate---------------
 public int inverseCumulativeProbability(double p) throws OutOfRangeException{
 if(p<0.0||p>1.0){
 throw new OutOfRangeException(p,0,1);
 }
 int lower=getSupportLowerBound();
 if(p==0.0){
 return lower;
 }
 if(lower==Integer.MIN_VALUE){
 if(checkedCumulativeProbability(lower)>=p){
 return lower;
 }
 }else {
 lower-=1;
 }
 int upper=getSupportUpperBound();
 if(p==1.0){
 return upper;
 }
  final double mu=getNumericalMean();
  final double sigma=FastMath.sqrt(getNumericalVariance());
  final boolean chebyshevApplies=!(Double.isInfinite(mu)||Double.isNaN(mu)||Double.isInfinite(sigma)||Double.isNaN(sigma)||sigma==0.0);
-if(chebyshevApplies){
-double k=FastMath.sqrt((1.0-p)/p);
-double tmp=mu-k*sigma;
-if(tmp>lower){
-lower=((int)Math.ceil(tmp))-1;
-}
-k=1.0/k;
-tmp=mu+k*sigma;
-if(tmp<upper){
-upper=((int)Math.ceil(tmp))-1;
-}
-}
 return solveInverseCumulativeProbability(p,lower,upper);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 51, UPD : 0, INS : 0, DEL : 51
Failing Tests:[org.apache.commons.math3.distribution.HypergeometricDistributionTest::testMath1021, org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied]
---------START : 2019.09.04 AD at 09:20:46 CDT
---------TIME : 2019.09.04 AD at 14:20:54 CDT
--------------- END -----------------
Current failed test : org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied | 2019.09.04 AD at 14:20:54 CDT
Finish : math-2 > patch : 0 | Start : Wed Sep 04 09:20:46 CDT 2019 | End : 2019.09.04 AD at 14:21:22 CDT
