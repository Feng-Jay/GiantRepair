Repair : math_42
Current failed test : org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable | 2019.09.06 AD at 05:38:42 CDT
Location : org.apache.commons.math.optimization.RealPointValuePair.getPoint:[68]#0.2581988897471611
Compute Candidate : 2019.09.06 AD at 05:39:56 CDT - 2019.09.06 AD at 05:43:43 CDT , PNumber : 11438, CandNumber : 16 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return (point==null)?null:this.point.clone();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+this.getPoint();
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:43:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+int a=0;
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return ((point==null))?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:43:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+String OUTSTRING="";
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+int a=1;
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+boolean b=true;
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+if(point==null){
+return null;
+}
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+double[] point=this.point;
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/290/pattern-ver1-serial/nars_logic.src.main.java.nars.task.DefaultTask.java-hashCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return (point==null||(point==null))?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1254/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java-getBugLinks.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return this.getPoint();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
+if(point==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return (point==null)?null:point.clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return (point==null)?null:point.clone().clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4683/pattern-ver1-serial/backend.src.main.java.com.benine.backend.camera.ipcameracontrol.IPCamera.java-getPresets.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+return (double[])((point==null)?null:point.clone());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java[64,69]
------------Candidate---------------
 public double[] getPoint(){
-return (point==null)?null:point.clone();
+double[] result=null;
+if((point==null)?null:point.clone()!=null){
+result=(point==null)?null:point.clone().clone();
+}
+return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/2121/pattern-ver1-serial/exportLibraries.xtremio.src.main.java.com.emc.storageos.xtremio.restapi.model.response.XtremIOTagsInfo.java-getTagsInfo.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 6, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:44:28 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1:[181, 174, 173, 178, 169]#0.25
Compute Candidate : 2019.09.06 AD at 05:45:08 CDT - 2019.09.06 AD at 05:52:46 CDT , PNumber : 11427, CandNumber : 131 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+return ;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+continue;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+break;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:52:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()<=0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()>=0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()!=0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()>0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
+doIteration(tableau);
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+doIteration(tableau);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+solvePhase1(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
+solvePhase1(tableau);
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+synchronized(this){
 doIteration(tableau);
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(equals(tableau)){
+return ;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if(equals(tableau)){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+}
+if(equals(tableau)){
+return ;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(equals(tableau)){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:55:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+while(true){
+
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:59:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
+synchronized(this){
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:59:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+synchronized(this){
 if(tableau.getNumArtificialVariables()==0){
 return ;
+}
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:59:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+if(tableau==null){
+return ;
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 05:59:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if(tableau==null){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau==null){
+return ;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau==null){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+}
+if(tableau==null){
+return ;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+synchronized(this){
 return ;
+}
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+synchronized(this){
 throw new NoFeasibleSolutionException();
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if("index".equals(tableau)){
+return ;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if("index".equals(tableau)){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau.equals("TIME")){
+return ;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau.equals("TIME")){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+if("&null".equals(tableau)){
+return ;
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if("&null".equals(tableau)){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+if(tableau.equals("DATETIME")){
+return ;
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+if(tableau.equals("DATETIME")){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+doIteration(tableau);
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+doIteration(tableau);
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+doIteration(tableau);
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,30-(tableau.getRhsOffset())),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(30-(0),tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:01:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
-while(!tableau.isOptimal()){
 doIteration(tableau);
+while(!tableau.isOptimal()){
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+tableau=tableau;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+tableau=tableau;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:01:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau!=null){
 if(tableau.getNumArtificialVariables()==0){
 return ;
+}
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:01:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
-doIteration(tableau);
 }
+doIteration(tableau);
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+doIteration(tableau);
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
-doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+int a=0;
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+int a=0;
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+int a=0;
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+int a=0;
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()-22),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/2147/pattern-ver1-serial/src.main.java.ch.bfh.ti.projekt1.sokoban.view.GameWindowView.java-loadSolutionFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+String OUTSTRING="";
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+String OUTSTRING="";
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+String OUTSTRING="";
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+String OUTSTRING="";
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+int Precision=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+int epsilon=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,Math.round(tableau.getRhsOffset())),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(Math.round(0),tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:03:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+int indexSelection=0;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(Math.max(0,tableau.getRhsOffset()),tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,Math.max(0,tableau.getRhsOffset())),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0*2,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()*2),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau.equals("sounds")){
+continue;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+int a=1;
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+int a=1;
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+int a=1;
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+int a=1;
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()+1),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7285/pattern-ver1-serial/jm-prta-parser.src.main.java.org.meyerlab.nopence.jm_prta_parser.attributes.NumericAttribute.java-getBinByValue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+boolean Precision=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+boolean epsilon=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+boolean b=true;
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+boolean b=true;
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+boolean b=true;
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+boolean b=true;
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau==null){
+continue;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:04:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
-doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+doIteration(tableau);
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
+doIteration(tableau);
 return ;
 }
 while(!tableau.isOptimal()){
-doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau==null){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:08:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0-1){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:09:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(true){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:09:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0==false){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()==Long.MIN_VALUE){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau.getNumArtificialVariables()==12){
+return ;
+}else {
 if(tableau.getNumArtificialVariables()==0){
 return ;
+}
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+assert (tableau!=null);
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+assert (tableau!=null);
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(Double.isNaN(tableau.getNumArtificialVariables())){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0==true){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau!=null){
+doIteration(tableau);
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau!=null){
+if(tableau.getNumArtificialVariables()==0){
+return ;
+}
+while(!tableau.isOptimal()){
+doIteration(tableau);
+}
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+throw new NoFeasibleSolutionException();
+}
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+assert (tableau!=null);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
+assert (tableau!=null);
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||"查看红包".equals(tableau.getNumArtificialVariables())){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()==3){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:10:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau!=null&&tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()<0||tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+if(tableau.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+}
+if(tableau.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset())*2,0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2630/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()>9){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0&&tableau.getNumArtificialVariables()<4000000){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0&&tableau.getNumArtificialVariables()!=9999){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(0>0&&tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau==null||tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+assert (tableau!=null):"Appointments day is not allowed to be null!";
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
-if(tableau.getNumArtificialVariables()==0){
+if(tableau.getNumArtificialVariables()==0||tableau.getNumArtificialVariables()=='"'){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+if(tableau.equals("CALL_RECEIVED_AT")){
+return ;
+}
 doIteration(tableau);
+if(tableau.equals("NAME")){
+return ;
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+if(tableau.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
+if(tableau.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
+if(tableau.equals("INFO")){
+return ;
+}
+if(tableau.equals("UNIT")){
+return ;
+}
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
+}
+if(tableau.equals("INFO")){
+return ;
+}
+if(tableau.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!(Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon))){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5197/pattern-ver1-serial/src.main.java.com.example.pc.olx.User.UserManager.java-isLogin.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(true){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)==false){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)&&false){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
-if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
+if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)==true){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
+long startTime=System.currentTimeMillis();
 doIteration(tableau);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java[158,181]
------------Candidate---------------
 protected void solvePhase1(SimplexTableau tableau) throws MaxCountExceededException,UnboundedSolutionException,NoFeasibleSolutionException{
+long startTime=System.currentTimeMillis();
 if(tableau.getNumArtificialVariables()==0){
 return ;
 }
 while(!tableau.isOptimal()){
 doIteration(tableau);
 }
 if(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0.0,epsilon)){
 throw new NoFeasibleSolutionException();
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 06:12:28 CDT
--------------- END -----------------
Location : org.apache.commons.math.optimization.linear.SimplexTableau.dropPhase1Objective:[347, 332, 333, 336, 337, 338, 344, 345, 346, 351, 352, 353, 354, 355, 356, 361, 362, 365, 366, 367, 328]#0.25
Compute Candidate : 2019.09.06 AD at 06:13:07 CDT - 2019.09.06 AD at 07:01:59 CDT , PNumber : 11428, CandNumber : 877 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+return ;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+return ;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+return ;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+return ;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+return ;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+return ;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+continue;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+continue;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+continue;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+continue;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+continue;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+continue;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+continue;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+continue;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+return ;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+return ;
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+return ;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+return ;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+return ;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
+ int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>1){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==0){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>=0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=1;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();this.numArtificialVariables<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;this.numArtificialVariables<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:05:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;this.numArtificialVariables<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;this.numArtificialVariables<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:05:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(col,i);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/1763/pattern-ver1-serial/MyApplication.app.src.main.java.com.gcode.notes.controllers.BaseController.java-setNewContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<=getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<=getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<=getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j<=getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+List<Integer> columnsToDrop=new ArrayList<Integer>(null);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Collection;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),myUid;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Collection;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,myUid;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Collection;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,myUid;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Collection;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0,myUid;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),DEFAULT_TIMEOUT2;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,DEFAULT_TIMEOUT2;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0,DEFAULT_TIMEOUT2;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(col,0);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.add(0,0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:07:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(i,col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7601/pattern-ver1-serial/src.neu.ComputerPlayer.java-checkImmidiateFour.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i>getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i>getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i>getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j>getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1;i>0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4108/pattern-ver1-serial/src.main.java.org.roaringbitmap.buffer.MappeableArrayContainer.java-inot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),MAX_SERVICE_NODES;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,MAX_SERVICE_NODES;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,MAX_SERVICE_NODES;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),MAX_ZK_WAIT_RETRY_TIMES;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,MAX_ZK_WAIT_RETRY_TIMES;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+break;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+break;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:09:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+break;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:10:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+break;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:10:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+break;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:10:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+break;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+break;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=2;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()<=1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=3;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i-getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i--){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<getNumArtificialVariables();i--){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();i--){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col--]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j<getWidth();j--){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+List<Integer> columnsToDrop=new ArrayList<Integer>(1);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3262/pattern-ver1-serial/app.src.main.java.com.playing.lokasee.activites.MainActivity.java-onClose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((Integer)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/1684/pattern-ver1-serial/src.jpkmn.game.battle.Battle.java-remove.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:12:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i+i;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:12:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()>=1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)!=0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:12:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()!=1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:12:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)!=null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5284/pattern-ver1-serial/src.servlets.CheckUsername.java-processRequest.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+Integer col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
+Integer col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(1,col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.add(1,0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[getHeight()-2][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-2;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-2][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),localLevel;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,localLevel;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,localLevel;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0,localLevel;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.remove(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2156/pattern-ver1-serial/src.server.Server.java-addScheduledFailure.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=10;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()>1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-i][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:14:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-col][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:14:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.get(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/4761/pattern-ver1-serial/src.main.java.org.la4j.vector.source.UnsafeVectorSource.java-get.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(col,col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2403/pattern-ver1-serial/app.src.main.java.com.door43.translationstudio.core.Indexer.java-getFrame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[getHeight()-1][getHeight()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/4077/pattern-ver1-serial/src.com.edisonwang.stackedview.view.StackedView.java-prepareScrollingToBottom.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:14:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j<getHeight();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/4077/pattern-ver1-serial/src.com.edisonwang.stackedview.view.StackedView.java-prepareScrollingToBottom.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.remove(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3908/pattern-ver1-serial/src.main.java.me.ferrybig.javacoding.minecraft.minigame.listener.CombinedListener.java-removeListener.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.remove(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3908/pattern-ver1-serial/src.main.java.me.ferrybig.javacoding.minecraft.minigame.listener.CombinedListener.java-removeListener.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++,new ArrayList<KeyBinding>()){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<getNumArtificialVariables();i++,new ArrayList<KeyBinding>()){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();i++,new ArrayList<KeyBinding>()){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=100;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>3){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1;i>=0.0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1;i<=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.get(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/5881/pattern-ver1-serial/aslibrary.src.main.java.com.hitomi.aslibrary.ActivityManager.java-getPreActivity.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[(getHeight())][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[(1)][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[(getWidth())][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(col,2);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.add(0,2);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1;i>=0;i++){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/12/pattern-ver1-serial/src.main.java.com.quadcoder.coinpet.page.signup.SignupFormFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(this.numArtificialVariables==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)<0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1401/pattern-ver1-serial/XMLC.src.Learner.PLTFH.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+List<Integer> columnsToDrop=new ArrayList<Integer>(2);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5794/pattern-ver1-serial/app.src.main.java.io.github.louistsaitszho.erg2.gui.HistoryAdapter.java-startDateTimeToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),_afterComposeMethodCache;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,_afterComposeMethodCache;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1,_afterComposeMethodCache;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,_afterComposeMethodCache;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i+3;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.equals(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/3866/pattern-ver1-serial/Common.src.common.Mathematics.PostfixConverter.java-convertToPostfix.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+i++;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+i++;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+i++;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.List;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),mActions;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.List;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,mActions;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.List;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,mActions;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.List;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0,mActions;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++,new ArrayList<>()){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1043/pattern-ver1-serial/src.main.java.application.controllers.MainController.java-switchScene.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<getNumArtificialVariables();i++,new ArrayList<>()){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1043/pattern-ver1-serial/src.main.java.application.controllers.MainController.java-switchScene.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();i++,new ArrayList<>()){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1043/pattern-ver1-serial/src.main.java.application.controllers.MainController.java-switchScene.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),mRelationId;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1,mRelationId;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:17:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,mRelationId;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,mRelationId;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ final List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ final double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ final List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ final int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ final int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ final double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
+ int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
+ int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=this.tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=this.tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+this.columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
+this.dropPhase1Objective();
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+this.dropPhase1Objective();
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+this.dropPhase1Objective();
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+this.dropPhase1Objective();
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:18:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+this.dropPhase1Objective();
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+this.dropPhase1Objective();
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+this.dropPhase1Objective();
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+this.dropPhase1Objective();
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+this.dropPhase1Objective();
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+this.dropPhase1Objective();
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/7184/pattern-ver1-serial/src.Board.java-rotate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop.isEmpty()){
+return ;
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(columnsToDrop.isEmpty()){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop.isEmpty()){
+return ;
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.isEmpty()){
+return ;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.isEmpty()){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(columnsToDrop.isEmpty()){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop.isEmpty()){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.isEmpty()){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Iterator;
+
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==-1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(columnsToDrop==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+col++;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+col++;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+col++;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+i++;
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+i++;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+i++;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+i++;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+i++;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+i++;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+i++;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:21:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+col++;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:21:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][1]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+col--;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][i]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/625/pattern-ver1-serial/src.controllers.multiPlayer.sampleMCTS.SingleTreeNode.java-rollOut.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[getHeight()-1][getWidth()-2];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<=getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<=getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<=getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j<=getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<=getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<=getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<=getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<=getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<=getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j<=getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:22:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+i--;
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+i--;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+i--;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+i--;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:26:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+i--;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:26:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+col--;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+i--;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][0]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][2]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+columnsToDrop.clear();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+synchronized(this){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+synchronized(this){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+synchronized(columnsToDrop){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+synchronized(columnsToDrop){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+synchronized(columnsToDrop){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+synchronized(columnLabels){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+columnsToDrop.clear();
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+columnsToDrop.clear();
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+columnsToDrop.clear();
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+columnsToDrop.clear();
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+columnsToDrop.clear();
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+columnsToDrop.clear();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+columnsToDrop.clear();
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add((int)(col));
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.add((int)(0));
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow((int)(col))==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains((int)(j))){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnsToDrop.clear();
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+columnsToDrop.clear();
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+columnsToDrop.clear();
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+columnsToDrop.clear();
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+columnsToDrop.clear();
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+columnsToDrop.clear();
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+columnsToDrop.clear();
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[(columnsToDrop.size())][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/2063/pattern-ver1-serial/src.minecraft.co.uk.flansmods.common.BlockPlaneWorkbench.java-getBlockTextureFromSideAndMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
+this.tableau=null;
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i+(int)(getArtificialVariableOffset());
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i+-1;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+synchronized(this){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+synchronized(this){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions(),continentName,countryCode;i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0,continentName,countryCode;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1,continentName,countryCode;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0,continentName,countryCode;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(equals(col)){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(equals(col)){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(equals(columnsToDrop)){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(equals(columnsToDrop)){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:30:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(equals(columnsToDrop)){
+return ;
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:31:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(equals(entry)){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:31:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+break;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+break;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+break;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+break;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+break;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+break;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:31:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+break;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+break;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:32:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
+while(true){
+
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
+while(true){
+
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+while(true){
+
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:38:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+while(true){
+
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+while(true){
+
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+while(true){
+
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:42:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+while(true){
+
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+while(true){
+
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+break;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+break;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+break;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+break;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+break;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+break;
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+break;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+break;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()>0){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:48:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+columnsToDrop.clear();
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+i--;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+i--;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+synchronized(this){
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+synchronized(this){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+synchronized(this){
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+synchronized(this){
 if(getNumObjectiveFunctions()==1){
 return ;
+}
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.isEmpty()){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/2662/pattern-ver1-serial/letter-annotator-api.src.main.java.org.modelcatalogue.letter.annotator.AbstractHighlighter.java-highlight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.isEmpty()){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/2662/pattern-ver1-serial/letter-annotator-api.src.main.java.org.modelcatalogue.letter.annotator.AbstractHighlighter.java-highlight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.isEmpty()){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/2662/pattern-ver1-serial/letter-annotator-api.src.main.java.org.modelcatalogue.letter.annotator.AbstractHighlighter.java-highlight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(columnsToDrop.isEmpty()){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/2662/pattern-ver1-serial/letter-annotator-api.src.main.java.org.modelcatalogue.letter.annotator.AbstractHighlighter.java-highlight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop==null){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop==null){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop==null){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop==null){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(columnsToDrop==null){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+if(columnsToDrop==null){
+return ;
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if(columnsToDrop==null){
+return ;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if(columnsToDrop==null){
+return ;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop==null){
+return ;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop==null){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop==null){
+return ;
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop==null){
+return ;
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(columnsToDrop==null){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(columnsToDrop==null){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop==null){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(matrix==null){
+return ;
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++,Charset.forName("UTF-8")){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<getNumArtificialVariables();i++,Charset.forName("UTF-8")){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();i++,Charset.forName("UTF-8")){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop!=null){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop!=null){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop!=null){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:51:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnLabels!=null){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/6565/pattern-ver1-serial/MarioAI.src.ch.idsia.agents.controllers.AdvancedMarioAIAgent.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+columnsToDrop=new ArrayList<>();
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/486/pattern-ver1-serial/app.src.main.java.com.rubengees.vocables.pojo.Unit.java-readFromParcel.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnsToDrop=new ArrayList<>();
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/486/pattern-ver1-serial/app.src.main.java.com.rubengees.vocables.pojo.Unit.java-readFromParcel.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(tableau==null){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
+if(columnsToDrop==new ArrayList<Integer>()){
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
+if(columnsToDrop==new ArrayList<Integer>()){
+return ;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
+if(columnsToDrop==new ArrayList<Integer>()){
+return ;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(columnsToDrop==new ArrayList<Integer>()){
+return ;
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
+if(columnsToDrop==new ArrayList<Integer>()){
+return ;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+synchronized(this){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+synchronized(this){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
+synchronized(this){
 return ;
+}
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+if(0!=0){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+if(tableau.getEntry(i,j)!=0){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(col>0){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(0>0){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(i>0){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if((int)columnsToDrop.get(i)>0){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if("index".equals(columnsToDrop)){
+return ;
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if("index".equals(columnsToDrop)){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if("index".equals(columnsToDrop)){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if("index".equals(columnsToDrop)){
+return ;
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if("index".equals(columnsToDrop)){
+return ;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if("index".equals(columnsToDrop)){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if("index".equals(columnsToDrop)){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if("index".equals(columnsToDrop)){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if("index".equals(entry)){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
+if(tableau==null){
+return ;
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4743/pattern-ver1-serial/app.src.main.java.com.wafflestudio.shafe.MapManager.java-initializeMapWithSavedValue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.equals("TIME")){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if("&null".equals(columnsToDrop)){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if("&null".equals(columnsToDrop)){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if("&null".equals(columnsToDrop)){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if("&null".equals(columnsToDrop)){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if("&null".equals(columnsToDrop)){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if("&null".equals(columnsToDrop)){
+return ;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if("&null".equals(columnsToDrop)){
+return ;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if("&null".equals(entry)){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(columnsToDrop.equals("DATETIME")){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if(columnsToDrop.equals("DATETIME")){
+return ;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(columnsToDrop==null){
+return ;
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4514/pattern-ver1-serial/src.main.java.com.muzima.service.HTMLFormObservationCreator.java-createObservation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(30-(0),i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0,30-(i));
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(30-(i),j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,30-(j));
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ @SuppressWarnings("UnusedAssignment") List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ @SuppressWarnings("UnusedAssignment") double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ @SuppressWarnings("UnusedAssignment") int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ @SuppressWarnings("UnusedAssignment") List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ @SuppressWarnings("UnusedAssignment") double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ @SuppressWarnings("UnusedAssignment") double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:54:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ @SuppressWarnings("UnusedAssignment") List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ @SuppressWarnings("UnusedAssignment") double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
+ @SuppressWarnings("UnusedAssignment") int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
-List<Integer> columnsToDrop=new ArrayList<Integer>();
+ @SuppressWarnings("UnusedAssignment") List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+ @SuppressWarnings("UnusedAssignment") int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+ @SuppressWarnings("UnusedAssignment") double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i+1+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+col=col;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+columnsToDrop=columnsToDrop;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+columnsToDrop=columnsToDrop;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+columnsToDrop=columnsToDrop;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.equals("")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(matrix.equals("")){
+return ;
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+columnsToDrop.remove(null);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(i==4){
+continue;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(i==4){
+continue;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+if(i==4){
+continue;
+}
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(i==4){
+continue;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(i==4){
+continue;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+if(j==4){
+continue;
+}
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(i==4){
+continue;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(j==4){
+continue;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+columnsToDrop.remove(0);
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:55:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+columnsToDrop.remove(0);
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+columnsToDrop.remove(0);
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+columnsToDrop.remove(0);
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnsToDrop.remove(0);
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+columnsToDrop.remove(0);
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+columnsToDrop.remove(0);
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+columnsToDrop.remove(0);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:56:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+col=1000;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Arrays;
+
+import java.util.Collections;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+Collections.sort(columnsToDrop);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2616/pattern-ver1-serial/app.app.src.main.java.adapters.versions.VersionViewModel.java-createModels.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(true){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1==false){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(col<0){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(col<0){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(tableau!=null){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:57:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(this.tableau==null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.equals("-1")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(matrix.equals("-1")){
+return ;
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Arrays;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+Arrays.sort(matrix);
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/405/pattern-ver1-serial/twitter-topic-strand-core.src.main.java.twittertopicstrand.util.FileOperations.java-getFiles.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.contains("deviantart.com")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(columnsToDrop.contains("deviantart.com")){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
+if(columnsToDrop.contains("deviantart.com")){
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
+if(columnsToDrop.contains("deviantart.com")){
+return ;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(columnsToDrop.contains("deviantart.com")){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+if(columnsToDrop.contains("deviantart.com")){
+return ;
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if(columnsToDrop.contains("deviantart.com")){
+return ;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if(columnsToDrop.contains("deviantart.com")){
+return ;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[0][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=0xEfffffff&(0);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[2][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0/2){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+int a=0;
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+int a=0;
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+int a=0;
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+int a=0;
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+int a=0;
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+int a=0;
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+int a=0;
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 07:59:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+int a=0;
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
+int a=0;
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+int a=0;
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop.equals(matrix)){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.equals(col)){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(matrix.equals(columnsToDrop)){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.equals(col)){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.equals(entry)){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:00:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(col==0.0){
+continue;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4118/pattern-ver1-serial/src.behavior.irl.TabularIRL.java-getBehaviorLogProbabilityHelper.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+String OUTSTRING="";
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+String OUTSTRING="";
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+String OUTSTRING="";
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+String OUTSTRING="";
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+String OUTSTRING="";
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+String OUTSTRING="";
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+String OUTSTRING="";
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+String OUTSTRING="";
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+String OUTSTRING="";
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
+String OUTSTRING="";
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();){
+i++;
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();){
+i++;
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();){
 int col=0;
 for(int j=0;j<getWidth();j++){
+i++;
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+i++;
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:01:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+i++;
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<getNumArtificialVariables();){
+i++;
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:03:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/7889/pattern-ver1-serial/src.flagmaker.Flag.java-Save.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+int tableau=5;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+int Precision=5;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+int maxUlps=5;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.contains(col)){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.contains(col)){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[(getHeight()-1)][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(Math.round(0),i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0,Math.round(i));
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(Math.round(i),j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,Math.round(j));
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1;Math.abs(i)>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5309/pattern-ver1-serial/IHMCJavaToolkit.src.us.ihmc.tools.FormattingTools.java-getFormattedToSignificantFigures.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.equals(InputStream.class)){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(Double.isNaN(getNumObjectiveFunctions())){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
+if(columnsToDrop.contains(columnsToDrop)){
+return ;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
+if(columnsToDrop.contains(columnsToDrop)){
+return ;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
-int col=i+getArtificialVariableOffset();
+int col=i+(getArtificialVariableOffset()+1);
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1==true){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(Math.abs(col));
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
-for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();Math.abs(i++)){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
+columnsToDrop.add(Math.abs(0));
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
-for(int i=0;i<getNumArtificialVariables();i++){
+for(int i=0;i<getNumArtificialVariables();Math.abs(i++)){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
+for(int i=1;i<getHeight();Math.abs(i++)){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(Math.abs(col))==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()-1;i>=0;Math.abs(i--)){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(Math.abs(i)));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
-for(int j=0;j<getWidth();j++){
+for(int j=0;j<getWidth();Math.abs(j++)){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(matrix[i-1][col++]==0){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(matrix[i-1][col++]==0){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+if(matrix[i-1][col++]==0){
+return ;
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
+if(this.numArtificialVariables==0){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+int indexSelection=0;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+int indexSelection=0;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+int indexSelection=0;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+int indexSelection=0;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+int indexSelection=0;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+int indexSelection=0;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+int indexSelection=0;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+int indexSelection=0;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
+int indexSelection=0;
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(Math.max(0,i),i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0,Math.max(0,i));
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(Math.max(i,j),j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,Math.max(i,j));
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Arrays;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Arrays;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++-1]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0*2,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0,i*2);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i*2,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j*2);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5419/pattern-ver1-serial/android.src.com.lappard.android.screens.GameScreen.java-show.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.equals("setPackMode")){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(columnsToDrop.equals("setPackMode")){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(matrix.equals("setPackMode")){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(matrix.equals("setPackMode")){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.equals("sounds")){
+continue;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.equals("sounds")){
+continue;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.equals("sounds")){
+continue;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.equals("sounds")){
+continue;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=(0/1000);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(i+1,col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositoryCitation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+int a=1;
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+int a=1;
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+int a=1;
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+int a=1;
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+int a=1;
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+int a=1;
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+int a=1;
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
+int a=1;
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+int a=1;
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:07:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+int a=1;
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+boolean Precision=true;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+boolean tableau=true;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+boolean maxUlps=true;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[getHeight()/2-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/384/pattern-ver1-serial/src.com.gmail.zhou1992228.building.BuildingEntity.java-getMidPos.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[getHeight()-1][getWidth()/2-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/384/pattern-ver1-serial/src.com.gmail.zhou1992228.building.BuildingEntity.java-getMidPos.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
-for(int i=columnsToDrop.size()-1;i>=0;i--){
+for(int i=columnsToDrop.size()/2-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/384/pattern-ver1-serial/src.com.gmail.zhou1992228.building.BuildingEntity.java-getMidPos.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+boolean b=true;
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+boolean b=true;
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+boolean b=true;
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+boolean b=true;
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+boolean b=true;
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+boolean b=true;
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+boolean b=true;
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+boolean b=true;
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
+boolean b=true;
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+boolean b=true;
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:08:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=1;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:09:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=-1;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:09:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col).equals(null)){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:09:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:10:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=0;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.size()<=0){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/5648/pattern-ver1-serial/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.pvmanager.PVManagerHelper.java-formatNumberArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.size()<=0){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/5648/pattern-ver1-serial/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.pvmanager.PVManagerHelper.java-formatNumberArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.size()<=0){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/5648/pattern-ver1-serial/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.pvmanager.PVManagerHelper.java-formatNumberArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+columnsToDrop.add(col);
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnsToDrop.add(0);
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+columnsToDrop.add(0);
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+columnsToDrop.add(0);
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:11:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnsToDrop.add(i);
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+columnsToDrop.add(i);
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(0>=columnsToDrop.size()){
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/5077/pattern-ver1-serial/src.Utils.Helper.java-getModeInt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(0>=columnsToDrop.size()){
+return ;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/5077/pattern-ver1-serial/src.Utils.Helper.java-getModeInt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(0>=columnsToDrop.size()){
+return ;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/5077/pattern-ver1-serial/src.Utils.Helper.java-getModeInt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+columnsToDrop.add(col);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+columnsToDrop.add(col);
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+columnsToDrop.add(col);
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+columnsToDrop.add(col);
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:12:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=2;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+columnsToDrop.add(col);
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:13:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+columnsToDrop.add(col);
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:13:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+columnsToDrop.add(0);
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+columnsToDrop.add(0);
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:13:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+columnsToDrop.add(0);
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:13:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+columnsToDrop.add(i);
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:14:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+columnsToDrop.add(0);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:14:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+columnsToDrop.add(0);
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:14:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+columnsToDrop.add(0);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:14:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+columnsToDrop.add(i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:15:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=3;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:15:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if(getBasicRow(col)==null){
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if(Precision.compareTo(entry,0.0,maxUlps)>0){
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnsToDrop.add(i);
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
-columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.size()>0){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.size()>0){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.size()>0){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnLabels.size()>0){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(!columnsToDrop.contains(col)){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7288/pattern-ver1-serial/Horizon.app.src.main.java.com.example.hesolutions.horizon.DataManager.java-datagetvalue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(!columnsToDrop.contains(i)){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7288/pattern-ver1-serial/Horizon.app.src.main.java.com.example.hesolutions.horizon.DataManager.java-datagetvalue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(!columnsToDrop.contains(0)){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7288/pattern-ver1-serial/Horizon.app.src.main.java.com.example.hesolutions.horizon.DataManager.java-datagetvalue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(!columnLabels.contains((int)columnsToDrop.get(i))){
 columnLabels.remove((int)columnsToDrop.get(i));
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7288/pattern-ver1-serial/Horizon.app.src.main.java.com.example.hesolutions.horizon.DataManager.java-datagetvalue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(true){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(true){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+columnsToDrop.add(col);
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null==false){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:18:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)==false){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j)*i;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:19:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j)*col;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:20:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j)*j;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove("https://myschool.ru.is/myschool/"+(int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:20:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=this.tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+this.columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2168/pattern-ver1-serial/src.main.java.app.lsgui.gui.channelinfopanel.ChannelInfoPanel.java-recordStream.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:20:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+columnsToDrop.add(0);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+columnsToDrop.add(col);
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=i;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/7295/pattern-ver1-serial/src.android.SunmiPrinter.java-printTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=col;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/7295/pattern-ver1-serial/src.android.SunmiPrinter.java-printTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1||getNumObjectiveFunctions()==Long.MIN_VALUE){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null||getBasicRow(col)==Long.MIN_VALUE){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+columnsToDrop.add(0);
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(i)+" votes");
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:22:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+if(getNumObjectiveFunctions()==12){
+return ;
+}else {
 if(getNumObjectiveFunctions()==1){
 return ;
+}
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:22:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=10;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(i)-1);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4594/pattern-ver1-serial/EzSignin.app.src.main.java.signin.ez.ezsignin.MainActivity.java-populateFieldsWithRecord.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:23:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+columnsToDrop.add(0);
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:23:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove("There was a problem with the call to ManyWho: "+(int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:23:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(i)*-1);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:23:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove(new BigDecimal((int)columnsToDrop.get(i)).setScale(2,RoundingMode.HALF_UP));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:23:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=j;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6985/pattern-ver1-serial/src.org.broad.igv.track.DataTrack.java-getInViewScores.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:24:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(columnsToDrop!=null){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/2504/pattern-ver1-serial/app.src.main.java.com.projectmanagement.benson.homeinventoryapp.Models.List.java-setKeys.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:24:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+columnsToDrop.add(0);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+columnsToDrop.add(i);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:24:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+columnsToDrop.add(i);
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
-columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+columnsToDrop.add(i);
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:24:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
 for(int j=0;j<getWidth();j++){
+int col=0;
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:25:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
-int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+int col=0;
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=100;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)Math.max(i,1));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:27:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(i)*1000);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(columnsToDrop.size()==1){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2574/pattern-ver1-serial/src.main.java.edu.umich.med.mbni.lkq.cyontology.internal.view.OntologyControlPanel.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)((int)columnsToDrop.get(i)));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+try{
 this.tableau=new Array2DRowRealMatrix(matrix);
+}finally{
+columnsToDrop.add(0);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+try{
 this.numArtificialVariables=0;
+}finally{
+columnsToDrop.add(0);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+assert (columnsToDrop!=null);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+assert (columnsToDrop!=null);
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+assert (columnsToDrop!=null);
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+assert (columnsToDrop!=null);
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+assert (columnsToDrop!=null);
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+assert (columnsToDrop!=null);
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+assert (columnsToDrop!=null);
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+assert (columnsToDrop!=null);
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+assert (!columnsToDrop.isEmpty());
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+assert (!columnsToDrop.isEmpty());
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+assert (!columnsToDrop.isEmpty());
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+assert (!columnsToDrop.isEmpty());
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+assert (!columnsToDrop.isEmpty());
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+assert (!columnsToDrop.isEmpty());
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+assert (!columnsToDrop.isEmpty());
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+assert (!columnsToDrop.isEmpty());
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+columnsToDrop.add(i);
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:29:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
-double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+double[][] matrix=new double[(getWidth()-columnsToDrop.size())][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=0.0;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:29:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=i-1+1;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2169/pattern-ver1-serial/src.net.waqassiddiqi.app.crew.ui.ListCrewForm.java-getData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(Double.isNaN(getBasicRow(col))){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(i)+1);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/689/pattern-ver1-serial/JavaME.MistroFarmer.MistroFarmer.src.org.cgiar.ilri.mistro.farmer.carrier.Cow.java-setDateOfBirth.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null==true){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)==true){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop!=null){
+columnsToDrop.add(col);
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop!=null){
+int col=i+getArtificialVariableOffset();
+if(getBasicRow(col)==null){
+columnsToDrop.add(col);
+}
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop!=null){
+columnLabels.remove((int)columnsToDrop.get(i));
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(columnsToDrop!=null){
+if(!columnsToDrop.contains(j)){
+matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop!=null){
+int col=0;
+for(int j=0;j<getWidth();j++){
+if(!columnsToDrop.contains(j)){
+matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+}
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove(Math.abs((int)columnsToDrop.get(i)));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+assert (columnsToDrop!=new ArrayList<Integer>());
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+assert (entry!=tableau.getEntry(0,i));
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+assert (col!=i+getArtificialVariableOffset());
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+assert (col!=0);
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove("PATH: \n"+(int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
-for(int i=1;i<getHeight();i++){
 int col=0;
+for(int i=1;i<getHeight();i++){
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove(String.valueOf((int)columnsToDrop.get(i)));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+this.numArtificialVariables++;
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+this.numArtificialVariables++;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+this.numArtificialVariables++;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+this.numArtificialVariables++;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+this.numArtificialVariables++;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+this.numArtificialVariables++;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+this.numArtificialVariables++;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+this.numArtificialVariables++;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=-1;
+this.numArtificialVariables++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:32:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=(tableau.getEntry(i,j)/1000);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove((int)columnsToDrop.get(i)+"/logout");
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
+columnLabels.remove("\nDealer has: \n"+(int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
+if(columnsToDrop.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
+if(columnsToDrop.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
+if(columnsToDrop.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+columnsToDrop.add(0);
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+assert (columnsToDrop!=null);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+assert (columnsToDrop!=null);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+assert (columnsToDrop!=null);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+assert (columnsToDrop!=null);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+assert (columnsToDrop!=null);
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+assert (columnsToDrop!=null);
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+assert (columnsToDrop!=null);
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j)+1;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null||"查看红包".equals(getBasicRow(col))){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1||"查看红包".equals(getNumObjectiveFunctions())){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1||getNumObjectiveFunctions()==3){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null||getBasicRow(col)==3){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(columnsToDrop!=null&&!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/4226/pattern-ver1-serial/src.main.java.org.walkmod.javalang.walkers.ChangeLogVisitor.java-visit.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()<0||getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)<0||getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+this.numArtificialVariables=0;
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+this.numArtificialVariables=0;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+columnsToDrop.remove(columnsToDrop.get(0));
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/5778/pattern-ver1-serial/src.LinkedList.java-main.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null||getBasicRow(col)==0){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1||getNumObjectiveFunctions()==0){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+if(columnsToDrop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null||getBasicRow(col)>9){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1||getNumObjectiveFunctions()>9){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1&&getNumObjectiveFunctions()<4000000){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null&&getBasicRow(col)<4000000){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null||getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null&&getBasicRow(col)!=9999){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(getNumObjectiveFunctions()==1&&getNumObjectiveFunctions()!=9999){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
-if(getNumObjectiveFunctions()==1){
+if(1>0&&getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+assert (entry>=0):"Receive a negative tratment";
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:38:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)<=0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=Double.MIN_VALUE;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2819/pattern-ver1-serial/src.main.java.quickml.supervised.classifier.decisionTree.TreeBuilder.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+assert (columnsToDrop!=null):"Appointments day is not allowed to be null!";
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+assert (entry!=0):"Receive a size tratment";
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
+if(columnsToDrop.isEmpty()){
+columnsToDrop=null;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(columnsToDrop==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(columnsToDrop==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(tableau==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(col>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(entry>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
+if(columnsToDrop==null){
+columnsToDrop=new ArrayList<>();
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop==null){
+columnsToDrop=new ArrayList<>();
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
+if(columnsToDrop==null){
+columnsToDrop=new ArrayList<>();
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
+if(columnsToDrop==null){
+columnsToDrop=new ArrayList<>();
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.ArrayList;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(columnsToDrop==null){
+columnsToDrop=new ArrayList<>();
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(matrix[i-1][col++]<0){
+matrix[i-1][col++]=0;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+if(matrix[i-1][col++]<0){
+matrix[i-1][col++]=0;
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(matrix[i-1][col++]<0){
+matrix[i-1][col++]=0;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+this.numArtificialVariables=0;
+if(this.numArtificialVariables<0){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(col<=0){
+col=1;
+}
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(columnsToDrop!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(columnsToDrop!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(matrix==null){
+return ;
+}
+if(columnsToDrop==null){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(matrix==null){
+return ;
+}
+if(columnsToDrop==null){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+this.tableau=new Array2DRowRealMatrix(matrix);
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+this.tableau=new Array2DRowRealMatrix(matrix);
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:43:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+this.tableau=new Array2DRowRealMatrix(matrix);
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0,i-1);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i-1,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0,i-1);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j-1);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:43:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0-1,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i-1,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
- final double entry=tableau.getEntry(0,i);
+ final double entry=tableau.getEntry(0-1,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j-1);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(columnsToDrop.equals("NAME")){
+return ;
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
+if(columnsToDrop.equals("NAME")){
+return ;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
+if(columnsToDrop.equals("NAME")){
+return ;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
+if(columnsToDrop.equals("NAME")){
+return ;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(columnsToDrop.equals("NAME")){
+return ;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 columnLabels.remove((int)columnsToDrop.get(i));
+if(columnsToDrop.equals("NAME")){
+return ;
+}
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 columnsToDrop.add(i);
+if(columnsToDrop.equals("NAME")){
+return ;
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+if(columnsToDrop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 columnsToDrop.add(col);
+if(columnsToDrop.equals("NAME")){
+return ;
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(this.tableau==null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+this.numArtificialVariables=0;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+this.numArtificialVariables=0;
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+this.numArtificialVariables=0;
 }
+this.numArtificialVariables=0;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
-if(getBasicRow(col)==null){
+if(getBasicRow(col)==null&&!getBasicRow(col).equals("")){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
-columnsToDrop.add(col);
+columnsToDrop.add(i);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:45:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(this.tableau!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(this.tableau!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+if(columnsToDrop!=null){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0||"查看红包".equals(Precision.compareTo(entry,0.0,maxUlps))){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0||Precision.compareTo(entry,0.0,maxUlps)==3){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+columnLabels.remove((int)columnsToDrop.get(i));
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+columnLabels.remove((int)columnsToDrop.get(i));
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+columnLabels.remove((int)columnsToDrop.get(i));
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
+if(columnsToDrop.size()==0){
+columnsToDrop.add(0);
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/7890/pattern-ver1-serial/app.src.main.java.me.anon.lib.helper.MigrationHelper.java-performMigration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop.size()==0){
+columnsToDrop.add(0);
+}
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/7890/pattern-ver1-serial/app.src.main.java.me.anon.lib.helper.MigrationHelper.java-performMigration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)<0||Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(this.numArtificialVariables!=0){
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(true){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0==false){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0||Precision.compareTo(entry,0.0,maxUlps)==Long.MIN_VALUE){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+if(getBasicRow(col)==12){
+return ;
+}else {
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+}
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0||Precision.compareTo(entry,0.0,maxUlps)==0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:48:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0||Precision.compareTo(entry,0.0,maxUlps)>9){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:48:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(this.numArtificialVariables!=0){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:48:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
+columnLabels.remove((int)columnsToDrop.get(i));
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:49:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+columnLabels.remove((int)columnsToDrop.get(i));
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
-columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
+matrix[i-1][col++]=tableau.getEntry(i,j)*2;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
+this.numArtificialVariables=0*2;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0&&Precision.compareTo(entry,0.0,maxUlps)<4000000){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Double.isNaN(Precision.compareTo(entry,0.0,maxUlps))){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0==true){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(Precision.compareTo(entry,0.0,maxUlps)>0&&Precision.compareTo(entry,0.0,maxUlps)!=9999){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
-if(Precision.compareTo(entry,0.0,maxUlps)>0){
+if(0>0&&Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
+if(matrix==null){
+throw new IllegalStateException("User isn't registered! "+columnsToDrop);
+}
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+if(getBasicRow(col)==null){
+columnsToDrop.add(col);
+}
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
+if(this.tableau!=new Array2DRowRealMatrix(matrix)){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop!=null){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7443/pattern-ver1-serial/app.src.main.java.com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.java-setCharacteristicNotification.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+if(columnsToDrop!=null){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V38/4517/pattern-ver1-serial/alexandria.app.src.main.java.it.jaschke.alexandria.MainActivity.java-restoreActionBar.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:51:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+if(columnsToDrop!=null){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V38/4517/pattern-ver1-serial/alexandria.app.src.main.java.it.jaschke.alexandria.MainActivity.java-restoreActionBar.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+haveBreadCrumbs=true;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+haveBreadCrumbs=true;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:52:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+haveBreadCrumbs=true;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
+haveBreadCrumbs=true;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
+haveBreadCrumbs=true;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+haveBreadCrumbs=true;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+boolean haveBreadCrumbs=false;
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
+if(!columnsToDrop.contains(j)&&haveBreadCrumbs){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+haveBreadCrumbs=true;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
+if(Precision.compareTo(entry,0.0,maxUlps)==12){
+return ;
+}else {
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
+}
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
+if(columnsToDrop!=null){
 columnsToDrop.add(0);
+}
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
-this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/1112/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOSnapshotOperations.java-createGroupSnapshots.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+synchronized(this){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(matrix[i]==null){
+throw new IllegalArgumentException("Failed to get an icon for "+columnsToDrop.getClass().getName());
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/995/pattern-ver1-serial/libtech.RenderLightmap.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
+if(matrix[i]==null){
+throw new IllegalArgumentException("Failed to get an icon for "+columnsToDrop.getClass().getName());
+}
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/995/pattern-ver1-serial/libtech.RenderLightmap.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
+if(matrix[j]==null){
+throw new IllegalArgumentException("Failed to get an icon for "+columnsToDrop.getClass().getName());
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/995/pattern-ver1-serial/libtech.RenderLightmap.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+if(columnsToDrop.size()>0){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+}
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4773/pattern-ver1-serial/GUI.src.main.block.DraggableRect.java-setChild.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
-matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
-if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
+if(!columnsToDrop.contains(j)){
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+matrix[i-1][col++]=tableau.getEntry(i,j);
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
+long startTime=System.currentTimeMillis();
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
+long startTime=System.currentTimeMillis();
 columnsToDrop.add(i);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
+long startTime=System.currentTimeMillis();
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
+long startTime=System.currentTimeMillis();
 columnsToDrop.add(col);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
+long startTime=System.currentTimeMillis();
 columnLabels.remove((int)columnsToDrop.get(i));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
+long startTime=System.currentTimeMillis();
 matrix[i-1][col++]=tableau.getEntry(i,j);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
+long startTime=System.currentTimeMillis();
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
+long startTime=System.currentTimeMillis();
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
+long startTime=System.currentTimeMillis();
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
+if(tableau!=null){
 this.tableau=new Array2DRowRealMatrix(matrix);
+}
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/64/pattern-ver1-serial/app.src.main.java.com.example.scame.lighttube.presentation.fragments.ChannelVideosFragment.java-onSaveInstanceState.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 3, INS : 0, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
+if(tableau!=null){
 this.numArtificialVariables=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/64/pattern-ver1-serial/app.src.main.java.com.example.scame.lighttube.presentation.fragments.ChannelVideosFragment.java-onSaveInstanceState.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 3, INS : 0, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
-columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
 this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 11, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java[323,367]
------------Candidate---------------
 protected void dropPhase1Objective(){
 if(getNumObjectiveFunctions()==1){
 return ;
 }
 List<Integer> columnsToDrop=new ArrayList<Integer>();
 columnsToDrop.add(0);
 for(int i=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
  final double entry=tableau.getEntry(0,i);
 if(Precision.compareTo(entry,0.0,maxUlps)>0){
 columnsToDrop.add(i);
 }
 }
 for(int i=0;i<getNumArtificialVariables();i++){
 int col=i+getArtificialVariableOffset();
 if(getBasicRow(col)==null){
 columnsToDrop.add(col);
 }
 }
 double[][] matrix=new double[getHeight()-1][getWidth()-columnsToDrop.size()];
 for(int i=1;i<getHeight();i++){
 int col=0;
 for(int j=0;j<getWidth();j++){
 if(!columnsToDrop.contains(j)){
 matrix[i-1][col++]=tableau.getEntry(i,j);
 }
 }
 }
 for(int i=columnsToDrop.size()-1;i>=0;i--){
 columnLabels.remove((int)columnsToDrop.get(i));
 }
-this.tableau=new Array2DRowRealMatrix(matrix);
 this.numArtificialVariables=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 11, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 08:56:05 CDT
--------------- END -----------------
Location : org.apache.commons.math.util.MathUtils.checkNotNull:[330, 333]#0.24253562503633297
Compute Candidate : 2019.09.06 AD at 08:56:45 CDT - 2019.09.06 AD at 09:00:37 CDT , PNumber : 11419, CandNumber : 39 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:00:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(o!=null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+checkNotNull(o);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:02:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+if(o==null){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+if(o==null){
+return ;
+}
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(o.equals(null)){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:02:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+if("index".equals(o)){
+return ;
+}
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+if(o.equals("TIME")){
+return ;
+}
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+if("&null".equals(o)){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+if(o.equals("DATETIME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+o=o;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(true){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
+int a=0;
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+int a=0;
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
+String OUTSTRING="";
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+String OUTSTRING="";
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
+int a=1;
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+int a=1;
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
+boolean b=true;
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+boolean b=true;
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+assert (o!=null);
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+if(o!=null){
+if(o==null){
+throw new NullArgumentException();
+}
+}
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public static void checkNotNull(Object o) throws NullArgumentException{
+if(o.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+assert (o!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:03:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(o==null||"查看红包".equals(o)){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(o==null||o==""){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/7341/pattern-ver1-serial/log210_webproject_BDD.src.RechercheLivre.java-RechercheLivre.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(o==null||o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V18/6092/pattern-ver1-serial/app.src.main.java.org.andstatus.app.timeline.Timeline.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+if(o.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+assert (o!=null):"Appointments day is not allowed to be null!";
 if(o==null){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+if(o.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(o==null){
 throw new NullArgumentException();
+}
+if(o.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
-if(o==null){
+if(o==null&&!o.equals("")){
 throw new NullArgumentException();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
 if(o==null){
 throw new NullArgumentException();
+}
+if(o.equals("INFO")){
+return ;
+}
+if(o.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/util/MathUtils.java[322,333]
------------Candidate---------------
 public static void checkNotNull(Object o) throws NullArgumentException{
+long startTime=System.currentTimeMillis();
 if(o==null){
 throw new NullArgumentException();
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:04:30 CDT
--------------- END -----------------
Location : org.apache.commons.math.linear.Array2DRowRealMatrix.Array2DRowRealMatrix:[73, 74, 75]#0.24253562503633297
Compute Candidate : 2019.09.06 AD at 09:05:13 CDT - 2019.09.06 AD at 09:08:31 CDT , PNumber : 11283, CandNumber : 23 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+synchronized(this){
 copyIn(d);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:08:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+d=d;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+int a=0;
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+String OUTSTRING="";
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+if(equals(d)){
+return ;
+}
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+int a=1;
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:10:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+boolean b=true;
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+if(d==null){
+return ;
+}
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+assert (d!=null);
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+if(d!=null){
+copyIn(d);
+}
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+assert (d!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
 copyIn(d);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+assert (d!=null):"Appointments day is not allowed to be null!";
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+for(int i=0;i<24;i++){
 copyIn(d);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+long startTime=System.currentTimeMillis();
 copyIn(d);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[59,75]
------------Candidate---------------
 public Array2DRowRealMatrix(double[][] d) throws DimensionMismatchException,NoDataException,NullArgumentException{
+for(int l=0;l<24;l++){
+d[10][l]=0;
+}
 copyIn(d);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 09:11:38 CDT
--------------- END -----------------
Location : org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix:[261, 262, 265, 268, 269, 270, 274, 275, 278, 279, 280, 283, 285, 289]#0.24253562503633297
Compute Candidate : 2019.09.06 AD at 09:12:19 CDT - 2019.09.06 AD at 10:19:26 CDT , PNumber : 11446, CandNumber : 481 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+return ;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
+return ;
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+return ;
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+continue;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+return ;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
+ int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
- final int nCols=subMatrix[0].length;
+ int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>1){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:19:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>1){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>=0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>=0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;row<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;column<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
+ final long nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<=data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+data=new double[subMatrix.length][nCols];
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:20:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+data=new double[subMatrix.length][nCols];
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Collection;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,myUid;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,DEFAULT_TIMEOUT2;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i>data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,MAX_SERVICE_NODES;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+break;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:21:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length==nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows<=0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols<=0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
+ final float nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i-row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+nRows],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+nCols],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+i],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+column],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(subMatrix==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(row==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(column==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(row==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(column==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row<0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column<0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows>=0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols>=0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row!=0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column!=0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:22:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[1],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:23:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows!=0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:23:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols!=0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:23:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
- final int nCols=subMatrix[0].length;
+ final Integer nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:23:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
+ final Integer nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+if(row>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:23:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+if(column>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,localLevel;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length<nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows>0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols>0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length>nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;++i,new ArrayList<KeyBinding>()){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
+data=new double[(subMatrix.length)][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
+data=new double[(nCols)][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1588/pattern-ver1-serial/app.src.main.java.dorespek.lenlroosterapp.Rooster.java-setDagen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1588/pattern-ver1-serial/app.src.main.java.dorespek.lenlroosterapp.Rooster.java-setDagen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[nRows],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[nCols],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:24:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[row],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:25:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[column],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:25:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,_afterComposeMethodCache;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row,data);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4052/pattern-ver1-serial/01_brick.core.src.hu.bp.gdx.game.BrickScreen.java-BrickScreen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column,data);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4052/pattern-ver1-serial/01_brick.core.src.hu.bp.gdx.game.BrickScreen.java-BrickScreen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.List;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,mActions;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;++row){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;++column){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
+ final int nRows=data.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/4812/pattern-ver1-serial/src.org.rascalmpl.library.experiments.Compiler.RVM.Interpreter.Thrown.java-printStackTrace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
+data=new double[data.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/4812/pattern-ver1-serial/src.org.rascalmpl.library.experiments.Compiler.RVM.Interpreter.Thrown.java-printStackTrace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,mRelationId;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+MathUtils.checkNotNull(subMatrix);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5087/pattern-ver1-serial/src.main.java.ch.vorburger.raspberry.turtle.Turtle.java-haltInSeconds.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;--i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3078/pattern-ver1-serial/src.PairCell.java-calculateScore.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
+ int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
- final int nCols=subMatrix[0].length;
+ int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>=0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>=0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/3236/pattern-ver1-serial/src.main.java.co.arcs.groove.basking.Cli.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
+data=subMatrix;
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+i++;
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+row++;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+i++;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+column++;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+row--;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+row--;
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i++],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,this.data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2698/pattern-ver1-serial/Ant.src.main.graphics.cells.Cells.java-setCell.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+synchronized(this){
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
+data=null;
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+(int)(row)],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
+MathUtils.checkNotNull(subMatrix,null,null);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/2082/pattern-ver1-serial/interview_questions.trees_and_graphs.ValidateBST.java-checkBST.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+row++;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+column++;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+synchronized(this){
 MathUtils.checkNotNull(subMatrix);
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+synchronized(this){
 super.setSubMatrix(subMatrix,row,column);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:27:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+synchronized(this){
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,continentName,countryCode;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(equals(subMatrix)){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(equals(row)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if(equals(column)){
+return ;
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
+if(equals(subMatrix)){
+return ;
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(equals(nCols)){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(equals(nRows)){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(equals(nCols)){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+if(equals(row)){
+return ;
+}
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows<0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols<0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+while(true){
+
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+while(true){
+
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0,userEmail;i<data.length;++i,++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+synchronized(this){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+synchronized(this){
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+synchronized(this){
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+synchronized(this){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
+synchronized(this){
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if(subMatrix==null){
+return ;
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:32:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if(subMatrix==null){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(subMatrix==null){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix==null){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data==null){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+if(data==null){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;++i,Charset.forName("UTF-8")){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+if(subMatrix!=null){
 MathUtils.checkNotNull(subMatrix);
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(row==column){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(column==row){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:34:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(row==nRows){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:34:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(nRows==subMatrix.length){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:35:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(nCols==subMatrix[0].length){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
+if(nRows==subMatrix.length){
+return ;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
+if(nCols==subMatrix[0].length){
+return ;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(nRows==subMatrix.length){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(nCols==subMatrix[0].length){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
+if(subMatrix==null){
+return ;
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(data.equals(null)){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+synchronized(this){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+synchronized(this){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
+synchronized(this){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+synchronized(this){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+if(subMatrix==null){
+return ;
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
+if(subMatrix==null){
+return ;
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
+if(subMatrix==null){
+return ;
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if("index".equals(subMatrix)){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if("index".equals(row)){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if("index".equals(column)){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if("index".equals(subMatrix)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if("index".equals(row)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if("index".equals(column)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+if("index".equals(row)){
+return ;
+}
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if("index".equals(nRows)){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if("index".equals(nCols)){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix.equals("TIME")){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(subMatrix.equals("TIME")){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if("&null".equals(subMatrix)){
+return ;
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if("&null".equals(row)){
+return ;
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if("&null".equals(column)){
+return ;
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if("&null".equals(subMatrix)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if("&null".equals(row)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if("&null".equals(column)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if("&null".equals(nRows)){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if("&null".equals(nCols)){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if(subMatrix.equals("DATETIME")){
+return ;
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if(subMatrix.equals("DATETIME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i-1],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+1+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+row=row;
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+column=column;
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows+row==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows+column==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols+row==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols+column==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows+nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols+nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data.equals("")){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+if(data.equals("")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[1],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(true){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(true){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(true){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(true){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(true){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(row<0){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(column<0){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(row<0){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(nCols<0){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+if(row<0){
+return ;
+}
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+if(data==null){
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data.equals("-1")){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+if(data.equals("-1")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+Arrays.sort(data);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/405/pattern-ver1-serial/twitter-topic-strand-core.src.main.java.twittertopicstrand.util.FileOperations.java-getFiles.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0/2){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0/2){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+int a=0;
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+int a=0;
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+int a=0;
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+int a=0;
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
+int a=0;
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+int a=0;
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+int a=0;
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+int a=0;
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+int a=0;
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix.equals(row)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix.equals(column)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(subMatrix.equals(nRows)){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(subMatrix.equals(nCols)){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+String OUTSTRING="";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+String OUTSTRING="";
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+String OUTSTRING="";
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+String OUTSTRING="";
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
+String OUTSTRING="";
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+String OUTSTRING="";
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+String OUTSTRING="";
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+String OUTSTRING="";
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+String OUTSTRING="";
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+if(subMatrix==null){
+return ;
+}
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
+int MathUtils=5;
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
+int length=5;
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/2063/pattern-ver1-serial/src.minecraft.co.uk.flansmods.common.BlockPlaneWorkbench.java-getBlockTextureFromSideAndMetadata.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.awt.event.WindowEvent;
+
+import java.net.URL;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+if(data==null){
+return ;
+}
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V37/1495/pattern-ver1-serial/src.com.suntc.tictactoe.ClientGui.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
+if(subMatrix.equals(InputStream.class)){
+return ;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+if(subMatrix.equals(InputStream.class)){
+return ;
+}
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(Double.isNaN(row)){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(Double.isNaN(column)){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(Double.isNaN(nRows)){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(Double.isNaN(nCols)){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;Math.abs(++i)){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+int indexSelection=0;
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+int indexSelection=0;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Arrays;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+System.arraycopy(subMatrix[i],0,data[i+row-1],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(row!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(column!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+int a=1;
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+int a=1;
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+int a=1;
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+int a=1;
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
+int a=1;
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+int a=1;
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+int a=1;
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+int a=1;
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+int a=1;
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+String length="%#.&f";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
+boolean AT_LEAST_ONE_ROW=true;
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
+boolean System=true;
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
+boolean MathUtils=true;
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+boolean b=true;
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+boolean b=true;
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+boolean b=true;
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+boolean b=true;
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
+boolean b=true;
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+boolean b=true;
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+boolean b=true;
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+boolean b=true;
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+boolean b=true;
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data.equals(null)){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0-1){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0-1){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
+MathUtils.checkNotNull(subMatrix);
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+MathUtils.checkNotNull(subMatrix);
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+MathUtils.checkNotNull(subMatrix);
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+MathUtils.checkNotNull(subMatrix);
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+MathUtils.checkNotNull(subMatrix);
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+MathUtils.checkNotNull(subMatrix);
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+MathUtils.checkNotNull(subMatrix);
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+MathUtils.checkNotNull(subMatrix);
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
+MathUtils.checkNotNull(subMatrix);
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+MathUtils.checkNotNull(subMatrix);
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+MathUtils.checkNotNull(subMatrix);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+MathUtils.checkNotNull(subMatrix);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+MathUtils.checkNotNull(subMatrix);
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+MathUtils.checkNotNull(subMatrix);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+MathUtils.checkNotNull(subMatrix);
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+MathUtils.checkNotNull(subMatrix);
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
+MathUtils.checkNotNull(subMatrix);
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+if(!subMatrix.equals("")){
 MathUtils.checkNotNull(subMatrix);
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0||row==Long.MIN_VALUE){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0||column==Long.MIN_VALUE){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0||nRows==Long.MIN_VALUE){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0||nCols==Long.MIN_VALUE){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+MathUtils.checkNotNull(subMatrix);
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+MathUtils.checkNotNull(subMatrix);
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+ final int nRows=subMatrix.length;
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+MathUtils.checkNotNull(subMatrix);
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+try{
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
+}finally{
+MathUtils.checkNotNull(subMatrix);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+assert (subMatrix!=null);
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+assert (subMatrix!=null);
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row,schemaLocation);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column,schemaLocation);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row,schemaLocation);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column,schemaLocation);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(data==null){
 if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row,schemaLocation);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column,schemaLocation);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix!=null){
+if(row>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if(column>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
+MathUtils.checkNotNull(subMatrix);
+ final int nRows=subMatrix.length;
+if(nRows==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
+ final int nCols=subMatrix[0].length;
+if(nCols==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
+data=new double[subMatrix.length][nCols];
+for(int i=0;i<data.length;++i){
+if(subMatrix[i].length!=nCols){
+throw new DimensionMismatchException(subMatrix[i].length,nCols);
+}
+System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+if(subMatrix!=null){
+if(data==null){
+if(row>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if(column>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
+MathUtils.checkNotNull(subMatrix);
+ final int nRows=subMatrix.length;
+if(nRows==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
+ final int nCols=subMatrix[0].length;
+if(nCols==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
+data=new double[subMatrix.length][nCols];
+for(int i=0;i<data.length;++i){
+if(subMatrix[i].length!=nCols){
+throw new DimensionMismatchException(subMatrix[i].length,nCols);
+}
+System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
+}else {
+super.setSubMatrix(subMatrix,row,column);
+}
+}
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+if(subMatrix!=null){
+if(subMatrix[i].length!=nCols){
+throw new DimensionMismatchException(subMatrix[i].length,nCols);
+}
+System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+assert (nRows!=subMatrix.length);
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+assert (nCols!=subMatrix[0].length);
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(subMatrix.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+assert (subMatrix!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
+assert (subMatrix!=null);
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data.equals("655")){
+System.out.println();
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix!=null){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
+for(int i=0;i<data.length;Math.max(++i,0)){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(data==null||"查看红包".equals(data)){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0||"查看红包".equals(row)){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0||"查看红包".equals(column)){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0||"查看红包".equals(nRows)){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0||"查看红包".equals(nCols)){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols||"查看红包".equals(subMatrix[i].length)){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0||row==3){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0||column==3){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0||nRows==3){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols||subMatrix[i].length==3){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0||nCols==3){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+synchronized(this){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
+}
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row<0||row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column<0||column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows<0||nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length<0||subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols<0||nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
+data=new double[subMatrix.length][nCols];
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+data=new double[subMatrix.length][nCols];
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+data=new double[subMatrix.length][nCols];
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+data=new double[subMatrix.length][nCols];
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+data=new double[subMatrix.length][nCols];
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+super.setSubMatrix(subMatrix,row,column);
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(true){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols||subMatrix[i].length==Long.MIN_VALUE){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
-super.setSubMatrix(subMatrix,row,column);
 }
+super.setSubMatrix(subMatrix,row,column);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(nRows==12){
+return ;
+}else {
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(nCols==12){
+return ;
+}else {
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0||row==0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0||column==0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0||nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0||nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols||subMatrix[i].length==0){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
+if(subMatrix.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if(subMatrix.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0||row>9){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0||column>9){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0||nRows>9){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0||nCols>9){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols||subMatrix[i].length>9){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+data=new double[subMatrix.length][nCols];
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+super.setSubMatrix(subMatrix,row,column);
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0&&row<4000000){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0&&column<4000000){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0&&nRows<4000000){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0&&nCols<4000000){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols&&subMatrix[i].length<4000000){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(data==null||data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(Double.isNaN(subMatrix[i].length)){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0&&row!=9999){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0&&column!=9999){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0&&nRows!=9999){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0&&nCols!=9999){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols&&subMatrix[i].length!=9999){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(0>0&&row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(nCols>0&&subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(0>0&&column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(0>0&&nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(0>0&&nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+assert (row>=0):"Receive a negative tratment";
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+assert (column>=0):"Receive a negative tratment";
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+assert (row>=0):"Receive a negative tratment";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+assert (column>=0):"Receive a negative tratment";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+assert (row>=0):"Receive a negative tratment";
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+assert (column>=0):"Receive a negative tratment";
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+assert (nRows>=0):"Receive a negative tratment";
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+assert (nCols>=0):"Receive a negative tratment";
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(data!=null&&(data==null)){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(data!=null&&(row>0)){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(data!=null&&(column>0)){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(data!=null&&(nRows==0)){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(data!=null&&(nCols==0)){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(data!=null&&(subMatrix[i].length!=nCols)){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+data=new double[subMatrix.length][nCols];
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/4871/pattern-ver1-serial/oneToDo.src.main.java.com.vector.onetodo.AddScheduleBeforeFragment.java-onViewCreated.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
+super.setSubMatrix(subMatrix,row,column);
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+assert (subMatrix!=null):"Appointments day is not allowed to be null!";
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+assert (subMatrix!=null):"Appointments day is not allowed to be null!";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+assert (row!=0):"Receive a size tratment";
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+assert (column!=0):"Receive a size tratment";
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+assert (row!=0):"Receive a size tratment";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+assert (column!=0):"Receive a size tratment";
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
+assert (row!=0):"Receive a size tratment";
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
+assert (column!=0):"Receive a size tratment";
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+assert (nRows!=0):"Receive a size tratment";
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+assert (nCols!=0):"Receive a size tratment";
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0||row=='"'){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0||column=='"'){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0||nRows=='"'){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
+if(nCols==0||nCols=='"'){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
+if(subMatrix[i].length!=nCols||subMatrix[i].length=='"'){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(row>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(column>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(nCols>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(row>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
+if(column>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
+if(subMatrix==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+if(subMatrix!=null){
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/7166/pattern-ver1-serial/src.main.java.net.dandielo.core.items.dItem.java-addAttribute.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(column<0){
+return ;
+}
+if(column>=row){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(column<0){
+return ;
+}
+if(column>=row){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(row<0){
+return ;
+}
+if(row>=column){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(column<0){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(column>=nRows){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(column<0){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(column>=nCols){
+return ;
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(row<0){
+return ;
+}
+if(row>=column){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+boolean haveBreadCrumbs=false;
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0&&haveBreadCrumbs){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(row==12){
+return ;
+}else {
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
+if(column==12){
+return ;
+}else {
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+ final int nCols=subMatrix[0].length;
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
- final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
+if(row>0-1){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
-if(column>0){
+if(column>0-1){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5164/pattern-ver1-serial/roguelikeengine-libgdx.src.com.game.libgdx.roguelikeengine.Bullet.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(subMatrix.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(subMatrix.equals("NAME")){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(subMatrix.equals("CALL_RECEIVED_AT")){
+return ;
+}
 super.setSubMatrix(subMatrix,row,column);
+if(subMatrix.equals("NAME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+if(data==null){
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
+if(data==null&&!data.equals("")){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+if(data!=null){
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(subMatrix.equals("INFO")){
+return ;
+}
+if(subMatrix.equals("UNIT")){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if(subMatrix.equals("INFO")){
+return ;
+}
+if(subMatrix.equals("UNIT")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+data=new double[subMatrix.length][nCols];
+for(int i=0;i<data.length;++i){
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(nCols==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
-}
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+if(nCols==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
+if(nCols==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
+}
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(nRows==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
-if(nCols==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
-}
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
+}
+if(nCols==0){
+throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
+if(data==null){
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+if(column>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
-}
-if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+if(subMatrix!=null){
 MathUtils.checkNotNull(subMatrix);
+}else {
+MathUtils.checkNotNull("");
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+if(subMatrix!=null){
 MathUtils.checkNotNull(subMatrix);
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/7166/pattern-ver1-serial/src.main.java.net.dandielo.core.items.dItem.java-addAttribute.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if(row>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+if(column>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
-}
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+if(row>0){
+throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data==null){
+throw new IllegalStateException("User isn't registered! "+subMatrix);
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(data==null){
+throw new IllegalStateException("User isn't registered! "+nCols);
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
+}
+if(data==null){
+throw new IllegalStateException("User isn't registered! "+subMatrix);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+boolean succeeded=false;
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
+if(!succeeded){
+return ;
+}
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+succeeded=true;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
+boolean haveBreadCrumbs=false;
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
+if(nRows==0&&haveBreadCrumbs){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+haveBreadCrumbs=true;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(row==3){
+System.out.println("debug");
+}
 super.setSubMatrix(subMatrix,row,column);
+if(row==3){
+System.out.println("debug");
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+if(column==3){
+System.out.println("debug");
+}
 super.setSubMatrix(subMatrix,row,column);
+if(column==3){
+System.out.println("debug");
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(row==3){
+System.out.println("debug");
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+if(row==3){
+System.out.println("debug");
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+if(column==3){
+System.out.println("debug");
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+if(column==3){
+System.out.println("debug");
+}
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+if(subMatrix[i].length!=nCols){
+throw new DimensionMismatchException(subMatrix[i].length,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+if(nRows==0&&nCols==0&&data.equals("")){
+return ;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/1175/pattern-ver1-serial/src.com.almalence.opencam.PluginManager.java-addTimestamp.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
+System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
+System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+long startTime=System.currentTimeMillis();
 super.setSubMatrix(subMatrix,row,column);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+long startTime=System.currentTimeMillis();
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
+long startTime=System.currentTimeMillis();
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
+long startTime=System.currentTimeMillis();
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
+for(int l=0;l<24;l++){
+data[10][l]=0;
+}
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+for(int l=0;l<24;l++){
+subMatrix[10][l]=0;
+}
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
+for(int l=0;l<24;l++){
+subMatrix[10][l]=0;
+}
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4531/pattern-ver1-serial/SmartGrid.src.SmartNode.java-minimizePAR.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
-MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/3556/pattern-ver1-serial/src.net.tootallnate.websocket.WebSocketClient.java-close.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 11, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
+if(data!=null){
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 3, INS : 0, DEL : 11
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
-data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/7464/pattern-ver1-serial/myExpenses.src.main.java.org.totschnig.myexpenses.activity.ExpenseEdit.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 11, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
-}
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
-if(nRows==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
-}
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 11, INS : 0, DEL : 21
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
-}
-if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
-}
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 33, UPD : 11, INS : 0, DEL : 22
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
+synchronized(this){
 if(row>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
 }
 if(column>0){
 throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
 }
 MathUtils.checkNotNull(subMatrix);
  final int nRows=subMatrix.length;
 if(nRows==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
 }
  final int nCols=subMatrix[0].length;
 if(nCols==0){
 throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
 }
 data=new double[subMatrix.length][nCols];
 for(int i=0;i<data.length;++i){
 if(subMatrix[i].length!=nCols){
 throw new DimensionMismatchException(subMatrix[i].length,nCols);
 }
 System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
+}
 }
 }else {
 super.setSubMatrix(subMatrix,row,column);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 66, UPD : 66, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
 if(data==null){
-if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
-}
-if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
-}
-MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
-if(nRows==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
-}
- final int nCols=subMatrix[0].length;
-if(nCols==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
-}
-data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
-throw new DimensionMismatchException(subMatrix[i].length,nCols);
-}
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
-}
-}else {
 super.setSubMatrix(subMatrix,row,column);
+}else {
+MathUtils.checkNotNull(subMatrix);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 70, UPD : 70, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_42_buggy/src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java[257,289]
------------Candidate---------------
 @Override public void setSubMatrix(double[][] subMatrix,int row,int column){
-if(data==null){
-if(row>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,row);
-}
-if(column>0){
-throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,column);
-}
-MathUtils.checkNotNull(subMatrix);
- final int nRows=subMatrix.length;
-if(nRows==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
-}
- final int nCols=subMatrix[0].length;
-if(nCols==0){
-throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
-}
-data=new double[subMatrix.length][nCols];
-for(int i=0;i<data.length;++i){
-if(subMatrix[i].length!=nCols){
-throw new DimensionMismatchException(subMatrix[i].length,nCols);
-}
-System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
-}
-}else {
-super.setSubMatrix(subMatrix,row,column);
-}
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 73, UPD : 0, INS : 0, DEL : 73
Failing Tests:[org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable]
---------START : 2019.09.06 AD at 05:38:42 CDT
---------TIME : 2019.09.06 AD at 10:38:43 CDT
--------------- END -----------------
Finish : math-42 > patch : 0 | Start : Fri Sep 06 05:38:42 CDT 2019 | End : 2019.09.06 AD at 10:38:43 CDT
